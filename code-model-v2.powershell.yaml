schemas:
  access_control_policy_list_intent_response: &ref_244
    type: object
    description: Response object for intentful operation of access_control_policys
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_42
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_43
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_intent_response.entities
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          csharp:
            name: Entities
            description: ''
            required: false
          default:
            name: entities
            description: ''
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AccessControlPolicyListIntentResponse
        description: Response object for intentful operation of access_control_policys
        fullname: Nutanix.Powershell.Models.AccessControlPolicyListIntentResponse
        interfaceName: IAccessControlPolicyListIntentResponse
        namespace: Nutanix.Powershell.Models
      default:
        name: access_control_policy_list_intent_response
        description: Response object for intentful operation of access_control_policys
  access_control_policy_list_metadata: &ref_241
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_44
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_metadata.filter
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          csharp:
            name: Filter
            description: The filter in FIQL syntax used for the results.
            required: false
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_45
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: access_control_policy
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - access_control_policy
          details:
            csharp:
              name: .access_control_policy_list_metadata.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_46
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_metadata.length
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          csharp:
            name: Length
            description: The number of records to retrieve relative to the offset
            required: false
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_47
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_metadata.offset
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          csharp:
            name: Offset
            description: Offset from the start of the entity list
            required: false
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_48
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_list_metadata.sort_attribute
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          csharp:
            name: SortAttribute
            description: The attribute to perform sort on
            required: false
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
    readOnly: false
    required: []
    title: Metadata for access_control_policy list
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AccessControlPolicyListMetadata
        description: >
          All api calls that return a list will have this metadata block as
          input
        fullname: Nutanix.Powershell.Models.AccessControlPolicyListMetadata
        interfaceName: IAccessControlPolicyListMetadata
        namespace: Nutanix.Powershell.Models
      default:
        name: access_control_policy_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  access_control_policy_reference: &ref_10
    type: object
    description: The reference to a access_control_policy
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_50
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_49
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: access_control_policy
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - access_control_policy
          details:
            csharp:
              name: .access_control_policy_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_51
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a access_control_policy
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AccessControlPolicyReference
        description: The reference to a access_control_policy
        fullname: Nutanix.Powershell.Models.AccessControlPolicyReference
        interfaceName: IAccessControlPolicyReference
        namespace: Nutanix.Powershell.Models
      default:
        name: access_control_policy_reference
        description: The reference to a access_control_policy
  access_control_policy_status: &ref_245
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_52
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_53
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_54
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: access_control_policy
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - access_control_policy
          details:
            csharp:
              name: .access_control_policy_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      state:
        schema: &ref_55
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .access_control_policy_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .access_control_policy_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AccessControlPolicyStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Nutanix.Powershell.Models.AccessControlPolicyStatus
        interfaceName: IAccessControlPolicyStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: access_control_policy_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  availability_zone_reference: &ref_20
    type: object
    description: The reference to a availability_zone
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_57
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .availability_zone_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_56
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: availability_zone
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - availability_zone
          details:
            csharp:
              name: .availability_zone_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_58
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .availability_zone_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a availability_zone
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AvailabilityZoneReference
        description: The reference to a availability_zone
        fullname: Nutanix.Powershell.Models.AvailabilityZoneReference
        interfaceName: IAvailabilityZoneReference
        namespace: Nutanix.Powershell.Models
      default:
        name: availability_zone_reference
        description: The reference to a availability_zone
  cluster_reference: &ref_21
    type: object
    description: The reference to a cluster
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_60
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .cluster_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_59
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: cluster
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - cluster
          details:
            csharp:
              name: .cluster_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_61
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .cluster_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a cluster
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: ClusterReference
        description: The reference to a cluster
        fullname: Nutanix.Powershell.Models.ClusterReference
        interfaceName: IClusterReference
        namespace: Nutanix.Powershell.Models
      default:
        name: cluster_reference
        description: The reference to a cluster
  custom_generic_key_value_pair: &ref_2
    type: object
    description: Generic key value pair used for custom attributes
    additionalProperties: &ref_0
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: custom_generic_key_value_pair.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: custom_generic_key_value_pair.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties: {}
    readOnly: false
    required: []
    title: Generic key value pair
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: CustomGenericKeyValuePair
        description: Generic key value pair used for custom attributes
        fullname: Nutanix.Powershell.Models.CustomGenericKeyValuePair
        interfaceName: ICustomGenericKeyValuePair
        namespace: Nutanix.Powershell.Models
      default:
        name: custom_generic_key_value_pair
        description: Generic key value pair used for custom attributes
  custom_generic_key_value_pair.additionalItemType: *ref_0
  directory_service_reference: &ref_1
    type: object
    description: The reference to a directory_service
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_63
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .directory_service_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_62
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: directory_service
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - directory_service
          details:
            csharp:
              name: .directory_service_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_64
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .directory_service_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a directory_service
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: DirectoryServiceReference
        description: The reference to a directory_service
        fullname: Nutanix.Powershell.Models.DirectoryServiceReference
        interfaceName: IDirectoryServiceReference
        namespace: Nutanix.Powershell.Models
      default:
        name: directory_service_reference
        description: The reference to a directory_service
  directory_service_user: &ref_8
    type: object
    description: A Directory Service user.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      directory_service_reference:
        schema: *ref_1
        description: |
          Directory service reference if the user type is directory service.
        serializedName: directory_service_reference
        extensions: {}
        details:
          csharp:
            name: DirectoryServiceReference
            description: |
              Directory service reference if the user type is directory service.
            required: false
          default:
            name: directory_service_reference
            description: |
              Directory service reference if the user type is directory service.
            required: false
      user_principal_name:
        schema: &ref_65
          type: string
          description: |
            The UserPrincipalName of the user from the directory service.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 104
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .directory_service_user.user_principal_name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_user.user_principal_name
              description: ''
        description: |
          The UserPrincipalName of the user from the directory service.
        serializedName: user_principal_name
        extensions: {}
        details:
          csharp:
            name: UserPrincipalName
            description: |
              The UserPrincipalName of the user from the directory service.
            required: false
          default:
            name: user_principal_name
            description: |
              The UserPrincipalName of the user from the directory service.
            required: false
    readOnly: false
    required: []
    title: Directory Service user Definition.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: DirectoryServiceUser
        description: A Directory Service user.
        fullname: Nutanix.Powershell.Models.DirectoryServiceUser
        interfaceName: IDirectoryServiceUser
        namespace: Nutanix.Powershell.Models
      default:
        name: directory_service_user
        description: A Directory Service user.
  directory_service_user_status: &ref_11
    type: object
    description: A Directory Service user.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      default_user_principal_name:
        schema: &ref_66
          type: string
          description: >
            The Default UserPrincipalName of the user from the directory
            service. This is of format samAccountName@domain_name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 104
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .directory_service_user_status.default_user_principal_name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_user_status.default_user_principal_name
              description: ''
        description: >
          The Default UserPrincipalName of the user from the directory service.
          This is of format samAccountName@domain_name.
        serializedName: default_user_principal_name
        extensions: {}
        details:
          csharp:
            name: DefaultUserPrincipalName
            description: >
              The Default UserPrincipalName of the user from the directory
              service. This is of format samAccountName@domain_name.
            required: false
          default:
            name: default_user_principal_name
            description: >
              The Default UserPrincipalName of the user from the directory
              service. This is of format samAccountName@domain_name.
            required: false
      directory_service_reference:
        schema: *ref_1
        description: |
          Directory service reference if the user type is directory service.
        serializedName: directory_service_reference
        extensions: {}
        details:
          csharp:
            name: DirectoryServiceReference
            description: |
              Directory service reference if the user type is directory service.
            required: false
          default:
            name: directory_service_reference
            description: |
              Directory service reference if the user type is directory service.
            required: false
      user_principal_name:
        schema: &ref_67
          type: string
          description: >
            The UserPrincipalName of the user from the directory service. It
            will be same as default user principal name if no upn suffix is
            enabled for user logon name in directory service.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 104
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .directory_service_user_status.user_principal_name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .directory_service_user_status.user_principal_name
              description: ''
        description: >
          The UserPrincipalName of the user from the directory service. It will
          be same as default user principal name if no upn suffix is enabled for
          user logon name in directory service.
        serializedName: user_principal_name
        extensions: {}
        details:
          csharp:
            name: UserPrincipalName
            description: >
              The UserPrincipalName of the user from the directory service. It
              will be same as default user principal name if no upn suffix is
              enabled for user logon name in directory service.
            required: false
          default:
            name: user_principal_name
            description: >
              The UserPrincipalName of the user from the directory service. It
              will be same as default user principal name if no upn suffix is
              enabled for user logon name in directory service.
            required: false
    readOnly: false
    required: []
    title: Directory Service user Response.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: DirectoryServiceUserStatus
        description: A Directory Service user.
        fullname: Nutanix.Powershell.Models.DirectoryServiceUserStatus
        interfaceName: IDirectoryServiceUserStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: directory_service_user_status
        description: A Directory Service user.
  disk_address: &ref_22
    type: object
    description: Disk Address.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      adapter_type:
        schema: &ref_68
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - SCSI
              - IDE
              - PCI
              - SATA
              - SPAPR
          details:
            csharp:
              name: .disk_address.adapter_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .disk_address.adapter_type
              description: ''
        description: ''
        serializedName: adapter_type
        extensions: {}
        details:
          csharp:
            name: AdapterType
            description: ''
            required: true
          default:
            name: adapter_type
            description: ''
            required: true
      device_index:
        schema: &ref_69
          type: integer
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .disk_address.device_index
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .disk_address.device_index
              description: ''
        description: ''
        serializedName: device_index
        extensions: {}
        details:
          csharp:
            name: DeviceIndex
            description: ''
            required: true
          default:
            name: device_index
            description: ''
            required: true
    readOnly: false
    required:
      - adapter_type
      - device_index
    title: Disk Address
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: DiskAddress
        description: Disk Address.
        fullname: Nutanix.Powershell.Models.DiskAddress
        interfaceName: IDiskAddress
        namespace: Nutanix.Powershell.Models
      default:
        name: disk_address
        description: Disk Address.
  guest_customization: &ref_23
    type: object
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init
      should be provided. Note that guest customization can currently only be
      set during VM creation. Attempting to change it after creation will result
      in an error. Additional properties can be specified. For example - in the
      context of VM template creation if "override_script" is set to "True" then
      the deployer can upload their own custom script.
    additionalProperties: &ref_3
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: guest_customization.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: guest_customization.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      cloud_init:
        schema: &ref_70
          type: object
          description: >
            If this field is set, the guest will be customized using cloud-init.
            Either user_data or custom_key_values should be provided. If
            custom_key_ves are provided then the user data will be generated
            using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_2
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            meta_data:
              schema: &ref_71
                type: string
                description: >
                  The contents of the meta_data configuration for cloud-init.
                  This can be formatted as YAML or JSON. The value must be
                  base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.cloud_init.meta_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.cloud_init.meta_data
                    description: ''
              description: >
                The contents of the meta_data configuration for cloud-init. This
                can be formatted as YAML or JSON. The value must be base64
                encoded.
              serializedName: meta_data
              extensions: {}
              details:
                csharp:
                  name: MetaData
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
                default:
                  name: meta_data
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
            user_data:
              schema: &ref_72
                type: string
                description: >
                  The contents of the user_data configuration for cloud-init.
                  This can be formatted as YAML, JSON, or could be a shell
                  script. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.cloud_init.user_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.cloud_init.user_data
                    description: ''
              description: >
                The contents of the user_data configuration for cloud-init. This
                can be formatted as YAML, JSON, or could be a shell script. The
                value must be base64 encoded.
              serializedName: user_data
              extensions: {}
              details:
                csharp:
                  name: UserData
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
                default:
                  name: user_data
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - user_data
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationCloudInit
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
              fullname: Nutanix.Powershell.Models.GuestCustomizationCloudInit
              interfaceName: IGuestCustomizationCloudInit
              namespace: Nutanix.Powershell.Models
            default:
              name: .guest_customization.cloud_init
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated using
          these key-value pairs.
        serializedName: cloud_init
        extensions: {}
        details:
          csharp:
            name: CloudInit
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
          default:
            name: cloud_init
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
      is_overridable:
        schema: &ref_73
          type: boolean
          description: Flag to allow override of customization by deployer.
          allOf: []
          anyOf: []
          default: false
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .guest_customization.is_overridable
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .guest_customization.is_overridable
              description: ''
        description: Flag to allow override of customization by deployer.
        serializedName: is_overridable
        extensions: {}
        details:
          csharp:
            name: IsOverridable
            description: Flag to allow override of customization by deployer.
            required: false
          default:
            name: is_overridable
            description: Flag to allow override of customization by deployer.
            required: false
      sysprep:
        schema: &ref_74
          type: object
          description: >
            If this field is set, the guest will be customized using Sysprep.
            Either unattend_xml or custom_key_values should be provided. If
            custom_key_values are provided then the unattended answer file will
            be generated using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_2
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            install_type:
              schema: &ref_75
                type: string
                description: >
                  Whether the guest will be freshly installed using this
                  unattend configuration, or whether this unattend configuration
                  will be applied to a pre-prepared image. Default is
                  "PREPARED".
                allOf: []
                anyOf: []
                default: PREPARED
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - FRESH
                    - PREPARED
                details:
                  csharp:
                    name: .guest_customization.sysprep.install_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.sysprep.install_type
                    description: ''
              description: >
                Whether the guest will be freshly installed using this unattend
                configuration, or whether this unattend configuration will be
                applied to a pre-prepared image. Default is "PREPARED".
              serializedName: install_type
              extensions: {}
              details:
                csharp:
                  name: InstallType
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
                default:
                  name: install_type
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
            unattend_xml:
              schema: &ref_76
                type: string
                description: >
                  This field contains a Sysprep unattend xml definition, as a
                  string. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.sysprep.unattend_xml
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.sysprep.unattend_xml
                    description: ''
              description: >
                This field contains a Sysprep unattend xml definition, as a
                string. The value must be base64 encoded.
              serializedName: unattend_xml
              extensions: {}
              details:
                csharp:
                  name: UnattendXml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
                default:
                  name: unattend_xml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - unattend_xml
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationSysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
              fullname: Nutanix.Powershell.Models.GuestCustomizationSysprep
              interfaceName: IGuestCustomizationSysprep
              namespace: Nutanix.Powershell.Models
            default:
              name: .guest_customization.sysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will be
          generated using these key-value pairs.
        serializedName: sysprep
        extensions: {}
        details:
          csharp:
            name: Sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
          default:
            name: sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
    readOnly: false
    required: []
    title: Guest Customization Configuration for creation/modification request
    writeOnly: false
    extensions:
      x-ntnx-one-of:
        - required:
            - sysprep
        - required:
            - cloud_init
    details:
      csharp:
        name: GuestCustomization
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
        fullname: Nutanix.Powershell.Models.GuestCustomization
        interfaceName: IGuestCustomization
        namespace: Nutanix.Powershell.Models
      default:
        name: guest_customization
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
  guest_customization.additionalItemType: *ref_3
  guest_customization_status: &ref_28
    type: object
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init
      should be provided. Note that guest customization can currently only be
      set during VM creation. Attempting to change it after creation will result
      in an error. Additional properties can be specified. For example - in the
      context of VM template creation if "override_script" is set to "True" then
      the deployer can upload their own custom script.
    additionalProperties: &ref_4
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: guest_customization_status.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: guest_customization_status.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      cloud_init:
        schema: &ref_77
          type: object
          description: >
            If this field is set, the guest will be customized using cloud-init.
            Either user_data or custom_key_values should be provided. If
            custom_key_ves are provided then the user data will be generated
            using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_2
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            meta_data:
              schema: &ref_78
                type: string
                description: >
                  The contents of the meta_data configuration for cloud-init.
                  This can be formatted as YAML or JSON. The value must be
                  base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.cloud_init.meta_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.cloud_init.meta_data
                    description: ''
              description: >
                The contents of the meta_data configuration for cloud-init. This
                can be formatted as YAML or JSON. The value must be base64
                encoded.
              serializedName: meta_data
              extensions: {}
              details:
                csharp:
                  name: MetaData
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
                default:
                  name: meta_data
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
            user_data:
              schema: &ref_79
                type: string
                description: >
                  The contents of the user_data configuration for cloud-init.
                  This can be formatted as YAML, JSON, or could be a shell
                  script. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.cloud_init.user_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.cloud_init.user_data
                    description: ''
              description: >
                The contents of the user_data configuration for cloud-init. This
                can be formatted as YAML, JSON, or could be a shell script. The
                value must be base64 encoded.
              serializedName: user_data
              extensions: {}
              details:
                csharp:
                  name: UserData
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
                default:
                  name: user_data
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - user_data
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationStatusCloudInit
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
              fullname: Nutanix.Powershell.Models.GuestCustomizationStatusCloudInit
              interfaceName: IGuestCustomizationStatusCloudInit
              namespace: Nutanix.Powershell.Models
            default:
              name: .guest_customization_status.cloud_init
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated using
          these key-value pairs.
        serializedName: cloud_init
        extensions: {}
        details:
          csharp:
            name: CloudInit
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
          default:
            name: cloud_init
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
      is_overridable:
        schema: &ref_80
          type: boolean
          description: Flag to allow override of customization by deployer.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .guest_customization_status.is_overridable
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .guest_customization_status.is_overridable
              description: ''
        description: Flag to allow override of customization by deployer.
        serializedName: is_overridable
        extensions: {}
        details:
          csharp:
            name: IsOverridable
            description: Flag to allow override of customization by deployer.
            required: false
          default:
            name: is_overridable
            description: Flag to allow override of customization by deployer.
            required: false
      sysprep:
        schema: &ref_81
          type: object
          description: >
            If this field is set, the guest will be customized using Sysprep.
            Either unattend_xml or custom_key_values should be provided. If
            custom_key_values are provided then the unattended answer file will
            be generated using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_2
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            install_type:
              schema: &ref_82
                type: string
                description: >
                  Whether the guest will be freshly installed using this
                  unattend configuration, or whether this unattend configuration
                  will be applied to a pre-prepared image. Default is
                  "PREPARED".
                allOf: []
                anyOf: []
                default: PREPARED
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - FRESH
                    - PREPARED
                details:
                  csharp:
                    name: .guest_customization_status.sysprep.install_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.sysprep.install_type
                    description: ''
              description: >
                Whether the guest will be freshly installed using this unattend
                configuration, or whether this unattend configuration will be
                applied to a pre-prepared image. Default is "PREPARED".
              serializedName: install_type
              extensions: {}
              details:
                csharp:
                  name: InstallType
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
                default:
                  name: install_type
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
            unattend_xml:
              schema: &ref_83
                type: string
                description: >
                  This field contains a Sysprep unattend xml definition, as a
                  string. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.sysprep.unattend_xml
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.sysprep.unattend_xml
                    description: ''
              description: >
                This field contains a Sysprep unattend xml definition, as a
                string. The value must be base64 encoded.
              serializedName: unattend_xml
              extensions: {}
              details:
                csharp:
                  name: UnattendXml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
                default:
                  name: unattend_xml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - unattend_xml
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationStatusSysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
              fullname: Nutanix.Powershell.Models.GuestCustomizationStatusSysprep
              interfaceName: IGuestCustomizationStatusSysprep
              namespace: Nutanix.Powershell.Models
            default:
              name: .guest_customization_status.sysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will be
          generated using these key-value pairs.
        serializedName: sysprep
        extensions: {}
        details:
          csharp:
            name: Sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
          default:
            name: sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
    readOnly: false
    required: []
    title: Guest Customization Configuration for creation/modification request
    writeOnly: false
    extensions:
      x-ntnx-one-of:
        - required:
            - sysprep
        - required:
            - cloud_init
    details:
      csharp:
        name: GuestCustomizationStatus
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
        fullname: Nutanix.Powershell.Models.GuestCustomizationStatus
        interfaceName: IGuestCustomizationStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: guest_customization_status
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
  guest_customization_status.additionalItemType: *ref_4
  guest_tools_spec: &ref_24
    type: object
    description: Information regarding guest tools.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      nutanix_guest_tools:
        schema: &ref_5
          type: object
          description: Information regarding Nutanix Guest Tools.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            enabled_capability_list:
              schema: &ref_93
                type: string
                description: Application names that are enabled.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.enabled_capability_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.enabled_capability_list
                    description: ''
              description: Application names that are enabled.
              serializedName: enabled_capability_list
              extensions: {}
              details:
                csharp:
                  name: EnabledCapabilityList
                  description: Application names that are enabled.
                  required: false
                default:
                  name: enabled_capability_list
                  description: Application names that are enabled.
                  required: false
            iso_mount_state:
              schema: &ref_94
                type: string
                description: |
                  Desired mount state of Nutanix Guest Tools ISO.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - MOUNTED
                    - UNMOUNTED
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.iso_mount_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.iso_mount_state
                    description: ''
              description: |
                Desired mount state of Nutanix Guest Tools ISO.
              serializedName: iso_mount_state
              extensions: {}
              details:
                csharp:
                  name: IsoMountState
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
                default:
                  name: iso_mount_state
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
            state:
              schema: &ref_95
                type: string
                description: Nutanix Guest Tools is enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ENABLED
                    - DISABLED
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.state
                    description: ''
              description: Nutanix Guest Tools is enabled or not.
              serializedName: state
              extensions: {}
              details:
                csharp:
                  name: State
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
                default:
                  name: state
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
          readOnly: false
          required: []
          title: Nutanix Guest Tools information
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: NutanixGuestToolsSpec
              description: Information regarding Nutanix Guest Tools.
              fullname: Nutanix.Powershell.Models.NutanixGuestToolsSpec
              interfaceName: INutanixGuestToolsSpec
              namespace: Nutanix.Powershell.Models
            default:
              name: nutanix_guest_tools_spec
              description: Information regarding Nutanix Guest Tools.
        description: Nutanix Guest Tools information
        serializedName: nutanix_guest_tools
        extensions: {}
        details:
          csharp:
            name: NutanixGuestTools
            description: Nutanix Guest Tools information
            required: false
          default:
            name: nutanix_guest_tools
            description: Nutanix Guest Tools information
            required: false
    readOnly: false
    required: []
    title: Guest Tools information
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: GuestToolsSpec
        description: Information regarding guest tools.
        fullname: Nutanix.Powershell.Models.GuestToolsSpec
        interfaceName: IGuestToolsSpec
        namespace: Nutanix.Powershell.Models
      default:
        name: guest_tools_spec
        description: Information regarding guest tools.
  guest_tools_status: &ref_29
    type: object
    description: Information regarding guest tools.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      nutanix_guest_tools:
        schema: &ref_6
          type: object
          description: Information regarding Nutanix Guest Tools.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            available_version:
              schema: &ref_96
                type: string
                description: Version of Nutanix Guest Tools available on the cluster.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.available_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.available_version
                    description: ''
              description: Version of Nutanix Guest Tools available on the cluster.
              serializedName: available_version
              extensions: {}
              details:
                csharp:
                  name: AvailableVersion
                  description: Version of Nutanix Guest Tools available on the cluster.
                  required: false
                default:
                  name: available_version
                  description: Version of Nutanix Guest Tools available on the cluster.
                  required: false
            enabled_capability_list:
              schema: &ref_97
                type: string
                description: Application names that are enabled.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.enabled_capability_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.enabled_capability_list
                    description: ''
              description: Application names that are enabled.
              serializedName: enabled_capability_list
              extensions: {}
              details:
                csharp:
                  name: EnabledCapabilityList
                  description: Application names that are enabled.
                  required: false
                default:
                  name: enabled_capability_list
                  description: Application names that are enabled.
                  required: false
            guest_os_version:
              schema: &ref_98
                type: string
                description: Version of the operating system on the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.guest_os_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.guest_os_version
                    description: ''
              description: Version of the operating system on the VM.
              serializedName: guest_os_version
              extensions: {}
              details:
                csharp:
                  name: GuestOsVersion
                  description: Version of the operating system on the VM.
                  required: false
                default:
                  name: guest_os_version
                  description: Version of the operating system on the VM.
                  required: false
            is_reachable:
              schema: &ref_99
                type: boolean
                description: Communication from VM to CVM is active or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.is_reachable
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.is_reachable
                    description: ''
              description: Communication from VM to CVM is active or not.
              serializedName: is_reachable
              extensions: {}
              details:
                csharp:
                  name: IsReachable
                  description: Communication from VM to CVM is active or not.
                  required: false
                default:
                  name: is_reachable
                  description: Communication from VM to CVM is active or not.
                  required: false
            iso_mount_state:
              schema: &ref_100
                type: string
                description: |
                  Desired mount state of Nutanix Guest Tools ISO.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - MOUNTED
                    - UNMOUNTED
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.iso_mount_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.iso_mount_state
                    description: ''
              description: |
                Desired mount state of Nutanix Guest Tools ISO.
              serializedName: iso_mount_state
              extensions: {}
              details:
                csharp:
                  name: IsoMountState
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
                default:
                  name: iso_mount_state
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
            state:
              schema: &ref_101
                type: string
                description: Nutanix Guest Tools is enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ENABLED
                    - DISABLED
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.state
                    description: ''
              description: Nutanix Guest Tools is enabled or not.
              serializedName: state
              extensions: {}
              details:
                csharp:
                  name: State
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
                default:
                  name: state
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
            version:
              schema: &ref_102
                type: string
                description: Version of Nutanix Guest Tools installed on the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.version
                    description: ''
              description: Version of Nutanix Guest Tools installed on the VM.
              serializedName: version
              extensions: {}
              details:
                csharp:
                  name: Version
                  description: Version of Nutanix Guest Tools installed on the VM.
                  required: false
                default:
                  name: version
                  description: Version of Nutanix Guest Tools installed on the VM.
                  required: false
            vm_mobility_drivers_installed:
              schema: &ref_103
                type: boolean
                description: Whether VM mobility drivers are installed in the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.vm_mobility_drivers_installed
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.vm_mobility_drivers_installed
                    description: ''
              description: Whether VM mobility drivers are installed in the VM.
              serializedName: vm_mobility_drivers_installed
              extensions: {}
              details:
                csharp:
                  name: VmMobilityDriversInstalled
                  description: Whether VM mobility drivers are installed in the VM.
                  required: false
                default:
                  name: vm_mobility_drivers_installed
                  description: Whether VM mobility drivers are installed in the VM.
                  required: false
            vss_snapshot_capable:
              schema: &ref_104
                type: boolean
                description: >
                  Whether the VM is configured to take VSS snapshots through
                  NGT.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.vss_snapshot_capable
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.vss_snapshot_capable
                    description: ''
              description: |
                Whether the VM is configured to take VSS snapshots through NGT.
              serializedName: vss_snapshot_capable
              extensions: {}
              details:
                csharp:
                  name: VssSnapshotCapable
                  description: >
                    Whether the VM is configured to take VSS snapshots through
                    NGT.
                  required: false
                default:
                  name: vss_snapshot_capable
                  description: >
                    Whether the VM is configured to take VSS snapshots through
                    NGT.
                  required: false
          readOnly: false
          required: []
          title: Nutanix Guest Tools status
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: NutanixGuestToolsStatus
              description: Information regarding Nutanix Guest Tools.
              fullname: Nutanix.Powershell.Models.NutanixGuestToolsStatus
              interfaceName: INutanixGuestToolsStatus
              namespace: Nutanix.Powershell.Models
            default:
              name: nutanix_guest_tools_status
              description: Information regarding Nutanix Guest Tools.
        description: Nutanix Guest Tools information
        serializedName: nutanix_guest_tools
        extensions: {}
        details:
          csharp:
            name: NutanixGuestTools
            description: Nutanix Guest Tools information
            required: false
          default:
            name: nutanix_guest_tools
            description: Nutanix Guest Tools information
            required: false
    readOnly: false
    required: []
    title: Guest Tools information
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: GuestToolsStatus
        description: Information regarding guest tools.
        fullname: Nutanix.Powershell.Models.GuestToolsStatus
        interfaceName: IGuestToolsStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: guest_tools_status
        description: Information regarding guest tools.
  ip_address:
    type: object
    description: An IP address.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      type:
        schema: &ref_85
          type: string
          description: |
            Address type. It can only be "ASSIGNED" in the spec. If no type is
            specified in the spec, the default type is set to "ASSIGNED".
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ASSIGNED
              - LEARNED
          details:
            csharp:
              name: .ip_address.type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .ip_address.type
              description: ''
        description: |
          Address type. It can only be "ASSIGNED" in the spec. If no type is
          specified in the spec, the default type is set to "ASSIGNED".
        serializedName: type
        extensions: {}
        details:
          csharp:
            name: Type
            description: |
              Address type. It can only be "ASSIGNED" in the spec. If no type is
              specified in the spec, the default type is set to "ASSIGNED".
            required: false
          default:
            name: type
            description: |
              Address type. It can only be "ASSIGNED" in the spec. If no type is
              specified in the spec, the default type is set to "ASSIGNED".
            required: false
      ip:
        schema: &ref_84
          type: string
          description: Address string.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .ip_address.ip
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .ip_address.ip
              description: ''
        description: Address string.
        serializedName: ip
        extensions: {}
        details:
          csharp:
            name: Ip
            description: Address string.
            required: false
          default:
            name: ip
            description: Address string.
            required: false
    readOnly: false
    required: []
    title: IP Address
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: IpAddress
        description: An IP address.
        fullname: Nutanix.Powershell.Models.IpAddress
        interfaceName: IIpAddress
        namespace: Nutanix.Powershell.Models
      default:
        name: ip_address
        description: An IP address.
  message_resource: &ref_9
    type: object
    description: message.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      message:
        schema: &ref_88
          type: string
          description: 'If state is ERROR, a message describing the error.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .message_resource.message
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .message_resource.message
              description: ''
        description: 'If state is ERROR, a message describing the error.'
        serializedName: message
        extensions: {}
        details:
          csharp:
            name: Message
            description: 'If state is ERROR, a message describing the error.'
            required: true
          default:
            name: message
            description: 'If state is ERROR, a message describing the error.'
            required: true
      reason:
        schema: &ref_89
          type: string
          description: 'If state is ERROR, a machine-readable snake-cased string.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ACCESS_DENIED
              - ACCESS_FORBIDDEN
              - ACTION_NOT_SUPPORTED
              - AUTHENTICATION_REQUIRED
              - BEARER_TOKEN_EXPIRED
              - BEARER_TOKEN_BAD_SIGNATURE
              - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
              - CATEGORY_NAME_VALUE_MISMATCH
              - CONFIGURATION_INCOMPLETE
              - CONCURRENT_REQUESTS_NOT_ALLOWED
              - DEFAULT_PROJECT_UNAVAILABLE
              - DESERIALIZATION_FAILED
              - DIRECTORY_SERVICE_CONNECTION_FAILED
              - ENTITY_ALREADY_EXISTS
              - ENTITY_DELETION_FAILED
              - ENTITY_IS_READONLY
              - ENTITY_NAME_UUID_MISMATCH
              - ENTITY_NOT_CONFIGURED
              - ENTITY_NOT_FOUND
              - ENTITY_SAVE_ERROR
              - ENTITY_UPDATE_FAILED
              - IDEMPOTENCE_UUID_CREATION_FAILED
              - IDP_NOT_REACHABLE
              - INTERNAL_ERROR
              - INVALID_ARGUMENT
              - INVALID_AZ_NAME
              - INVALID_CONTENT_TYPE
              - INVALID_DATA_FORMAT
              - INVALID_PORTAL_CONFIGURATION
              - INVALID_REQUEST
              - INVALID_UUID
              - INVALID_OWNER_REFERENCE
              - INTERNAL_AZ_PROXY_SETUP_ERROR
              - INTERNAL_ERROR_REMOTE_REQUEST
              - INTERNAL_ROLE_ACCESS_DENIED
              - INCORRECT_EVENTS_FILTER
              - MISSING_ATTRIBUTE
              - MISSING_CURRENT_USER_METADATA
              - NAME_NOT_IN_DOMAIN
              - NO_RESPONSE_RECEIVED_FROM_PORTAL
              - PE_NOT_PAIRED_WITH_PC
              - PC_NOT_PAIRED_WITH_XI_PORTAL
              - REFERENCE_ERROR
              - RESERVED_ROLE_ACCESS_DENIED
              - REQUEST_NOT_SUPPORTED
              - REMOTE_CLUSTER_IP_FETCH_FAILED
              - REMOTE_CLUSTER_NOT_CONNECTED
              - REMOTE_CONNECTION_EXISTS
              - REMOTE_CONNECTION_NOT_FOUND
              - REPORT_CONFIG_NOT_FOUND
              - REPORTING_RESOURCE_NOT_FOUND
              - REPORTING_INTERNAL_ERROR
              - SERVICE_UNAVAILABLE
              - SEARCH_RESULT_PROCESSING_ERROR
              - TOO_MANY_REQUESTS
              - UNCONFIGURED_API_KEY
              - UNCONFIGURED_PORTAL_CONNECTION
              - UNSPECIFIED_EVENTS_FILTER
              - UNSUPPORTED_AZ_PROXY_API
              - UNSUPPORTED_MEDIA_TYPE_ERROR
              - UNSUPPORTED_API_VERSION
              - UPLOAD_TO_S3_FAILED
              - VALIDATION_ERROR
              - INVALID_SSL_CERTIFICATE
              - ERROR_ATTACHING_FILE_TO_CASE
              - SPEC_UPDATE_ERROR
              - SPEC_INCOMPATIBLE_ERROR
          details:
            csharp:
              name: .message_resource.reason
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .message_resource.reason
              description: ''
        description: 'If state is ERROR, a machine-readable snake-cased string.'
        serializedName: reason
        extensions: {}
        details:
          csharp:
            name: Reason
            description: 'If state is ERROR, a machine-readable snake-cased string.'
            required: true
          default:
            name: reason
            description: 'If state is ERROR, a machine-readable snake-cased string.'
            required: true
      details:
        schema: &ref_86
          type: object
          description: Custom key-value details relevant to the status.
          additionalProperties: &ref_87
            type: string
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties: {}
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: .message_resource.details.additionalItemType
                description: ''
                fullname: <INVALID>
                interfaceName: <INVALID>
                namespace: <INVALID>
              default:
                name: .message_resource.details.additionalItemType
                description: ''
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: MessageResourceDetails
              description: Custom key-value details relevant to the status.
              fullname: Nutanix.Powershell.Models.MessageResourceDetails
              interfaceName: IMessageResourceDetails
              namespace: Nutanix.Powershell.Models
            default:
              name: .message_resource.details
              description: Custom key-value details relevant to the status.
        description: Custom key-value details relevant to the status.
        serializedName: details
        extensions: {}
        details:
          csharp:
            name: Details
            description: Custom key-value details relevant to the status.
            required: false
          default:
            name: details
            description: Custom key-value details relevant to the status.
            required: false
    readOnly: false
    required:
      - message
      - reason
    title: Message.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: MessageResource
        description: message.
        fullname: Nutanix.Powershell.Models.MessageResource
        interfaceName: IMessageResource
        namespace: Nutanix.Powershell.Models
      default:
        name: message_resource
        description: message.
  network_function_chain_reference: &ref_38
    type: object
    description: The reference to a network_function_chain
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_91
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .network_function_chain_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_90
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: network_function_chain
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - network_function_chain
          details:
            csharp:
              name: .network_function_chain_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_92
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .network_function_chain_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a network_function_chain
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: NetworkFunctionChainReference
        description: The reference to a network_function_chain
        fullname: Nutanix.Powershell.Models.NetworkFunctionChainReference
        interfaceName: INetworkFunctionChainReference
        namespace: Nutanix.Powershell.Models
      default:
        name: network_function_chain_reference
        description: The reference to a network_function_chain
  nutanix_guest_tools_spec: *ref_5
  nutanix_guest_tools_status: *ref_6
  project_reference: &ref_12
    type: object
    description: The reference to a project
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_106
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .project_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_105
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: project
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - project
          details:
            csharp:
              name: .project_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_107
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .project_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a project
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: ProjectReference
        description: The reference to a project
        fullname: Nutanix.Powershell.Models.ProjectReference
        interfaceName: IProjectReference
        namespace: Nutanix.Powershell.Models
      default:
        name: project_reference
        description: The reference to a project
  reference: &ref_25
    type: object
    description: Reference to a kind
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_109
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_108
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.kind
              description: ''
        description: ''
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: ''
            required: true
          default:
            name: kind
            description: ''
            required: true
      uuid:
        schema: &ref_110
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: Reference
        description: Reference to a kind
        fullname: Nutanix.Powershell.Models.Reference
        interfaceName: IReference
        namespace: Nutanix.Powershell.Models
      default:
        name: reference
        description: Reference to a kind
  resource_domain_resources_status: &ref_13
    type: object
    description: The status for a resource domain (limits and values)
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      resources:
        schema: &ref_111
          type: array
          description: The utilization/limit for resource types
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_7
            type: object
            description: stores resource utilization and limits for a domain
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              limit:
                schema: &ref_112
                  type: integer
                  description: The resource consumption limit (unspecified is unlimited)
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .resource_utilization_status.limit
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .resource_utilization_status.limit
                      description: ''
                description: The resource consumption limit (unspecified is unlimited)
                serializedName: limit
                extensions: {}
                details:
                  csharp:
                    name: Limit
                    description: The resource consumption limit (unspecified is unlimited)
                    required: false
                  default:
                    name: limit
                    description: The resource consumption limit (unspecified is unlimited)
                    required: false
              resource_type:
                schema: &ref_113
                  type: string
                  description: 'The type of resource (for example storage, CPUs)'
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .resource_utilization_status.resource_type
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .resource_utilization_status.resource_type
                      description: ''
                description: 'The type of resource (for example storage, CPUs)'
                serializedName: resource_type
                extensions: {}
                details:
                  csharp:
                    name: ResourceType
                    description: 'The type of resource (for example storage, CPUs)'
                    required: true
                  default:
                    name: resource_type
                    description: 'The type of resource (for example storage, CPUs)'
                    required: true
              units:
                schema: &ref_114
                  type: string
                  description: The units of the resource type
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .resource_utilization_status.units
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .resource_utilization_status.units
                      description: ''
                description: The units of the resource type
                serializedName: units
                extensions: {}
                details:
                  csharp:
                    name: Units
                    description: The units of the resource type
                    required: true
                  default:
                    name: units
                    description: The units of the resource type
                    required: true
              value:
                schema: &ref_115
                  type: integer
                  description: The amount of resource consumed
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .resource_utilization_status.value
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .resource_utilization_status.value
                      description: ''
                description: The amount of resource consumed
                serializedName: value
                extensions: {}
                details:
                  csharp:
                    name: Value
                    description: The amount of resource consumed
                    required: true
                  default:
                    name: value
                    description: The amount of resource consumed
                    required: true
            readOnly: false
            required:
              - resource_type
              - units
              - value
            title: Resource Utilization Status
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: ResourceUtilizationStatus
                description: stores resource utilization and limits for a domain
                fullname: Nutanix.Powershell.Models.ResourceUtilizationStatus
                interfaceName: IResourceUtilizationStatus
                namespace: Nutanix.Powershell.Models
              default:
                name: resource_utilization_status
                description: stores resource utilization and limits for a domain
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .resource_domain_resources_status.resources
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .resource_domain_resources_status.resources
              description: ''
        description: The utilization/limit for resource types
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: The utilization/limit for resource types
            required: true
          default:
            name: resources
            description: The utilization/limit for resource types
            required: true
    readOnly: false
    required:
      - resources
    title: Resource Domain Status
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: ResourceDomainResourcesStatus
        description: The status for a resource domain (limits and values)
        fullname: Nutanix.Powershell.Models.ResourceDomainResourcesStatus
        interfaceName: IResourceDomainResourcesStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: resource_domain_resources_status
        description: The status for a resource domain (limits and values)
  resource_utilization_status: *ref_7
  sort_order: &ref_36
    type: string
    description: The sort order in which results are returned
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties: {}
    readOnly: false
    required: []
    title: Sort order
    writeOnly: false
    extensions:
      x-ntnx-enum:
        - ASCENDING
        - DESCENDING
    details:
      csharp:
        name: sort_order
        description: ''
        fullname: <INVALID>
        interfaceName: <INVALID>
        namespace: <INVALID>
      default:
        name: sort_order
        description: ''
  subnet_reference: &ref_39
    type: object
    description: The reference to a subnet
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_117
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .subnet_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_116
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: subnet
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - subnet
          details:
            csharp:
              name: .subnet_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      uuid:
        schema: &ref_118
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .subnet_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - uuid
    title: Reference to a subnet
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: SubnetReference
        description: The reference to a subnet
        fullname: Nutanix.Powershell.Models.SubnetReference
        interfaceName: ISubnetReference
        namespace: Nutanix.Powershell.Models
      default:
        name: subnet_reference
        description: The reference to a subnet
  user: &ref_15
    type: object
    description: User Input Definition.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      resources:
        schema: &ref_14
          type: object
          description: User Resource Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            directory_service_user:
              schema: *ref_8
              description: A Directory Service user.
              serializedName: directory_service_user
              extensions: {}
              details:
                csharp:
                  name: DirectoryServiceUser
                  description: A Directory Service user.
                  required: false
                default:
                  name: directory_service_user
                  description: A Directory Service user.
                  required: false
          readOnly: false
          required: []
          title: User Resource Definition.
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - directory_service_user
          details:
            csharp:
              name: UserInputResource
              description: User Resource Definition.
              fullname: Nutanix.Powershell.Models.UserInputResource
              interfaceName: IUserInputResource
              namespace: Nutanix.Powershell.Models
            default:
              name: user_input_resource
              description: User Resource Definition.
        description: User Resource Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: User Resource Definition.
            required: true
          default:
            name: resources
            description: User Resource Definition.
            required: true
    readOnly: false
    required:
      - resources
    title: User.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: User
        description: User Input Definition.
        fullname: Nutanix.Powershell.Models.User
        interfaceName: IUser
        namespace: Nutanix.Powershell.Models
      default:
        name: user
        description: User Input Definition.
  user_def_status: &ref_16
    type: object
    description: User status definition.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_120
          type: string
          description: Name of the User.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_def_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_def_status.name
              description: ''
        description: Name of the User.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the User.
            required: true
          default:
            name: name
            description: Name of the User.
            required: true
      message_list:
        schema: &ref_119
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_9
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_def_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_def_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      resources:
        schema: &ref_19
          type: object
          description: User Resource Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            access_control_policy_reference_list:
              schema: &ref_140
                type: array
                description: List of ACP references.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: *ref_10
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_status_resource.access_control_policy_reference_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_status_resource.access_control_policy_reference_list
                    description: ''
              description: List of ACP references.
              serializedName: access_control_policy_reference_list
              extensions: {}
              details:
                csharp:
                  name: AccessControlPolicyReferenceList
                  description: List of ACP references.
                  required: false
                default:
                  name: access_control_policy_reference_list
                  description: List of ACP references.
                  required: false
            directory_service_user:
              schema: *ref_11
              description: A Directory Service user.
              serializedName: directory_service_user
              extensions: {}
              details:
                csharp:
                  name: DirectoryServiceUser
                  description: A Directory Service user.
                  required: false
                default:
                  name: directory_service_user
                  description: A Directory Service user.
                  required: false
            display_name:
              schema: &ref_141
                type: string
                description: >
                  The display name of the user (common name) provided by the
                  directory service.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_status_resource.display_name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_status_resource.display_name
                    description: ''
              description: >
                The display name of the user (common name) provided by the
                directory service.
              serializedName: display_name
              extensions: {}
              details:
                csharp:
                  name: DisplayName
                  description: >
                    The display name of the user (common name) provided by the
                    directory service.
                  required: false
                default:
                  name: display_name
                  description: >
                    The display name of the user (common name) provided by the
                    directory service.
                  required: false
            projects_reference_list:
              schema: &ref_142
                type: array
                description: A list of projects the user is part of.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: *ref_12
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_status_resource.projects_reference_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_status_resource.projects_reference_list
                    description: ''
              description: A list of projects the user is part of.
              serializedName: projects_reference_list
              extensions: {}
              details:
                csharp:
                  name: ProjectsReferenceList
                  description: A list of projects the user is part of.
                  required: false
                default:
                  name: projects_reference_list
                  description: A list of projects the user is part of.
                  required: false
            resource_usage_summary:
              schema: &ref_143
                type: object
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  resource_domain:
                    schema: *ref_13
                    description: The status for a resource domain (limits and values)
                    serializedName: resource_domain
                    extensions: {}
                    details:
                      csharp:
                        name: ResourceDomain
                        description: The status for a resource domain (limits and values)
                        required: false
                      default:
                        name: resource_domain
                        description: The status for a resource domain (limits and values)
                        required: false
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: UserStatusResourceResourceUsageSummary
                    description: ''
                    fullname: Nutanix.Powershell.Models.UserStatusResourceResourceUsageSummary
                    interfaceName: IUserStatusResourceResourceUsageSummary
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: .user_status_resource.resource_usage_summary
                    description: ''
              description: ''
              serializedName: resource_usage_summary
              extensions: {}
              details:
                csharp:
                  name: ResourceUsageSummary
                  description: ''
                  required: false
                default:
                  name: resource_usage_summary
                  description: ''
                  required: false
            user_type:
              schema: &ref_144
                type: string
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - LOCAL
                    - DIRECTORY_SERVICE
                details:
                  csharp:
                    name: .user_status_resource.user_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_status_resource.user_type
                    description: ''
              description: ''
              serializedName: user_type
              extensions: {}
              details:
                csharp:
                  name: UserType
                  description: ''
                  required: false
                default:
                  name: user_type
                  description: ''
                  required: false
          readOnly: false
          required: []
          title: User Resource Definition.
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: UserStatusResource
              description: User Resource Definition.
              fullname: Nutanix.Powershell.Models.UserStatusResource
              interfaceName: IUserStatusResource
              namespace: Nutanix.Powershell.Models
            default:
              name: user_status_resource
              description: User Resource Definition.
        description: User Resource Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: User Resource Definition.
            required: true
          default:
            name: resources
            description: User Resource Definition.
            required: true
      state:
        schema: &ref_121
          type: string
          description: The state of the entity.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_def_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_def_status.state
              description: ''
        description: The state of the entity.
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: The state of the entity.
            required: false
          default:
            name: state
            description: The state of the entity.
            required: false
    readOnly: false
    required:
      - name
      - resources
    title: User status definition.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: UserDefStatus
        description: User status definition.
        fullname: Nutanix.Powershell.Models.UserDefStatus
        interfaceName: IUserDefStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: user_def_status
        description: User status definition.
  user_input_resource: *ref_14
  user_intent_response: &ref_247
    type: object
    description: Response object for intentful operations on a user
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_122
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: &ref_17
          type: object
          description: The user kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_128
                type: string
                description: user name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.name
                    description: ''
              description: user name
              serializedName: name
              extensions: {}
              details:
                csharp:
                  name: Name
                  description: user name
                  required: false
                default:
                  name: name
                  description: user name
                  required: false
            categories:
              schema: &ref_123
                type: object
                description: Categories for the user
                additionalProperties: &ref_124
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .user_metadata.categories.additionalItemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .user_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: UserMetadataCategories
                    description: Categories for the user
                    fullname: Nutanix.Powershell.Models.UserMetadataCategories
                    interfaceName: IUserMetadataCategories
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: .user_metadata.categories
                    description: Categories for the user
              description: Categories for the user
              serializedName: categories
              extensions: {}
              details:
                csharp:
                  name: Categories
                  description: Categories for the user
                  required: false
                default:
                  name: categories
                  description: Categories for the user
                  required: false
            creation_time:
              schema: &ref_125
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when user was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.creation_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.creation_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when user was created
              serializedName: creation_time
              extensions: {}
              details:
                csharp:
                  name: CreationTime
                  description: |
                    UTC date and time in RFC-3339 format when user was created
                  required: false
                default:
                  name: creation_time
                  description: |
                    UTC date and time in RFC-3339 format when user was created
                  required: false
            kind:
              schema: &ref_126
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: user
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - user
                details:
                  csharp:
                    name: .user_metadata.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            last_update_time:
              schema: &ref_127
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when user was last
                  updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.last_update_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.last_update_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when user was last updated
              serializedName: last_update_time
              extensions: {}
              details:
                csharp:
                  name: LastUpdateTime
                  description: >
                    UTC date and time in RFC-3339 format when user was last
                    updated
                  required: false
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when user was last
                    updated
                  required: false
            owner_reference:
              schema: &ref_18
                type: object
                description: The reference to a user
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_133
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: true
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .user_reference.name
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .user_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      csharp:
                        name: Name
                        description: ''
                        required: false
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_132
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: user
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: true
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - user
                      details:
                        csharp:
                          name: .user_reference.kind
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .user_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      csharp:
                        name: Kind
                        description: The kind name
                        required: false
                      default:
                        name: kind
                        description: The kind name
                        required: false
                  uuid:
                    schema: &ref_134
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .user_reference.uuid
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .user_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      csharp:
                        name: Uuid
                        description: ''
                        required: true
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - uuid
                title: Reference to a user
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: UserReference
                    description: The reference to a user
                    fullname: Nutanix.Powershell.Models.UserReference
                    interfaceName: IUserReference
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: user_reference
                    description: The reference to a user
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                csharp:
                  name: OwnerReference
                  description: The reference to a user
                  required: false
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: *ref_12
              description: The project the user is in.
              serializedName: project_reference
              extensions: {}
              details:
                csharp:
                  name: ProjectReference
                  description: The project the user is in.
                  required: false
                default:
                  name: project_reference
                  description: The project the user is in.
                  required: false
            spec_hash:
              schema: &ref_129
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.spec_hash
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                csharp:
                  name: SpecHash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_130
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.spec_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                csharp:
                  name: SpecVersion
                  description: Version number of the latest spec.
                  required: false
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_131
                type: string
                format: UUID
                description: user uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .user_metadata.uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .user_metadata.uuid
                    description: ''
              description: user uuid
              serializedName: uuid
              extensions: {}
              details:
                csharp:
                  name: Uuid
                  description: user uuid
                  required: false
                default:
                  name: uuid
                  description: user uuid
                  required: false
          readOnly: false
          required: []
          title: user metadata
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: UserMetadata
              description: The user kind metadata
              fullname: Nutanix.Powershell.Models.UserMetadata
              interfaceName: IUserMetadata
              namespace: Nutanix.Powershell.Models
            default:
              name: user_metadata
              description: The user kind metadata
        description: The user kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The user kind metadata
            required: true
          default:
            name: metadata
            description: The user kind metadata
            required: true
      spec:
        schema: *ref_15
        description: User Input Definition.
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: User Input Definition.
            required: false
          default:
            name: spec
            description: User Input Definition.
            required: false
      status:
        schema: *ref_16
        description: User status definition.
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: User status definition.
            required: false
          default:
            name: status
            description: User status definition.
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: user Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: UserIntentResponse
        description: Response object for intentful operations on a user
        fullname: Nutanix.Powershell.Models.UserIntentResponse
        interfaceName: IUserIntentResponse
        namespace: Nutanix.Powershell.Models
      default:
        name: user_intent_response
        description: Response object for intentful operations on a user
  user_metadata: *ref_17
  user_reference: *ref_18
  user_status: &ref_248
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_135
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_136
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_137
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: user
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - user
          details:
            csharp:
              name: .user_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_138
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_9
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_139
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: UserStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Nutanix.Powershell.Models.UserStatus
        interfaceName: IUserStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: user_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  user_status_resource: *ref_19
  vm: &ref_33
    type: object
    description: An intentful representation of a vm spec
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_146
          type: string
          description: vm Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm.name
              description: ''
        description: vm Name.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: vm Name.
            required: true
          default:
            name: name
            description: vm Name.
            required: true
      description:
        schema: &ref_145
          type: string
          description: A description for vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 1000
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm.description
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm.description
              description: ''
        description: A description for vm.
        serializedName: description
        extensions: {}
        details:
          csharp:
            name: Description
            description: A description for vm.
            required: false
          default:
            name: description
            description: A description for vm.
            required: false
      availability_zone_reference:
        schema: *ref_20
        description: The reference to a availability_zone
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: The reference to a availability_zone
            required: false
          default:
            name: availability_zone_reference
            description: The reference to a availability_zone
            required: false
      cluster_reference:
        schema: *ref_21
        description: The reference to a cluster
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: The reference to a cluster
            required: false
          default:
            name: cluster_reference
            description: The reference to a cluster
            required: false
      resources:
        schema: &ref_40
          type: object
          description: VM Resources Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            boot_config:
              schema: &ref_26
                type: object
                description: |
                  Indicates which device a VM should boot from.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  boot_device:
                    schema: &ref_27
                      type: object
                      description: >
                        Indicates which device a VM should boot from. One of
                        disk_address or mac_address should be provided.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties:
                        disk_address:
                          schema: *ref_22
                          description: Address of disk to boot from.
                          serializedName: disk_address
                          extensions: {}
                          details:
                            csharp:
                              name: DiskAddress
                              description: Address of disk to boot from.
                              required: false
                            default:
                              name: disk_address
                              description: Address of disk to boot from.
                              required: false
                        mac_address:
                          schema: &ref_148
                            type: string
                            description: MAC address of nic to boot from.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: .vm_boot_device.mac_address
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: .vm_boot_device.mac_address
                                description: ''
                          description: MAC address of nic to boot from.
                          serializedName: mac_address
                          extensions: {}
                          details:
                            csharp:
                              name: MacAddress
                              description: MAC address of nic to boot from.
                              required: false
                            default:
                              name: mac_address
                              description: MAC address of nic to boot from.
                              required: false
                      readOnly: false
                      required: []
                      title: VM Boot device
                      writeOnly: false
                      extensions:
                        x-ntnx-one-of:
                          - required:
                              - disk_address
                          - required:
                              - mac_address
                      details:
                        csharp:
                          name: VmBootDevice
                          description: >
                            Indicates which device a VM should boot from. One of
                            disk_address or mac_address should be provided.
                          fullname: Nutanix.Powershell.Models.VmBootDevice
                          interfaceName: IVmBootDevice
                          namespace: Nutanix.Powershell.Models
                        default:
                          name: vm_boot_device
                          description: >
                            Indicates which device a VM should boot from. One of
                            disk_address or mac_address should be provided.
                    description: >
                      Indicates which device a VM should boot from. Boot device
                      takes precdence over boot device order. If both are given
                      then specified boot device will be primary boot device and
                      remaining devices will be assigned boot order according to
                      boot device order field.
                    serializedName: boot_device
                    extensions: {}
                    details:
                      csharp:
                        name: BootDevice
                        description: >
                          Indicates which device a VM should boot from. Boot
                          device takes precdence over boot device order. If both
                          are given then specified boot device will be primary
                          boot device and remaining devices will be assigned
                          boot order according to boot device order field.
                        required: false
                      default:
                        name: boot_device
                        description: >
                          Indicates which device a VM should boot from. Boot
                          device takes precdence over boot device order. If both
                          are given then specified boot device will be primary
                          boot device and remaining devices will be assigned
                          boot order according to boot device order field.
                        required: false
                  boot_device_order_list:
                    schema: &ref_147
                      type: string
                      description: >
                        Indicates the order of device types in which VM should
                        try to boot from. If boot device order is not provided
                        the system will decide appropriate boot device order.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_boot_config.boot_device_order_list
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_boot_config.boot_device_order_list
                          description: ''
                    description: >
                      Indicates the order of device types in which VM should try
                      to boot from. If boot device order is not provided the
                      system will decide appropriate boot device order.
                    serializedName: boot_device_order_list
                    extensions: {}
                    details:
                      csharp:
                        name: BootDeviceOrderList
                        description: >
                          Indicates the order of device types in which VM should
                          try to boot from. If boot device order is not provided
                          the system will decide appropriate boot device order.
                        required: false
                      default:
                        name: boot_device_order_list
                        description: >
                          Indicates the order of device types in which VM should
                          try to boot from. If boot device order is not provided
                          the system will decide appropriate boot device order.
                        required: false
                readOnly: false
                required: []
                title: VM Boot configuration
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmBootConfig
                    description: |
                      Indicates which device a VM should boot from.
                    fullname: Nutanix.Powershell.Models.VmBootConfig
                    interfaceName: IVmBootConfig
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: vm_boot_config
                    description: |
                      Indicates which device a VM should boot from.
              description: Indicates which device the VM should boot from.
              serializedName: boot_config
              extensions: {}
              details:
                csharp:
                  name: BootConfig
                  description: Indicates which device the VM should boot from.
                  required: false
                default:
                  name: boot_config
                  description: Indicates which device the VM should boot from.
                  required: false
            disk_list:
              schema: &ref_212
                type: string
                description: Disks attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.disk_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.disk_list
                    description: ''
              description: Disks attached to the VM.
              serializedName: disk_list
              extensions: {}
              details:
                csharp:
                  name: DiskList
                  description: Disks attached to the VM.
                  required: false
                default:
                  name: disk_list
                  description: Disks attached to the VM.
                  required: false
            gpu_list:
              schema: &ref_213
                type: string
                description: GPUs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.gpu_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.gpu_list
                    description: ''
              description: GPUs attached to the VM.
              serializedName: gpu_list
              extensions: {}
              details:
                csharp:
                  name: GpuList
                  description: GPUs attached to the VM.
                  required: false
                default:
                  name: gpu_list
                  description: GPUs attached to the VM.
                  required: false
            guest_customization:
              schema: *ref_23
              description: >
                VM guests may be customized at boot time using one of several
                different methods. Currently, cloud-init w/ ConfigDriveV2 (for
                Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE
                OF sysprep or cloud_init should be provided. Note that guest
                customization can currently only be set during VM creation.
                Attempting to change it after creation will result in an error.
                Additional properties can be specified. For example - in the
                context of VM template creation if "override_script" is set to
                "True" then the deployer can upload their own custom script.
              serializedName: guest_customization
              extensions: {}
              details:
                csharp:
                  name: GuestCustomization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
                default:
                  name: guest_customization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
            guest_os_id:
              schema: &ref_214
                type: string
                description: >
                  Guest OS Identifier. For ESX, refer to VMware documentation
                  link
                  (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                  for the list of guest OS identifiers.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.guest_os_id
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.guest_os_id
                    description: ''
              description: >
                Guest OS Identifier. For ESX, refer to VMware documentation link
                (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                for the list of guest OS identifiers.
              serializedName: guest_os_id
              extensions: {}
              details:
                csharp:
                  name: GuestOsId
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
                default:
                  name: guest_os_id
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
            guest_tools:
              schema: *ref_24
              description: Information regarding guest tools.
              serializedName: guest_tools
              extensions: {}
              details:
                csharp:
                  name: GuestTools
                  description: Information regarding guest tools.
                  required: false
                default:
                  name: guest_tools
                  description: Information regarding guest tools.
                  required: false
            hardware_clock_timezone:
              schema: &ref_215
                type: string
                description: >
                  VM's hardware clock timezone in IANA TZDB format
                  (America/Los_Angeles).
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.hardware_clock_timezone
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.hardware_clock_timezone
                    description: ''
              description: >
                VM's hardware clock timezone in IANA TZDB format
                (America/Los_Angeles).
              serializedName: hardware_clock_timezone
              extensions: {}
              details:
                csharp:
                  name: HardwareClockTimezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
                default:
                  name: hardware_clock_timezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
            memory_size_mib:
              schema: &ref_216
                type: integer
                format: int32
                description: Memory size in MiB.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.memory_size_mib
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.memory_size_mib
                    description: ''
              description: Memory size in MiB.
              serializedName: memory_size_mib
              extensions: {}
              details:
                csharp:
                  name: MemorySizeMib
                  description: Memory size in MiB.
                  required: false
                default:
                  name: memory_size_mib
                  description: Memory size in MiB.
                  required: false
            nic_list:
              schema: &ref_217
                type: string
                description: NICs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.nic_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.nic_list
                    description: ''
              description: NICs attached to the VM.
              serializedName: nic_list
              extensions: {}
              details:
                csharp:
                  name: NicList
                  description: NICs attached to the VM.
                  required: false
                default:
                  name: nic_list
                  description: NICs attached to the VM.
                  required: false
            num_sockets:
              schema: &ref_218
                type: integer
                format: int32
                description: Number of vCPU sockets.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.num_sockets
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.num_sockets
                    description: ''
              description: Number of vCPU sockets.
              serializedName: num_sockets
              extensions: {}
              details:
                csharp:
                  name: NumSockets
                  description: Number of vCPU sockets.
                  required: false
                default:
                  name: num_sockets
                  description: Number of vCPU sockets.
                  required: false
            num_vcpus_per_socket:
              schema: &ref_219
                type: integer
                format: int32
                description: Number of vCPUs per socket.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.num_vcpus_per_socket
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.num_vcpus_per_socket
                    description: ''
              description: Number of vCPUs per socket.
              serializedName: num_vcpus_per_socket
              extensions: {}
              details:
                csharp:
                  name: NumVcpusPerSocket
                  description: Number of vCPUs per socket.
                  required: false
                default:
                  name: num_vcpus_per_socket
                  description: Number of vCPUs per socket.
                  required: false
            parent_reference:
              schema: *ref_25
              description: |
                Reference to an entity that the VM should be cloned from.
              serializedName: parent_reference
              extensions: {}
              details:
                csharp:
                  name: ParentReference
                  description: |
                    Reference to an entity that the VM should be cloned from.
                  required: false
                default:
                  name: parent_reference
                  description: |
                    Reference to an entity that the VM should be cloned from.
                  required: false
            power_state:
              schema: &ref_220
                type: string
                description: The current or desired power state of the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - 'ON'
                    - 'OFF'
                details:
                  csharp:
                    name: .vm_resources.power_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.power_state
                    description: ''
              description: The current or desired power state of the VM.
              serializedName: power_state
              extensions: {}
              details:
                csharp:
                  name: PowerState
                  description: The current or desired power state of the VM.
                  required: false
                default:
                  name: power_state
                  description: The current or desired power state of the VM.
                  required: false
            power_state_mechanism:
              schema: &ref_30
                type: object
                description: >
                  Indicates the mechanism guiding the VM power state transition.
                  Currently used for the transition to "OFF" state.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  guest_transition_config:
                    schema: &ref_32
                      type: object
                      description: Extra configs related to power state transition.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties:
                        enable_script_exec:
                          schema: &ref_171
                            type: boolean
                            description: >-
                              Indicates whether to execute set script before ngt
                              shutdown/reboot.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: >-
                                  .vm_guest_power_state_transition_config.enable_script_exec
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: >-
                                  .vm_guest_power_state_transition_config.enable_script_exec
                                description: ''
                          description: >-
                            Indicates whether to execute set script before ngt
                            shutdown/reboot.
                          serializedName: enable_script_exec
                          extensions: {}
                          details:
                            csharp:
                              name: EnableScriptExec
                              description: >-
                                Indicates whether to execute set script before
                                ngt shutdown/reboot.
                              required: false
                            default:
                              name: enable_script_exec
                              description: >-
                                Indicates whether to execute set script before
                                ngt shutdown/reboot.
                              required: false
                        should_fail_on_script_failure:
                          schema: &ref_172
                            type: boolean
                            description: >-
                              Indicates whether to abort ngt shutdown/reboot if
                              script fails.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: >-
                                  .vm_guest_power_state_transition_config.should_fail_on_script_failure
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: >-
                                  .vm_guest_power_state_transition_config.should_fail_on_script_failure
                                description: ''
                          description: >-
                            Indicates whether to abort ngt shutdown/reboot if
                            script fails.
                          serializedName: should_fail_on_script_failure
                          extensions: {}
                          details:
                            csharp:
                              name: ShouldFailOnScriptFailure
                              description: >-
                                Indicates whether to abort ngt shutdown/reboot
                                if script fails.
                              required: false
                            default:
                              name: should_fail_on_script_failure
                              description: >-
                                Indicates whether to abort ngt shutdown/reboot
                                if script fails.
                              required: false
                      readOnly: false
                      required: []
                      title: Power State Transition Config
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: VmGuestPowerStateTransitionConfig
                          description: Extra configs related to power state transition.
                          fullname: Nutanix.Powershell.Models.VmGuestPowerStateTransitionConfig
                          interfaceName: IVmGuestPowerStateTransitionConfig
                          namespace: Nutanix.Powershell.Models
                        default:
                          name: vm_guest_power_state_transition_config
                          description: Extra configs related to power state transition.
                    description: Extra configs related to power state transition.
                    serializedName: guest_transition_config
                    extensions: {}
                    details:
                      csharp:
                        name: GuestTransitionConfig
                        description: Extra configs related to power state transition.
                        required: false
                      default:
                        name: guest_transition_config
                        description: Extra configs related to power state transition.
                        required: false
                  mechanism:
                    schema: &ref_211
                      type: string
                      description: Power state mechanism (ACPI/GUEST/HARD).
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - ACPI
                          - GUEST
                          - HARD
                      details:
                        csharp:
                          name: .vm_power_state_mechanism.mechanism
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_power_state_mechanism.mechanism
                          description: ''
                    description: Power state mechanism (ACPI/GUEST/HARD).
                    serializedName: mechanism
                    extensions: {}
                    details:
                      csharp:
                        name: Mechanism
                        description: Power state mechanism (ACPI/GUEST/HARD).
                        required: false
                      default:
                        name: mechanism
                        description: Power state mechanism (ACPI/GUEST/HARD).
                        required: false
                readOnly: false
                required: []
                title: VM Power State Mechanism
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmPowerStateMechanism
                    description: >
                      Indicates the mechanism guiding the VM power state
                      transition. Currently used for the transition to "OFF"
                      state.
                    fullname: Nutanix.Powershell.Models.VmPowerStateMechanism
                    interfaceName: IVmPowerStateMechanism
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: vm_power_state_mechanism
                    description: >
                      Indicates the mechanism guiding the VM power state
                      transition. Currently used for the transition to "OFF"
                      state.
              description: >
                Indicates the mechanism guiding the VM power state transition.
                Currently used for the transition to "OFF" state.
              serializedName: power_state_mechanism
              extensions: {}
              details:
                csharp:
                  name: PowerStateMechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
                default:
                  name: power_state_mechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
            vga_console_enabled:
              schema: &ref_221
                type: boolean
                description: Indicates whether VGA console should be enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.vga_console_enabled
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.vga_console_enabled
                    description: ''
              description: Indicates whether VGA console should be enabled or not.
              serializedName: vga_console_enabled
              extensions: {}
              details:
                csharp:
                  name: VgaConsoleEnabled
                  description: Indicates whether VGA console should be enabled or not.
                  required: false
                default:
                  name: vga_console_enabled
                  description: Indicates whether VGA console should be enabled or not.
                  required: false
            vnuma_config:
              schema: &ref_31
                type: object
                description: |
                  Indicates how VM vNUMA should be configured
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  num_vnuma_nodes:
                    schema: &ref_238
                      type: integer
                      format: int64
                      description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_vnuma_config.num_vnuma_nodes
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_vnuma_config.num_vnuma_nodes
                          description: ''
                    description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                    serializedName: num_vnuma_nodes
                    extensions: {}
                    details:
                      csharp:
                        name: NumVnumaNodes
                        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                        required: false
                      default:
                        name: num_vnuma_nodes
                        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                        required: false
                readOnly: false
                required: []
                title: VM vNUMA configuration
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmVnumaConfig
                    description: |
                      Indicates how VM vNUMA should be configured
                    fullname: Nutanix.Powershell.Models.VmVnumaConfig
                    interfaceName: IVmVnumaConfig
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: vm_vnuma_config
                    description: |
                      Indicates how VM vNUMA should be configured
              description: Information regarding vNUMA configuration.
              serializedName: vnuma_config
              extensions: {}
              details:
                csharp:
                  name: VnumaConfig
                  description: Information regarding vNUMA configuration.
                  required: false
                default:
                  name: vnuma_config
                  description: Information regarding vNUMA configuration.
                  required: false
          readOnly: false
          required: []
          title: VM Resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmResources
              description: VM Resources Definition.
              fullname: Nutanix.Powershell.Models.VmResources
              interfaceName: IVmResources
              namespace: Nutanix.Powershell.Models
            default:
              name: vm_resources
              description: VM Resources Definition.
        description: VM Resources Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: VM Resources Definition.
            required: true
          default:
            name: resources
            description: VM Resources Definition.
            required: true
    readOnly: false
    required:
      - name
      - resources
    title: vm Intent Spec with placement specified
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: Vm
        description: An intentful representation of a vm spec
        fullname: Nutanix.Powershell.Models.Vm
        interfaceName: IVm
        namespace: Nutanix.Powershell.Models
      default:
        name: vm
        description: An intentful representation of a vm spec
  vm_boot_config: *ref_26
  vm_boot_device: *ref_27
  vm_def_status: &ref_35
    type: object
    description: An intentful representation of a vm status
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_151
          type: string
          description: vm Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.name
              description: ''
        description: vm Name.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: vm Name.
            required: true
          default:
            name: name
            description: vm Name.
            required: true
      description:
        schema: &ref_149
          type: string
          description: A description for vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.description
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.description
              description: ''
        description: A description for vm.
        serializedName: description
        extensions: {}
        details:
          csharp:
            name: Description
            description: A description for vm.
            required: false
          default:
            name: description
            description: A description for vm.
            required: false
      availability_zone_reference:
        schema: *ref_20
        description: The reference to a availability_zone
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: The reference to a availability_zone
            required: false
          default:
            name: availability_zone_reference
            description: The reference to a availability_zone
            required: false
      cluster_reference:
        schema: *ref_21
        description: The reference to a cluster
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: The reference to a cluster
            required: false
          default:
            name: cluster_reference
            description: The reference to a cluster
            required: false
      message_list:
        schema: &ref_150
          type: string
          description: 'Any error messages for the vm, if in an error state.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.message_list
              description: ''
        description: 'Any error messages for the vm, if in an error state.'
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: 'Any error messages for the vm, if in an error state.'
            required: false
          default:
            name: message_list
            description: 'Any error messages for the vm, if in an error state.'
            required: false
      resources:
        schema: &ref_41
          type: object
          description: VM Resources Status Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            boot_config:
              schema: *ref_26
              description: Indicates which device the VM should boot from.
              serializedName: boot_config
              extensions: {}
              details:
                csharp:
                  name: BootConfig
                  description: Indicates which device the VM should boot from.
                  required: false
                default:
                  name: boot_config
                  description: Indicates which device the VM should boot from.
                  required: false
            disk_list:
              schema: &ref_222
                type: string
                description: Disks attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.disk_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.disk_list
                    description: ''
              description: Disks attached to the VM.
              serializedName: disk_list
              extensions: {}
              details:
                csharp:
                  name: DiskList
                  description: Disks attached to the VM.
                  required: false
                default:
                  name: disk_list
                  description: Disks attached to the VM.
                  required: false
            gpu_list:
              schema: &ref_223
                type: string
                description: GPUs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.gpu_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.gpu_list
                    description: ''
              description: GPUs attached to the VM.
              serializedName: gpu_list
              extensions: {}
              details:
                csharp:
                  name: GpuList
                  description: GPUs attached to the VM.
                  required: false
                default:
                  name: gpu_list
                  description: GPUs attached to the VM.
                  required: false
            guest_customization:
              schema: *ref_28
              description: >
                VM guests may be customized at boot time using one of several
                different methods. Currently, cloud-init w/ ConfigDriveV2 (for
                Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE
                OF sysprep or cloud_init should be provided. Note that guest
                customization can currently only be set during VM creation.
                Attempting to change it after creation will result in an error.
                Additional properties can be specified. For example - in the
                context of VM template creation if "override_script" is set to
                "True" then the deployer can upload their own custom script.
              serializedName: guest_customization
              extensions: {}
              details:
                csharp:
                  name: GuestCustomization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
                default:
                  name: guest_customization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
            guest_os_id:
              schema: &ref_224
                type: string
                description: >
                  Guest OS Identifier. For ESX, refer to VMware documentation
                  link
                  (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                  for the list of guest OS identifiers.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.guest_os_id
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.guest_os_id
                    description: ''
              description: >
                Guest OS Identifier. For ESX, refer to VMware documentation link
                (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                for the list of guest OS identifiers.
              serializedName: guest_os_id
              extensions: {}
              details:
                csharp:
                  name: GuestOsId
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
                default:
                  name: guest_os_id
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
            guest_tools:
              schema: *ref_29
              description: Information regarding guest tools.
              serializedName: guest_tools
              extensions: {}
              details:
                csharp:
                  name: GuestTools
                  description: Information regarding guest tools.
                  required: false
                default:
                  name: guest_tools
                  description: Information regarding guest tools.
                  required: false
            hardware_clock_timezone:
              schema: &ref_225
                type: string
                description: >
                  VM's hardware clock timezone in IANA TZDB format
                  (America/Los_Angeles).
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.hardware_clock_timezone
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.hardware_clock_timezone
                    description: ''
              description: >
                VM's hardware clock timezone in IANA TZDB format
                (America/Los_Angeles).
              serializedName: hardware_clock_timezone
              extensions: {}
              details:
                csharp:
                  name: HardwareClockTimezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
                default:
                  name: hardware_clock_timezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
            host_reference:
              schema: *ref_25
              description: Reference to a kind
              serializedName: host_reference
              extensions: {}
              details:
                csharp:
                  name: HostReference
                  description: Reference to a kind
                  required: false
                default:
                  name: host_reference
                  description: Reference to a kind
                  required: false
            hypervisor_type:
              schema: &ref_226
                type: string
                description: |
                  The hypervisor type for the hypervisor the VM is hosted on.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ESX
                    - HyperV
                    - AHV
                details:
                  csharp:
                    name: .vm_resources_def_status.hypervisor_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.hypervisor_type
                    description: ''
              description: |
                The hypervisor type for the hypervisor the VM is hosted on.
              serializedName: hypervisor_type
              extensions: {}
              details:
                csharp:
                  name: HypervisorType
                  description: |
                    The hypervisor type for the hypervisor the VM is hosted on.
                  required: false
                default:
                  name: hypervisor_type
                  description: |
                    The hypervisor type for the hypervisor the VM is hosted on.
                  required: false
            memory_size_mib:
              schema: &ref_227
                type: integer
                format: int32
                description: Memory size in MiB.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.memory_size_mib
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.memory_size_mib
                    description: ''
              description: Memory size in MiB.
              serializedName: memory_size_mib
              extensions: {}
              details:
                csharp:
                  name: MemorySizeMib
                  description: Memory size in MiB.
                  required: false
                default:
                  name: memory_size_mib
                  description: Memory size in MiB.
                  required: false
            nic_list:
              schema: &ref_228
                type: string
                description: NICs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.nic_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.nic_list
                    description: ''
              description: NICs attached to the VM.
              serializedName: nic_list
              extensions: {}
              details:
                csharp:
                  name: NicList
                  description: NICs attached to the VM.
                  required: false
                default:
                  name: nic_list
                  description: NICs attached to the VM.
                  required: false
            num_sockets:
              schema: &ref_229
                type: integer
                format: int32
                description: Number of vCPU sockets.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.num_sockets
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.num_sockets
                    description: ''
              description: Number of vCPU sockets.
              serializedName: num_sockets
              extensions: {}
              details:
                csharp:
                  name: NumSockets
                  description: Number of vCPU sockets.
                  required: false
                default:
                  name: num_sockets
                  description: Number of vCPU sockets.
                  required: false
            num_vcpus_per_socket:
              schema: &ref_230
                type: integer
                format: int32
                description: Number of vCPUs per socket.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.num_vcpus_per_socket
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.num_vcpus_per_socket
                    description: ''
              description: Number of vCPUs per socket.
              serializedName: num_vcpus_per_socket
              extensions: {}
              details:
                csharp:
                  name: NumVcpusPerSocket
                  description: Number of vCPUs per socket.
                  required: false
                default:
                  name: num_vcpus_per_socket
                  description: Number of vCPUs per socket.
                  required: false
            parent_reference:
              schema: *ref_25
              description: |
                Reference to an entity that the VM cloned from.
              serializedName: parent_reference
              extensions: {}
              details:
                csharp:
                  name: ParentReference
                  description: |
                    Reference to an entity that the VM cloned from.
                  required: false
                default:
                  name: parent_reference
                  description: |
                    Reference to an entity that the VM cloned from.
                  required: false
            power_state:
              schema: &ref_231
                type: string
                description: Current power state of the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - 'ON'
                    - 'OFF'
                    - PAUSED
                    - UNKNOWN
                details:
                  csharp:
                    name: .vm_resources_def_status.power_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.power_state
                    description: ''
              description: Current power state of the VM.
              serializedName: power_state
              extensions: {}
              details:
                csharp:
                  name: PowerState
                  description: Current power state of the VM.
                  required: false
                default:
                  name: power_state
                  description: Current power state of the VM.
                  required: false
            power_state_mechanism:
              schema: *ref_30
              description: >
                Indicates the mechanism guiding the VM power state transition.
                Currently used for the transition to "OFF" state.
              serializedName: power_state_mechanism
              extensions: {}
              details:
                csharp:
                  name: PowerStateMechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
                default:
                  name: power_state_mechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
            vga_console_enabled:
              schema: &ref_232
                type: boolean
                description: Indicates whether VGA console has been enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.vga_console_enabled
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.vga_console_enabled
                    description: ''
              description: Indicates whether VGA console has been enabled or not.
              serializedName: vga_console_enabled
              extensions: {}
              details:
                csharp:
                  name: VgaConsoleEnabled
                  description: Indicates whether VGA console has been enabled or not.
                  required: false
                default:
                  name: vga_console_enabled
                  description: Indicates whether VGA console has been enabled or not.
                  required: false
            vnuma_config:
              schema: *ref_31
              description: Information regarding vNUMA configuration.
              serializedName: vnuma_config
              extensions: {}
              details:
                csharp:
                  name: VnumaConfig
                  description: Information regarding vNUMA configuration.
                  required: false
                default:
                  name: vnuma_config
                  description: Information regarding vNUMA configuration.
                  required: false
          readOnly: false
          required: []
          title: VM Resources Status Definition
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmResourcesDefStatus
              description: VM Resources Status Definition.
              fullname: Nutanix.Powershell.Models.VmResourcesDefStatus
              interfaceName: IVmResourcesDefStatus
              namespace: Nutanix.Powershell.Models
            default:
              name: vm_resources_def_status
              description: VM Resources Status Definition.
        description: VM Resources Status Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: VM Resources Status Definition.
            required: true
          default:
            name: resources
            description: VM Resources Status Definition.
            required: true
      state:
        schema: &ref_152
          type: string
          description: The state of the vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.state
              description: ''
        description: The state of the vm.
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: The state of the vm.
            required: false
          default:
            name: state
            description: The state of the vm.
            required: false
    readOnly: false
    required:
      - name
      - resources
    title: vm Intent Status with placement specified
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmDefStatus
        description: An intentful representation of a vm status
        fullname: Nutanix.Powershell.Models.VmDefStatus
        interfaceName: IVmDefStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_def_status
        description: An intentful representation of a vm status
  vm_disk:
    type: object
    description: VirtualMachine Disk (VM Disk).
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      data_source_reference:
        schema: *ref_25
        description: Reference to a kind
        serializedName: data_source_reference
        extensions: {}
        details:
          csharp:
            name: DataSourceReference
            description: Reference to a kind
            required: false
          default:
            name: data_source_reference
            description: Reference to a kind
            required: false
      device_properties:
        schema: &ref_153
          type: object
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            device_type:
              schema: &ref_154
                type: string
                allOf: []
                anyOf: []
                default: DISK
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - DISK
                    - CDROM
                    - VOLUME_GROUP
                details:
                  csharp:
                    name: .vm_disk.device_properties.device_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_disk.device_properties.device_type
                    description: ''
              description: ''
              serializedName: device_type
              extensions: {}
              details:
                csharp:
                  name: DeviceType
                  description: ''
                  required: false
                default:
                  name: device_type
                  description: ''
                  required: false
            disk_address:
              schema: *ref_22
              description: Disk Address.
              serializedName: disk_address
              extensions: {}
              details:
                csharp:
                  name: DiskAddress
                  description: Disk Address.
                  required: false
                default:
                  name: disk_address
                  description: Disk Address.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmDiskDeviceProperties
              description: ''
              fullname: Nutanix.Powershell.Models.VmDiskDeviceProperties
              interfaceName: IVmDiskDeviceProperties
              namespace: Nutanix.Powershell.Models
            default:
              name: .vm_disk.device_properties
              description: ''
        description: ''
        serializedName: device_properties
        extensions: {}
        details:
          csharp:
            name: DeviceProperties
            description: ''
            required: false
          default:
            name: device_properties
            description: ''
            required: false
      disk_size_bytes:
        schema: &ref_155
          type: integer
          format: int64
          description: Size of the disk in Bytes.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_disk.disk_size_bytes
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_disk.disk_size_bytes
              description: ''
        description: Size of the disk in Bytes.
        serializedName: disk_size_bytes
        extensions: {}
        details:
          csharp:
            name: DiskSizeBytes
            description: Size of the disk in Bytes.
            required: false
          default:
            name: disk_size_bytes
            description: Size of the disk in Bytes.
            required: false
      disk_size_mib:
        schema: &ref_156
          type: integer
          format: int32
          description: >
            Size of the disk in MiB. Must match the size specified in
            'disk_size_bytes' - rounded up to the nearest MiB -  when that field
            is present.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_disk.disk_size_mib
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_disk.disk_size_mib
              description: ''
        description: >
          Size of the disk in MiB. Must match the size specified in
          'disk_size_bytes' - rounded up to the nearest MiB -  when that field
          is present.
        serializedName: disk_size_mib
        extensions: {}
        details:
          csharp:
            name: DiskSizeMib
            description: >
              Size of the disk in MiB. Must match the size specified in
              'disk_size_bytes' - rounded up to the nearest MiB -  when that
              field is present.
            required: false
          default:
            name: disk_size_mib
            description: >
              Size of the disk in MiB. Must match the size specified in
              'disk_size_bytes' - rounded up to the nearest MiB -  when that
              field is present.
            required: false
      uuid:
        schema: &ref_157
          type: string
          format: UUID
          description: >
            The device ID which is used to uniquely identify this particular
            disk.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_disk.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_disk.uuid
              description: ''
        description: |
          The device ID which is used to uniquely identify this particular disk.
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: >
              The device ID which is used to uniquely identify this particular
              disk.
            required: false
          default:
            name: uuid
            description: >
              The device ID which is used to uniquely identify this particular
              disk.
            required: false
      volume_group_reference:
        schema: *ref_25
        description: Reference to a kind
        serializedName: volume_group_reference
        extensions: {}
        details:
          csharp:
            name: VolumeGroupReference
            description: Reference to a kind
            required: false
          default:
            name: volume_group_reference
            description: Reference to a kind
            required: false
    readOnly: false
    required: []
    title: VirtualMachine Disk (VM Disk)
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmDisk
        description: VirtualMachine Disk (VM Disk).
        fullname: Nutanix.Powershell.Models.VmDisk
        interfaceName: IVmDisk
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_disk
        description: VirtualMachine Disk (VM Disk).
  vm_gpu:
    type: object
    description: Graphics resource information for the Virtual Machine.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      device_id:
        schema: &ref_158
          type: integer
          format: int32
          description: The device ID of the GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu.device_id
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu.device_id
              description: ''
        description: The device ID of the GPU.
        serializedName: device_id
        extensions: {}
        details:
          csharp:
            name: DeviceId
            description: The device ID of the GPU.
            required: false
          default:
            name: device_id
            description: The device ID of the GPU.
            required: false
      mode:
        schema: &ref_159
          type: string
          description: The mode of this GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - PASSTHROUGH_GRAPHICS
              - PASSTHROUGH_COMPUTE
              - VIRTUAL
          details:
            csharp:
              name: .vm_gpu.mode
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu.mode
              description: ''
        description: The mode of this GPU.
        serializedName: mode
        extensions: {}
        details:
          csharp:
            name: Mode
            description: The mode of this GPU.
            required: false
          default:
            name: mode
            description: The mode of this GPU.
            required: false
      vendor:
        schema: &ref_160
          type: string
          description: The vendor of the GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - NVIDIA
              - INTEL
              - AMD
          details:
            csharp:
              name: .vm_gpu.vendor
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu.vendor
              description: ''
        description: The vendor of the GPU.
        serializedName: vendor
        extensions: {}
        details:
          csharp:
            name: Vendor
            description: The vendor of the GPU.
            required: false
          default:
            name: vendor
            description: The vendor of the GPU.
            required: false
    readOnly: false
    required: []
    title: VirtualMachine GPU
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmGpu
        description: Graphics resource information for the Virtual Machine.
        fullname: Nutanix.Powershell.Models.VmGpu
        interfaceName: IVmGpu
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_gpu
        description: Graphics resource information for the Virtual Machine.
  vm_gpu_output_status:
    type: object
    description: Graphics resource status information for the Virtual Machine.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_166
          type: string
          description: Name of the GPU resource.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.name
              description: ''
        description: Name of the GPU resource.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the GPU resource.
            required: false
          default:
            name: name
            description: Name of the GPU resource.
            required: false
      device_id:
        schema: &ref_161
          type: integer
          format: int32
          description: The device ID of the GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.device_id
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.device_id
              description: ''
        description: The device ID of the GPU.
        serializedName: device_id
        extensions: {}
        details:
          csharp:
            name: DeviceId
            description: The device ID of the GPU.
            required: false
          default:
            name: device_id
            description: The device ID of the GPU.
            required: false
      fraction:
        schema: &ref_162
          type: integer
          format: int32
          description: Fraction of the physical GPU assigned.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.fraction
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.fraction
              description: ''
        description: Fraction of the physical GPU assigned.
        serializedName: fraction
        extensions: {}
        details:
          csharp:
            name: Fraction
            description: Fraction of the physical GPU assigned.
            required: false
          default:
            name: fraction
            description: Fraction of the physical GPU assigned.
            required: false
      frame_buffer_size_mib:
        schema: &ref_163
          type: integer
          format: int64
          description: GPU frame buffer size in MiB.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.frame_buffer_size_mib
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.frame_buffer_size_mib
              description: ''
        description: GPU frame buffer size in MiB.
        serializedName: frame_buffer_size_mib
        extensions: {}
        details:
          csharp:
            name: FrameBufferSizeMib
            description: GPU frame buffer size in MiB.
            required: false
          default:
            name: frame_buffer_size_mib
            description: GPU frame buffer size in MiB.
            required: false
      guest_driver_version:
        schema: &ref_164
          type: string
          description: Last determined guest driver version.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.guest_driver_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.guest_driver_version
              description: ''
        description: Last determined guest driver version.
        serializedName: guest_driver_version
        extensions: {}
        details:
          csharp:
            name: GuestDriverVersion
            description: Last determined guest driver version.
            required: false
          default:
            name: guest_driver_version
            description: Last determined guest driver version.
            required: false
      mode:
        schema: &ref_165
          type: string
          description: The mode of this GPU
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - PASSTHROUGH_GRAPHICS
              - PASSTHROUGH_COMPUTE
              - VIRTUAL
          details:
            csharp:
              name: .vm_gpu_output_status.mode
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.mode
              description: ''
        description: The mode of this GPU
        serializedName: mode
        extensions: {}
        details:
          csharp:
            name: Mode
            description: The mode of this GPU
            required: false
          default:
            name: mode
            description: The mode of this GPU
            required: false
      num_virtual_display_heads:
        schema: &ref_167
          type: integer
          format: int32
          description: Number of supported virtual display heads.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.num_virtual_display_heads
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.num_virtual_display_heads
              description: ''
        description: Number of supported virtual display heads.
        serializedName: num_virtual_display_heads
        extensions: {}
        details:
          csharp:
            name: NumVirtualDisplayHeads
            description: Number of supported virtual display heads.
            required: false
          default:
            name: num_virtual_display_heads
            description: Number of supported virtual display heads.
            required: false
      pci_address:
        schema: &ref_168
          type: string
          description: |
            GPU {segment:bus:device:function} (sbdf) address if assigned.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.pci_address
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.pci_address
              description: ''
        description: |
          GPU {segment:bus:device:function} (sbdf) address if assigned.
        serializedName: pci_address
        extensions: {}
        details:
          csharp:
            name: PciAddress
            description: |
              GPU {segment:bus:device:function} (sbdf) address if assigned.
            required: false
          default:
            name: pci_address
            description: |
              GPU {segment:bus:device:function} (sbdf) address if assigned.
            required: false
      uuid:
        schema: &ref_169
          type: string
          format: UUID
          description: UUID of the GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_gpu_output_status.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.uuid
              description: ''
        description: UUID of the GPU.
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: UUID of the GPU.
            required: false
          default:
            name: uuid
            description: UUID of the GPU.
            required: false
      vendor:
        schema: &ref_170
          type: string
          description: The vendor of the GPU.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - NVIDIA
              - INTEL
              - AMD
          details:
            csharp:
              name: .vm_gpu_output_status.vendor
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_gpu_output_status.vendor
              description: ''
        description: The vendor of the GPU.
        serializedName: vendor
        extensions: {}
        details:
          csharp:
            name: Vendor
            description: The vendor of the GPU.
            required: false
          default:
            name: vendor
            description: The vendor of the GPU.
            required: false
    readOnly: false
    required: []
    title: Virtual Machine GPU status
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmGpuOutputStatus
        description: Graphics resource status information for the Virtual Machine.
        fullname: Nutanix.Powershell.Models.VmGpuOutputStatus
        interfaceName: IVmGpuOutputStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_gpu_output_status
        description: Graphics resource status information for the Virtual Machine.
  vm_guest_power_state_transition_config: *ref_32
  vm_intent_input: &ref_240
    type: object
    description: An intentful representation of a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_173
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_input.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_34
          type: object
          description: The vm kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_194
                type: string
                description: vm name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.name
                    description: ''
              description: vm name
              serializedName: name
              extensions: {}
              details:
                csharp:
                  name: Name
                  description: vm name
                  required: false
                default:
                  name: name
                  description: vm name
                  required: false
            categories:
              schema: &ref_189
                type: object
                description: Categories for the vm
                additionalProperties: &ref_190
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .vm_metadata.categories.additionalItemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .vm_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmMetadataCategories
                    description: Categories for the vm
                    fullname: Nutanix.Powershell.Models.VmMetadataCategories
                    interfaceName: IVmMetadataCategories
                    namespace: Nutanix.Powershell.Models
                  default:
                    name: .vm_metadata.categories
                    description: Categories for the vm
              description: Categories for the vm
              serializedName: categories
              extensions: {}
              details:
                csharp:
                  name: Categories
                  description: Categories for the vm
                  required: false
                default:
                  name: categories
                  description: Categories for the vm
                  required: false
            creation_time:
              schema: &ref_191
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when vm was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.creation_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.creation_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when vm was created
              serializedName: creation_time
              extensions: {}
              details:
                csharp:
                  name: CreationTime
                  description: |
                    UTC date and time in RFC-3339 format when vm was created
                  required: false
                default:
                  name: creation_time
                  description: |
                    UTC date and time in RFC-3339 format when vm was created
                  required: false
            kind:
              schema: &ref_192
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm
                details:
                  csharp:
                    name: .vm_metadata.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            last_update_time:
              schema: &ref_193
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when vm was last updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: true
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.last_update_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.last_update_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when vm was last updated
              serializedName: last_update_time
              extensions: {}
              details:
                csharp:
                  name: LastUpdateTime
                  description: >
                    UTC date and time in RFC-3339 format when vm was last
                    updated
                  required: false
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when vm was last
                    updated
                  required: false
            owner_reference:
              schema: *ref_18
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                csharp:
                  name: OwnerReference
                  description: The reference to a user
                  required: false
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: *ref_12
              description: The project the vm is in.
              serializedName: project_reference
              extensions: {}
              details:
                csharp:
                  name: ProjectReference
                  description: The project the vm is in.
                  required: false
                default:
                  name: project_reference
                  description: The project the vm is in.
                  required: false
            spec_hash:
              schema: &ref_195
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.spec_hash
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                csharp:
                  name: SpecHash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_196
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.spec_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                csharp:
                  name: SpecVersion
                  description: Version number of the latest spec.
                  required: false
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_197
                type: string
                format: UUID
                description: vm uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.uuid
                    description: ''
              description: vm uuid
              serializedName: uuid
              extensions: {}
              details:
                csharp:
                  name: Uuid
                  description: vm uuid
                  required: false
                default:
                  name: uuid
                  description: vm uuid
                  required: false
          readOnly: false
          required: []
          title: vm metadata
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmMetadata
              description: The vm kind metadata
              fullname: Nutanix.Powershell.Models.VmMetadata
              interfaceName: IVmMetadata
              namespace: Nutanix.Powershell.Models
            default:
              name: vm_metadata
              description: The vm kind metadata
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_33
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: true
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: true
    readOnly: false
    required:
      - metadata
      - spec
    title: vm Intent Entity
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentInput
        description: An intentful representation of a vm
        fullname: Nutanix.Powershell.Models.VmIntentInput
        interfaceName: IVmIntentInput
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_intent_input
        description: An intentful representation of a vm
  vm_intent_resource:
    type: object
    description: Response object for intentful operations on a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_174
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_resource.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_34
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_33
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: false
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: false
      status:
        schema: *ref_35
        description: An intentful representation of a vm status
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: An intentful representation of a vm status
            required: false
          default:
            name: status
            description: An intentful representation of a vm status
            required: false
    readOnly: false
    required:
      - metadata
    title: vm Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentResource
        description: Response object for intentful operations on a vm
        fullname: Nutanix.Powershell.Models.VmIntentResource
        interfaceName: IVmIntentResource
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_intent_resource
        description: Response object for intentful operations on a vm
  vm_intent_response:
    type: object
    description: Response object for intentful operations on a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_175
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_34
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_33
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: false
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: false
      status:
        schema: *ref_35
        description: An intentful representation of a vm status
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: An intentful representation of a vm status
            required: false
          default:
            name: status
            description: An intentful representation of a vm status
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: vm Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentResponse
        description: Response object for intentful operations on a vm
        fullname: Nutanix.Powershell.Models.VmIntentResponse
        interfaceName: IVmIntentResponse
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_intent_response
        description: Response object for intentful operations on a vm
  vm_list_intent_response: &ref_251
    type: object
    description: Response object for intentful operation of vms
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_176
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_177
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_intent_response.entities
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          csharp:
            name: Entities
            description: ''
            required: false
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_37
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_183
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.filter
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                csharp:
                  name: Filter
                  description: The filter used for the results
                  required: false
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_184
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm
                details:
                  csharp:
                    name: .vm_list_metadata_output.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_185
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.length
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                csharp:
                  name: Length
                  description: The number of records retrieved relative to the offset
                  required: false
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_186
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.offset
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                csharp:
                  name: Offset
                  description: Offset from the start of the entity list
                  required: false
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_187
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.sort_attribute
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                csharp:
                  name: SortAttribute
                  description: The attribute to perform sort on
                  required: false
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: *ref_36
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                csharp:
                  name: SortOrder
                  description: The sort order in which results are returned
                  required: false
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_188
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.total_matches
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                csharp:
                  name: TotalMatches
                  description: Total matches found
                  required: false
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for vm list output
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmListMetadataOutput
              description: |
                All api calls that return a list will have this metadata block
              fullname: Nutanix.Powershell.Models.VmListMetadataOutput
              interfaceName: IVmListMetadataOutput
              namespace: Nutanix.Powershell.Models
            default:
              name: vm_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmListIntentResponse
        description: Response object for intentful operation of vms
        fullname: Nutanix.Powershell.Models.VmListIntentResponse
        interfaceName: IVmListIntentResponse
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_list_intent_response
        description: Response object for intentful operation of vms
  vm_list_metadata: &ref_242
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_178
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.filter
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          csharp:
            name: Filter
            description: The filter in FIQL syntax used for the results.
            required: false
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_179
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm
          details:
            csharp:
              name: .vm_list_metadata.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_180
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.length
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          csharp:
            name: Length
            description: The number of records to retrieve relative to the offset
            required: false
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_181
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.offset
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          csharp:
            name: Offset
            description: Offset from the start of the entity list
            required: false
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_182
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.sort_attribute
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          csharp:
            name: SortAttribute
            description: The attribute to perform sort on
            required: false
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_36
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          csharp:
            name: SortOrder
            description: The sort order in which results are returned
            required: false
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for vm list
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmListMetadata
        description: >
          All api calls that return a list will have this metadata block as
          input
        fullname: Nutanix.Powershell.Models.VmListMetadata
        interfaceName: IVmListMetadata
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  vm_list_metadata_output: *ref_37
  vm_metadata: *ref_34
  vm_nic:
    type: object
    description: Virtual Machine NIC.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      ip_endpoint_list:
        schema: &ref_198
          type: string
          description: |
            IP endpoints for the adapter. Currently, IPv4 addresses are
            supported.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic.ip_endpoint_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.ip_endpoint_list
              description: ''
        description: |
          IP endpoints for the adapter. Currently, IPv4 addresses are
          supported.
        serializedName: ip_endpoint_list
        extensions: {}
        details:
          csharp:
            name: IpEndpointList
            description: |
              IP endpoints for the adapter. Currently, IPv4 addresses are
              supported.
            required: false
          default:
            name: ip_endpoint_list
            description: |
              IP endpoints for the adapter. Currently, IPv4 addresses are
              supported.
            required: false
      mac_address:
        schema: &ref_199
          type: string
          description: The MAC address for the adapter.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic.mac_address
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.mac_address
              description: ''
        description: The MAC address for the adapter.
        serializedName: mac_address
        extensions: {}
        details:
          csharp:
            name: MacAddress
            description: The MAC address for the adapter.
            required: false
          default:
            name: mac_address
            description: The MAC address for the adapter.
            required: false
      model:
        schema: &ref_200
          type: string
          description: The model of this NIC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - VIRTIO
              - E1000
          details:
            csharp:
              name: .vm_nic.model
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.model
              description: ''
        description: The model of this NIC.
        serializedName: model
        extensions: {}
        details:
          csharp:
            name: Model
            description: The model of this NIC.
            required: false
          default:
            name: model
            description: The model of this NIC.
            required: false
      network_function_chain_reference:
        schema: *ref_38
        description: The reference to a network_function_chain
        serializedName: network_function_chain_reference
        extensions: {}
        details:
          csharp:
            name: NetworkFunctionChainReference
            description: The reference to a network_function_chain
            required: false
          default:
            name: network_function_chain_reference
            description: The reference to a network_function_chain
            required: false
      network_function_nic_type:
        schema: &ref_201
          type: string
          description: |
            The type of this Network function NIC. Defaults to INGRESS.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - INGRESS
              - EGRESS
              - TAP
          details:
            csharp:
              name: .vm_nic.network_function_nic_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.network_function_nic_type
              description: ''
        description: |
          The type of this Network function NIC. Defaults to INGRESS.
        serializedName: network_function_nic_type
        extensions: {}
        details:
          csharp:
            name: NetworkFunctionNicType
            description: |
              The type of this Network function NIC. Defaults to INGRESS.
            required: false
          default:
            name: network_function_nic_type
            description: |
              The type of this Network function NIC. Defaults to INGRESS.
            required: false
      nic_type:
        schema: &ref_202
          type: string
          description: The type of this NIC. Defaults to NORMAL_NIC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - NORMAL_NIC
              - DIRECT_NIC
              - NETWORK_FUNCTION_NIC
          details:
            csharp:
              name: .vm_nic.nic_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.nic_type
              description: ''
        description: The type of this NIC. Defaults to NORMAL_NIC.
        serializedName: nic_type
        extensions: {}
        details:
          csharp:
            name: NicType
            description: The type of this NIC. Defaults to NORMAL_NIC.
            required: false
          default:
            name: nic_type
            description: The type of this NIC. Defaults to NORMAL_NIC.
            required: false
      subnet_reference:
        schema: *ref_39
        description: The reference to a subnet
        serializedName: subnet_reference
        extensions: {}
        details:
          csharp:
            name: SubnetReference
            description: The reference to a subnet
            required: false
          default:
            name: subnet_reference
            description: The reference to a subnet
            required: false
      uuid:
        schema: &ref_203
          type: string
          format: UUID
          description: >
            The NIC's UUID, which is used to uniquely identify this particular
            NIC. This UUID may be used to refer to the NIC outside the context
            of the particular VM it is attached to.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic.uuid
              description: ''
        description: >
          The NIC's UUID, which is used to uniquely identify this particular
          NIC. This UUID may be used to refer to the NIC outside the context of
          the particular VM it is attached to.
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: >
              The NIC's UUID, which is used to uniquely identify this particular
              NIC. This UUID may be used to refer to the NIC outside the context
              of the particular VM it is attached to.
            required: false
          default:
            name: uuid
            description: >
              The NIC's UUID, which is used to uniquely identify this particular
              NIC. This UUID may be used to refer to the NIC outside the context
              of the particular VM it is attached to.
            required: false
    readOnly: false
    required: []
    title: Virtual Machine NIC
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmNic
        description: Virtual Machine NIC.
        fullname: Nutanix.Powershell.Models.VmNic
        interfaceName: IVmNic
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_nic
        description: Virtual Machine NIC.
  vm_nic_output_status:
    type: object
    description: Virtual Machine NIC Status.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      floating_ip:
        schema: &ref_204
          type: string
          description: The Floating IP associated with the vnic.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic_output_status.floating_ip
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.floating_ip
              description: ''
        description: The Floating IP associated with the vnic.
        serializedName: floating_ip
        extensions: {}
        details:
          csharp:
            name: FloatingIp
            description: The Floating IP associated with the vnic.
            required: false
          default:
            name: floating_ip
            description: The Floating IP associated with the vnic.
            required: false
      ip_endpoint_list:
        schema: &ref_205
          type: string
          description: >
            IP endpoints for the adapter. Currently, IPv4 addresses are
            supported.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic_output_status.ip_endpoint_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.ip_endpoint_list
              description: ''
        description: |
          IP endpoints for the adapter. Currently, IPv4 addresses are supported.
        serializedName: ip_endpoint_list
        extensions: {}
        details:
          csharp:
            name: IpEndpointList
            description: >
              IP endpoints for the adapter. Currently, IPv4 addresses are
              supported.
            required: false
          default:
            name: ip_endpoint_list
            description: >
              IP endpoints for the adapter. Currently, IPv4 addresses are
              supported.
            required: false
      mac_address:
        schema: &ref_206
          type: string
          description: The MAC address for the adapter.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic_output_status.mac_address
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.mac_address
              description: ''
        description: The MAC address for the adapter.
        serializedName: mac_address
        extensions: {}
        details:
          csharp:
            name: MacAddress
            description: The MAC address for the adapter.
            required: false
          default:
            name: mac_address
            description: The MAC address for the adapter.
            required: false
      model:
        schema: &ref_207
          type: string
          description: The model of this NIC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - VIRTIO
              - E1000
          details:
            csharp:
              name: .vm_nic_output_status.model
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.model
              description: ''
        description: The model of this NIC.
        serializedName: model
        extensions: {}
        details:
          csharp:
            name: Model
            description: The model of this NIC.
            required: false
          default:
            name: model
            description: The model of this NIC.
            required: false
      network_function_chain_reference:
        schema: *ref_38
        description: The reference to a network_function_chain
        serializedName: network_function_chain_reference
        extensions: {}
        details:
          csharp:
            name: NetworkFunctionChainReference
            description: The reference to a network_function_chain
            required: false
          default:
            name: network_function_chain_reference
            description: The reference to a network_function_chain
            required: false
      network_function_nic_type:
        schema: &ref_208
          type: string
          description: |
            The type of this Network function NIC. Defaults to INGRESS.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - INGRESS
              - EGRESS
              - TAP
          details:
            csharp:
              name: .vm_nic_output_status.network_function_nic_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.network_function_nic_type
              description: ''
        description: |
          The type of this Network function NIC. Defaults to INGRESS.
        serializedName: network_function_nic_type
        extensions: {}
        details:
          csharp:
            name: NetworkFunctionNicType
            description: |
              The type of this Network function NIC. Defaults to INGRESS.
            required: false
          default:
            name: network_function_nic_type
            description: |
              The type of this Network function NIC. Defaults to INGRESS.
            required: false
      nic_type:
        schema: &ref_209
          type: string
          description: The type of this NIC. Defaults to NORMAL_NIC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - NORMAL_NIC
              - DIRECT_NIC
              - NETWORK_FUNCTION_NIC
          details:
            csharp:
              name: .vm_nic_output_status.nic_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.nic_type
              description: ''
        description: The type of this NIC. Defaults to NORMAL_NIC.
        serializedName: nic_type
        extensions: {}
        details:
          csharp:
            name: NicType
            description: The type of this NIC. Defaults to NORMAL_NIC.
            required: false
          default:
            name: nic_type
            description: The type of this NIC. Defaults to NORMAL_NIC.
            required: false
      subnet_reference:
        schema: *ref_39
        description: The reference to a subnet
        serializedName: subnet_reference
        extensions: {}
        details:
          csharp:
            name: SubnetReference
            description: The reference to a subnet
            required: false
          default:
            name: subnet_reference
            description: The reference to a subnet
            required: false
      uuid:
        schema: &ref_210
          type: string
          format: UUID
          description: >
            The NIC's UUID, which is used to uniquely identify this particular
            NIC. This UUID may be used to refer to the NIC outside the context
            of the particular VM it is attached to.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_nic_output_status.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_nic_output_status.uuid
              description: ''
        description: >
          The NIC's UUID, which is used to uniquely identify this particular
          NIC. This UUID may be used to refer to the NIC outside the context of
          the particular VM it is attached to.
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: >
              The NIC's UUID, which is used to uniquely identify this particular
              NIC. This UUID may be used to refer to the NIC outside the context
              of the particular VM it is attached to.
            required: false
          default:
            name: uuid
            description: >
              The NIC's UUID, which is used to uniquely identify this particular
              NIC. This UUID may be used to refer to the NIC outside the context
              of the particular VM it is attached to.
            required: false
    readOnly: false
    required: []
    title: Virtual Machine NIC Status
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmNicOutputStatus
        description: Virtual Machine NIC Status.
        fullname: Nutanix.Powershell.Models.VmNicOutputStatus
        interfaceName: IVmNicOutputStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_nic_output_status
        description: Virtual Machine NIC Status.
  vm_power_state_mechanism: *ref_30
  vm_resources: *ref_40
  vm_resources_def_status: *ref_41
  vm_status: &ref_252
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_233
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_234
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_235
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm
          details:
            csharp:
              name: .vm_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_236
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_237
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: true
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Nutanix.Powershell.Models.VmStatus
        interfaceName: IVmStatus
        namespace: Nutanix.Powershell.Models
      default:
        name: vm_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  vm_vnuma_config: *ref_31
  .Parameter.uuid: &ref_239
    type: string
    format: UUID
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    pattern: >-
      ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    properties: {}
    readOnly: false
    required: []
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: .Parameter.uuid
        description: ''
        fullname: <INVALID>
        interfaceName: <INVALID>
        namespace: <INVALID>
      default:
        name: .Parameter.uuid
        description: ''
  .access_control_policy_list_intent_response.api_version: *ref_42
  .access_control_policy_list_intent_response.entities: *ref_43
  .access_control_policy_list_metadata.filter: *ref_44
  .access_control_policy_list_metadata.kind: *ref_45
  .access_control_policy_list_metadata.length: *ref_46
  .access_control_policy_list_metadata.offset: *ref_47
  .access_control_policy_list_metadata.sort_attribute: *ref_48
  .access_control_policy_reference.kind: *ref_49
  .access_control_policy_reference.name: *ref_50
  .access_control_policy_reference.uuid: *ref_51
  .access_control_policy_status.api_version: *ref_52
  .access_control_policy_status.code: *ref_53
  .access_control_policy_status.kind: *ref_54
  .access_control_policy_status.state: *ref_55
  .availability_zone_reference.kind: *ref_56
  .availability_zone_reference.name: *ref_57
  .availability_zone_reference.uuid: *ref_58
  .cluster_reference.kind: *ref_59
  .cluster_reference.name: *ref_60
  .cluster_reference.uuid: *ref_61
  .directory_service_reference.kind: *ref_62
  .directory_service_reference.name: *ref_63
  .directory_service_reference.uuid: *ref_64
  .directory_service_user.user_principal_name: *ref_65
  .directory_service_user_status.default_user_principal_name: *ref_66
  .directory_service_user_status.user_principal_name: *ref_67
  .disk_address.adapter_type: *ref_68
  .disk_address.device_index: *ref_69
  .guest_customization.cloud_init: *ref_70
  .guest_customization.cloud_init.meta_data: *ref_71
  .guest_customization.cloud_init.user_data: *ref_72
  .guest_customization.is_overridable: *ref_73
  .guest_customization.sysprep: *ref_74
  .guest_customization.sysprep.install_type: *ref_75
  .guest_customization.sysprep.unattend_xml: *ref_76
  .guest_customization_status.cloud_init: *ref_77
  .guest_customization_status.cloud_init.meta_data: *ref_78
  .guest_customization_status.cloud_init.user_data: *ref_79
  .guest_customization_status.is_overridable: *ref_80
  .guest_customization_status.sysprep: *ref_81
  .guest_customization_status.sysprep.install_type: *ref_82
  .guest_customization_status.sysprep.unattend_xml: *ref_83
  .ip_address.ip: *ref_84
  .ip_address.type: *ref_85
  .message_resource.details: *ref_86
  .message_resource.details.additionalItemType: *ref_87
  .message_resource.message: *ref_88
  .message_resource.reason: *ref_89
  .network_function_chain_reference.kind: *ref_90
  .network_function_chain_reference.name: *ref_91
  .network_function_chain_reference.uuid: *ref_92
  .nutanix_guest_tools_spec.enabled_capability_list: *ref_93
  .nutanix_guest_tools_spec.iso_mount_state: *ref_94
  .nutanix_guest_tools_spec.state: *ref_95
  .nutanix_guest_tools_status.available_version: *ref_96
  .nutanix_guest_tools_status.enabled_capability_list: *ref_97
  .nutanix_guest_tools_status.guest_os_version: *ref_98
  .nutanix_guest_tools_status.is_reachable: *ref_99
  .nutanix_guest_tools_status.iso_mount_state: *ref_100
  .nutanix_guest_tools_status.state: *ref_101
  .nutanix_guest_tools_status.version: *ref_102
  .nutanix_guest_tools_status.vm_mobility_drivers_installed: *ref_103
  .nutanix_guest_tools_status.vss_snapshot_capable: *ref_104
  .project_reference.kind: *ref_105
  .project_reference.name: *ref_106
  .project_reference.uuid: *ref_107
  .reference.kind: *ref_108
  .reference.name: *ref_109
  .reference.uuid: *ref_110
  .resource_domain_resources_status.resources: *ref_111
  .resource_utilization_status.limit: *ref_112
  .resource_utilization_status.resource_type: *ref_113
  .resource_utilization_status.units: *ref_114
  .resource_utilization_status.value: *ref_115
  .subnet_reference.kind: *ref_116
  .subnet_reference.name: *ref_117
  .subnet_reference.uuid: *ref_118
  .user_def_status.message_list: *ref_119
  .user_def_status.name: *ref_120
  .user_def_status.state: *ref_121
  .user_intent_response.api_version: *ref_122
  .user_metadata.categories: *ref_123
  .user_metadata.categories.additionalItemType: *ref_124
  .user_metadata.creation_time: *ref_125
  .user_metadata.kind: *ref_126
  .user_metadata.last_update_time: *ref_127
  .user_metadata.name: *ref_128
  .user_metadata.spec_hash: *ref_129
  .user_metadata.spec_version: *ref_130
  .user_metadata.uuid: *ref_131
  .user_reference.kind: *ref_132
  .user_reference.name: *ref_133
  .user_reference.uuid: *ref_134
  .user_status.api_version: *ref_135
  .user_status.code: *ref_136
  .user_status.kind: *ref_137
  .user_status.message_list: *ref_138
  .user_status.state: *ref_139
  .user_status_resource.access_control_policy_reference_list: *ref_140
  .user_status_resource.display_name: *ref_141
  .user_status_resource.projects_reference_list: *ref_142
  .user_status_resource.resource_usage_summary: *ref_143
  .user_status_resource.user_type: *ref_144
  .vm.description: *ref_145
  .vm.name: *ref_146
  .vm_boot_config.boot_device_order_list: *ref_147
  .vm_boot_device.mac_address: *ref_148
  .vm_def_status.description: *ref_149
  .vm_def_status.message_list: *ref_150
  .vm_def_status.name: *ref_151
  .vm_def_status.state: *ref_152
  .vm_disk.device_properties: *ref_153
  .vm_disk.device_properties.device_type: *ref_154
  .vm_disk.disk_size_bytes: *ref_155
  .vm_disk.disk_size_mib: *ref_156
  .vm_disk.uuid: *ref_157
  .vm_gpu.device_id: *ref_158
  .vm_gpu.mode: *ref_159
  .vm_gpu.vendor: *ref_160
  .vm_gpu_output_status.device_id: *ref_161
  .vm_gpu_output_status.fraction: *ref_162
  .vm_gpu_output_status.frame_buffer_size_mib: *ref_163
  .vm_gpu_output_status.guest_driver_version: *ref_164
  .vm_gpu_output_status.mode: *ref_165
  .vm_gpu_output_status.name: *ref_166
  .vm_gpu_output_status.num_virtual_display_heads: *ref_167
  .vm_gpu_output_status.pci_address: *ref_168
  .vm_gpu_output_status.uuid: *ref_169
  .vm_gpu_output_status.vendor: *ref_170
  .vm_guest_power_state_transition_config.enable_script_exec: *ref_171
  .vm_guest_power_state_transition_config.should_fail_on_script_failure: *ref_172
  .vm_intent_input.api_version: *ref_173
  .vm_intent_resource.api_version: *ref_174
  .vm_intent_response.api_version: *ref_175
  .vm_list_intent_response.api_version: *ref_176
  .vm_list_intent_response.entities: *ref_177
  .vm_list_metadata.filter: *ref_178
  .vm_list_metadata.kind: *ref_179
  .vm_list_metadata.length: *ref_180
  .vm_list_metadata.offset: *ref_181
  .vm_list_metadata.sort_attribute: *ref_182
  .vm_list_metadata_output.filter: *ref_183
  .vm_list_metadata_output.kind: *ref_184
  .vm_list_metadata_output.length: *ref_185
  .vm_list_metadata_output.offset: *ref_186
  .vm_list_metadata_output.sort_attribute: *ref_187
  .vm_list_metadata_output.total_matches: *ref_188
  .vm_metadata.categories: *ref_189
  .vm_metadata.categories.additionalItemType: *ref_190
  .vm_metadata.creation_time: *ref_191
  .vm_metadata.kind: *ref_192
  .vm_metadata.last_update_time: *ref_193
  .vm_metadata.name: *ref_194
  .vm_metadata.spec_hash: *ref_195
  .vm_metadata.spec_version: *ref_196
  .vm_metadata.uuid: *ref_197
  .vm_nic.ip_endpoint_list: *ref_198
  .vm_nic.mac_address: *ref_199
  .vm_nic.model: *ref_200
  .vm_nic.network_function_nic_type: *ref_201
  .vm_nic.nic_type: *ref_202
  .vm_nic.uuid: *ref_203
  .vm_nic_output_status.floating_ip: *ref_204
  .vm_nic_output_status.ip_endpoint_list: *ref_205
  .vm_nic_output_status.mac_address: *ref_206
  .vm_nic_output_status.model: *ref_207
  .vm_nic_output_status.network_function_nic_type: *ref_208
  .vm_nic_output_status.nic_type: *ref_209
  .vm_nic_output_status.uuid: *ref_210
  .vm_power_state_mechanism.mechanism: *ref_211
  .vm_resources.disk_list: *ref_212
  .vm_resources.gpu_list: *ref_213
  .vm_resources.guest_os_id: *ref_214
  .vm_resources.hardware_clock_timezone: *ref_215
  .vm_resources.memory_size_mib: *ref_216
  .vm_resources.nic_list: *ref_217
  .vm_resources.num_sockets: *ref_218
  .vm_resources.num_vcpus_per_socket: *ref_219
  .vm_resources.power_state: *ref_220
  .vm_resources.vga_console_enabled: *ref_221
  .vm_resources_def_status.disk_list: *ref_222
  .vm_resources_def_status.gpu_list: *ref_223
  .vm_resources_def_status.guest_os_id: *ref_224
  .vm_resources_def_status.hardware_clock_timezone: *ref_225
  .vm_resources_def_status.hypervisor_type: *ref_226
  .vm_resources_def_status.memory_size_mib: *ref_227
  .vm_resources_def_status.nic_list: *ref_228
  .vm_resources_def_status.num_sockets: *ref_229
  .vm_resources_def_status.num_vcpus_per_socket: *ref_230
  .vm_resources_def_status.power_state: *ref_231
  .vm_resources_def_status.vga_console_enabled: *ref_232
  .vm_status.api_version: *ref_233
  .vm_status.code: *ref_234
  .vm_status.kind: *ref_235
  .vm_status.message_list: *ref_236
  .vm_status.state: *ref_237
  .vm_vnuma_config.num_vnuma_nodes: *ref_238
info:
  title: Nutanix Intentful API
  version: 3.1.0
  extensions: {}
security:
  - basicAuth: []
servers:
  - url: 'https://35.196.200.179:9440/api/nutanix/v3'
    extensions: {}
tags: []
http:
  examples: {}
  headers: {}
  links: {}
  parameters:
    uuid:
      name: uuid
      schema: *ref_239
      description: The UUID of the entity.
      allowEmptyValue: false
      allowReserved: false
      deprecated: false
      explode: false
      in: path
      required: true
      style: simple
      extensions: {}
      details:
        default:
          name: uuid
          description: The UUID of the entity.
          location: Client
  requestBodies:
    vm_intent_input:
      schema: *ref_240
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
    .listOperation.requestBody: &ref_243
      schema: *ref_241
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: get_entities_request
    .vms.requestBody: &ref_250
      schema: *ref_242
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: get_entities_request
  responses: {}
  securitySchemes: {}
  callbacks: {}
  operations:
    listOperation: &ref_254
      operationId: listOperation
      path: /access_control_policies/list
      method: post
      description: >
        This operation gets a list of Access Control Policies, allowing for
        sorting and pagination. Note: Entities that have not been created
        successfully are not listed.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_243
      responses_new:
        '200':
          - schema: *ref_244
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Nutanix.Powershell.Models.IAccessControlPolicyListIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_245
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Nutanix.Powershell.Models.IAccessControlPolicyStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get a list of Access Control Policies
      tags:
        - access_control_policies
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: access_control_policy
        x-ntnx-operations:
          - view
      details:
        csharp: &ref_255
          name: ListOperation
          description: >
            This operation gets a list of Access Control Policies, allowing for
            sorting and pagination. Note: Entities that have not been created
            successfully are not listed.
          headerparameters: &ref_246 []
        default:
          name: listOperation
          description: >
            This operation gets a list of Access Control Policies, allowing for
            sorting and pagination. Note: Entities that have not been created
            successfully are not listed.
          headerparameters: *ref_246
    users: &ref_256
      operationId: users
      path: /users/me
      method: get
      description: Displays the user currently logged in.
      deprecated: false
      parameters: []
      pathExtensions: {}
      responses_new:
        '200':
          - schema: *ref_247
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Nutanix.Powershell.Models.IUserIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_248
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Nutanix.Powershell.Models.IUserStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Retrieves currently logged in user.
      tags:
        - users
      extensions:
        x-ntnx-kind: user
      details:
        csharp: &ref_257
          name: Users
          description: Displays the user currently logged in.
          headerparameters: &ref_249 []
        default:
          name: users
          description: Displays the user currently logged in.
          headerparameters: *ref_249
    vms: &ref_258
      operationId: vms
      path: /vms/list
      method: post
      description: >
        This operation gets a list of VMs, allowing for sorting and pagination.
        Note: Entities that have not been created successfully are not listed.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_250
      responses_new:
        '200':
          - schema: *ref_251
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Nutanix.Powershell.Models.IVmListIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_252
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Nutanix.Powershell.Models.IVmStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get a list of VMs
      tags:
        - vms
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm
        x-ntnx-operations:
          - view
      details:
        csharp: &ref_259
          name: Vms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: &ref_253 []
        default:
          name: vms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: *ref_253
  extensions: {}
commands:
  parameters: {}
  operations:
    '0':
      operationId: listOperation
      asjob: false
      callGraph:
        - *ref_254
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceOperation
      parameters:
        - name: get_entities_request
          schema: *ref_241
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: get_entities_request
              description: ''
            powershell:
              name: GetEntitiesRequest
              description: >
                All api calls that return a list will have this metadata block
                as input
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Operation
      verb: Get
      extensions: {}
      details:
        csharp: *ref_255
        default:
          name: listOperation
          description: >
            This operation gets a list of Access Control Policies, allowing for
            sorting and pagination. Note: Entities that have not been created
            successfully are not listed.
          headerparameters: *ref_246
        powershell:
          name: OperationFilterKindLengthOffsetSortAttribute
          description: >
            This operation gets a list of Access Control Policies, allowing for
            sorting and pagination. Note: Entities that have not been created
            successfully are not listed.
          hasBody: true
          headerparameters: *ref_246
    '1':
      operationId: users
      asjob: false
      callGraph:
        - *ref_256
      category: System.Management.Automation.VerbsLifecycle
      deprecated: false
      noun: UserService
      parameters: []
      pure: true
      responses: {}
      variant: ''
      verb: Invoke
      extensions: {}
      details:
        csharp: *ref_257
        default:
          name: users
          description: Displays the user currently logged in.
          headerparameters: *ref_249
        powershell:
          name: ''
          description: Displays the user currently logged in.
          headerparameters: *ref_249
    '2':
      operationId: vms
      asjob: false
      callGraph:
        - *ref_258
      category: System.Management.Automation.VerbsLifecycle
      deprecated: false
      noun: VmService
      parameters:
        - name: get_entities_request
          schema: *ref_242
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: get_entities_request
              description: ''
            powershell:
              name: GetEntitiesRequest
              description: >
                All api calls that return a list will have this metadata block
                as input
              isBodyParameter: true
      pure: true
      responses: {}
      variant: ''
      verb: Invoke
      extensions: {}
      details:
        csharp: *ref_259
        default:
          name: vms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: *ref_253
        powershell:
          name: FilterKindLengthOffsetSortAttributeSortOrder
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          hasBody: true
          headerparameters: *ref_253
  extensions: {}
extensions: {}
details:
  csharp:
    name: NutanixIntentfulAPI
    description: ''
    fullname: Nutanix.Powershell.NutanixIntentfulAPI
    namespace: Nutanix.Powershell
  default:
    name: Nutanix Intentful API
    description: ''
