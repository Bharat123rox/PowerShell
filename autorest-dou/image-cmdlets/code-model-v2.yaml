---
schemas:
  availability_zone_reference: &ref_3
    type: object
    description: The reference to a availability_zone
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_21
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .availability_zone_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_20
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: availability_zone
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - availability_zone
          details:
            default:
              name: .availability_zone_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_22
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .availability_zone_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a availability_zone
    writeOnly: false
    extensions: {}
    details:
      default:
        name: availability_zone_reference
        description: The reference to a availability_zone
  checksum: &ref_1
    type: object
    description: Image checksum
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      checksum_algorithm:
        schema: &ref_0
          type: string
          description: The type of checksum calculated for the image
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          title: Checksum algorithm
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - SHA_256
              - SHA_1
          details:
            default:
              name: checksum_algorithm
              description: ''
        description: The type of checksum calculated for the image
        serializedName: checksum_algorithm
        extensions: {}
        details:
          default:
            name: checksum_algorithm
            description: The type of checksum calculated for the image
            required: true
      checksum_value:
        schema: &ref_23
          type: string
          format: bytes
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .checksum.checksum_value
              description: ''
        description: ''
        serializedName: checksum_value
        extensions: {}
        details:
          default:
            name: checksum_value
            description: ''
            required: true
    readOnly: false
    required:
      - checksum_algorithm
      - checksum_value
    title: Image checksum
    writeOnly: false
    extensions: {}
    details:
      default:
        name: checksum
        description: Image checksum
  checksum_algorithm: *ref_0
  cluster_reference: &ref_4
    type: object
    description: The reference to a cluster
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_25
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .cluster_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_24
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: cluster
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - cluster
          details:
            default:
              name: .cluster_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_26
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .cluster_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a cluster
    writeOnly: false
    extensions: {}
    details:
      default:
        name: cluster_reference
        description: The reference to a cluster
  image: &ref_6
    type: object
    description: An intentful representation of a image spec
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_28
          type: string
          description: image Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image.name
              description: ''
        description: image Name.
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: image Name.
            required: true
      description:
        schema: &ref_27
          type: string
          description: A description for image.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 1000
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image.description
              description: ''
        description: A description for image.
        serializedName: description
        extensions: {}
        details:
          default:
            name: description
            description: A description for image.
            required: false
      resources:
        schema: &ref_13
          type: object
          description: Describes the image spec resources object.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            architecture:
              schema: &ref_2
                type: string
                description: The supported CPU architecture for a disk image.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                title: Image architecture
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - X86_64
                    - PPC64
                    - PPC64LE
                details:
                  default:
                    name: image_architecture
                    description: ''
              description: >
                Indicates the CPU architecture that the image is compatible
                with. If this is not specified for an image this will default to
                the CPU architecture type of the cluster.
              serializedName: architecture
              extensions: {}
              details:
                default:
                  name: architecture
                  description: >
                    Indicates the CPU architecture that the image is compatible
                    with. If this is not specified for an image this will
                    default to the CPU architecture type of the cluster.
                  required: false
            checksum:
              schema: *ref_1
              description: >
                Checksum of the image. The checksum is used for image validation
                if the image has a source specified. For images that do not have
                their source specified the checksum is generated by the image
                service.
              serializedName: checksum
              extensions: {}
              details:
                default:
                  name: checksum
                  description: >
                    Checksum of the image. The checksum is used for image
                    validation if the image has a source specified. For images
                    that do not have their source specified the checksum is
                    generated by the image service.
                  required: false
            image_type:
              schema: &ref_5
                type: string
                description: The type of image.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                title: Image type
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - DISK_IMAGE
                    - ISO_IMAGE
                details:
                  default:
                    name: image_type
                    description: ''
              description: The type of image.
              serializedName: image_type
              extensions: {}
              details:
                default:
                  name: image_type
                  description: The type of image.
                  required: false
            source_uri:
              schema: &ref_62
                type: string
                description: >
                  The source URI points at the location of a the source image
                  which is used to create/update image.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_resources.source_uri
                    description: ''
              description: >
                The source URI points at the location of a the source image
                which is used to create/update image.
              serializedName: source_uri
              extensions: {}
              details:
                default:
                  name: source_uri
                  description: >
                    The source URI points at the location of a the source image
                    which is used to create/update image.
                  required: false
            version:
              schema: &ref_16
                type: object
                description: >
                  The image version, which is composed of a product name and
                  product version.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  product_name:
                    schema: &ref_72
                      type: string
                      description: >
                        Name of the producer/distribution of the image. For
                        example windows or red hat.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      maxLength: 64
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .image_version_resources.product_name
                          description: ''
                    description: >
                      Name of the producer/distribution of the image. For
                      example windows or red hat.
                    serializedName: product_name
                    extensions: {}
                    details:
                      default:
                        name: product_name
                        description: >
                          Name of the producer/distribution of the image. For
                          example windows or red hat.
                        required: true
                  product_version:
                    schema: &ref_73
                      type: string
                      description: Version string for the disk image.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      maxLength: 64
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .image_version_resources.product_version
                          description: ''
                    description: Version string for the disk image.
                    serializedName: product_version
                    extensions: {}
                    details:
                      default:
                        name: product_version
                        description: Version string for the disk image.
                        required: true
                readOnly: false
                required:
                  - product_name
                  - product_version
                title: Image version
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: image_version_resources
                    description: >
                      The image version, which is composed of a product name and
                      product version.
              description: The image version
              serializedName: version
              extensions: {}
              details:
                default:
                  name: version
                  description: The image version
                  required: false
          readOnly: false
          required: []
          title: Image spec resources
          writeOnly: false
          extensions: {}
          details:
            default:
              name: image_resources
              description: Describes the image spec resources object.
        description: Describes the image spec resources object.
        serializedName: resources
        extensions: {}
        details:
          default:
            name: resources
            description: Describes the image spec resources object.
            required: true
    readOnly: false
    required:
      - name
      - resources
    title: image Intent Spec with placement specified
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image
        description: An intentful representation of a image spec
  image_architecture: *ref_2
  image_def_status: &ref_8
    type: object
    description: An intentful representation of a image status
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_31
          type: string
          description: image Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_def_status.name
              description: ''
        description: image Name.
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: image Name.
            required: true
      description:
        schema: &ref_29
          type: string
          description: A description for image.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_def_status.description
              description: ''
        description: A description for image.
        serializedName: description
        extensions: {}
        details:
          default:
            name: description
            description: A description for image.
            required: false
      availability_zone_reference:
        schema: *ref_3
        description: The reference to a availability_zone
        serializedName: availability_zone_reference
        extensions: {}
        details:
          default:
            name: availability_zone_reference
            description: The reference to a availability_zone
            required: false
      cluster_reference:
        schema: *ref_4
        description: The reference to a cluster
        serializedName: cluster_reference
        extensions: {}
        details:
          default:
            name: cluster_reference
            description: The reference to a cluster
            required: false
      message_list:
        schema: &ref_30
          type: array
          description: 'Any error messages for the image, if in an error state.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_15
            type: object
            description: message.
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              message:
                schema: &ref_78
                  type: string
                  description: 'If state is ERROR, a message describing the error.'
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .message_resource.message
                      description: ''
                description: 'If state is ERROR, a message describing the error.'
                serializedName: message
                extensions: {}
                details:
                  default:
                    name: message
                    description: 'If state is ERROR, a message describing the error.'
                    required: true
              reason:
                schema: &ref_79
                  type: string
                  description: 'If state is ERROR, a machine-readable snake-cased string.'
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions:
                    x-ntnx-enum:
                      - ACCESS_DENIED
                      - ACCESS_FORBIDDEN
                      - ACTION_NOT_SUPPORTED
                      - AUTHENTICATION_REQUIRED
                      - BEARER_TOKEN_EXPIRED
                      - BEARER_TOKEN_BAD_SIGNATURE
                      - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
                      - CATEGORY_NAME_VALUE_MISMATCH
                      - CONFIGURATION_INCOMPLETE
                      - CONCURRENT_REQUESTS_NOT_ALLOWED
                      - DEFAULT_PROJECT_UNAVAILABLE
                      - DESERIALIZATION_FAILED
                      - DIRECTORY_SERVICE_CONNECTION_FAILED
                      - ENTITY_ALREADY_EXISTS
                      - ENTITY_DELETION_FAILED
                      - ENTITY_IS_READONLY
                      - ENTITY_NAME_UUID_MISMATCH
                      - ENTITY_NOT_CONFIGURED
                      - ENTITY_NOT_FOUND
                      - ENTITY_SAVE_ERROR
                      - ENTITY_UPDATE_FAILED
                      - IDEMPOTENCE_UUID_CREATION_FAILED
                      - IDP_NOT_REACHABLE
                      - INTERNAL_ERROR
                      - INVALID_ARGUMENT
                      - INVALID_AZ_NAME
                      - INVALID_CONTENT_TYPE
                      - INVALID_DATA_FORMAT
                      - INVALID_PORTAL_CONFIGURATION
                      - INVALID_REQUEST
                      - INVALID_UUID
                      - INVALID_OWNER_REFERENCE
                      - INTERNAL_AZ_PROXY_SETUP_ERROR
                      - INTERNAL_ERROR_REMOTE_REQUEST
                      - INTERNAL_ROLE_ACCESS_DENIED
                      - INCORRECT_EVENTS_FILTER
                      - MISSING_ATTRIBUTE
                      - MISSING_CURRENT_USER_METADATA
                      - NAME_NOT_IN_DOMAIN
                      - NO_RESPONSE_RECEIVED_FROM_PORTAL
                      - PE_NOT_PAIRED_WITH_PC
                      - PC_NOT_PAIRED_WITH_XI_PORTAL
                      - REFERENCE_ERROR
                      - RESERVED_ROLE_ACCESS_DENIED
                      - REQUEST_NOT_SUPPORTED
                      - REMOTE_CLUSTER_IP_FETCH_FAILED
                      - REMOTE_CLUSTER_NOT_CONNECTED
                      - REMOTE_CONNECTION_EXISTS
                      - REMOTE_CONNECTION_NOT_FOUND
                      - REPORT_CONFIG_NOT_FOUND
                      - REPORTING_RESOURCE_NOT_FOUND
                      - REPORTING_INTERNAL_ERROR
                      - SERVICE_UNAVAILABLE
                      - SEARCH_RESULT_PROCESSING_ERROR
                      - TOO_MANY_REQUESTS
                      - UNCONFIGURED_API_KEY
                      - UNCONFIGURED_PORTAL_CONNECTION
                      - UNSPECIFIED_EVENTS_FILTER
                      - UNSUPPORTED_AZ_PROXY_API
                      - UNSUPPORTED_MEDIA_TYPE_ERROR
                      - UNSUPPORTED_API_VERSION
                      - UPLOAD_TO_S3_FAILED
                      - VALIDATION_ERROR
                      - INVALID_SSL_CERTIFICATE
                      - ERROR_ATTACHING_FILE_TO_CASE
                      - SPEC_UPDATE_ERROR
                      - SPEC_INCOMPATIBLE_ERROR
                  details:
                    default:
                      name: .message_resource.reason
                      description: ''
                description: 'If state is ERROR, a machine-readable snake-cased string.'
                serializedName: reason
                extensions: {}
                details:
                  default:
                    name: reason
                    description: 'If state is ERROR, a machine-readable snake-cased string.'
                    required: true
              details:
                schema: &ref_76
                  type: object
                  description: Custom key-value details relevant to the status.
                  additionalProperties: &ref_77
                    type: string
                    allOf: []
                    anyOf: []
                    deprecated: false
                    enum: []
                    nullable: false
                    oneOf: []
                    properties: {}
                    readOnly: false
                    required: []
                    writeOnly: false
                    extensions: {}
                    details:
                      default:
                        name: .message_resource.details.additionalItemType
                        description: ''
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .message_resource.details
                      description: Custom key-value details relevant to the status.
                description: Custom key-value details relevant to the status.
                serializedName: details
                extensions: {}
                details:
                  default:
                    name: details
                    description: Custom key-value details relevant to the status.
                    required: false
            readOnly: false
            required:
              - message
              - reason
            title: Message.
            writeOnly: false
            extensions: {}
            details:
              default:
                name: message_resource
                description: message.
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_def_status.message_list
              description: ''
        description: 'Any error messages for the image, if in an error state.'
        serializedName: message_list
        extensions: {}
        details:
          default:
            name: message_list
            description: 'Any error messages for the image, if in an error state.'
            required: false
      resources:
        schema: &ref_14
          type: object
          description: Describes the image status resources object.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            architecture:
              schema: *ref_2
              description: The supported CPU architecture for a disk image.
              serializedName: architecture
              extensions: {}
              details:
                default:
                  name: architecture
                  description: The supported CPU architecture for a disk image.
                  required: false
            checksum:
              schema: *ref_1
              description: >
                Checksum of the image. The checksum is used for image validation
                if the image has a source specified. For images that do not have
                their source specified the checksum is generated by the image
                service.
              serializedName: checksum
              extensions: {}
              details:
                default:
                  name: checksum
                  description: >
                    Checksum of the image. The checksum is used for image
                    validation if the image has a source specified. For images
                    that do not have their source specified the checksum is
                    generated by the image service.
                  required: false
            image_type:
              schema: *ref_5
              description: The type of image.
              serializedName: image_type
              extensions: {}
              details:
                default:
                  name: image_type
                  description: The type of image.
                  required: false
            retrieval_uri_list:
              schema: &ref_63
                type: array
                description: |
                  List of URIs where the raw image data can be accessed.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_64
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .image_resources_def_status.retrieval_uri_list.itemType
                      description: ''
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_resources_def_status.retrieval_uri_list
                    description: ''
              description: |
                List of URIs where the raw image data can be accessed.
              serializedName: retrieval_uri_list
              extensions: {}
              details:
                default:
                  name: retrieval_uri_list
                  description: |
                    List of URIs where the raw image data can be accessed.
                  required: false
            size_bytes:
              schema: &ref_65
                type: integer
                format: long
                description: The size of the image in bytes.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_resources_def_status.size_bytes
                    description: ''
              description: The size of the image in bytes.
              serializedName: size_bytes
              extensions: {}
              details:
                default:
                  name: size_bytes
                  description: The size of the image in bytes.
                  required: false
            source_uri:
              schema: &ref_66
                type: string
                description: >
                  The source URI points at the location of a the source image
                  which is used to create/update image.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_resources_def_status.source_uri
                    description: ''
              description: >
                The source URI points at the location of a the source image
                which is used to create/update image.
              serializedName: source_uri
              extensions: {}
              details:
                default:
                  name: source_uri
                  description: >
                    The source URI points at the location of a the source image
                    which is used to create/update image.
                  required: false
            version:
              schema: &ref_17
                type: object
                description: >
                  The image version, which is composed of a product name and
                  product version.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  product_name:
                    schema: &ref_74
                      type: string
                      description: >
                        Name of the producer/distribution of the image. For
                        example windows or red hat.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .image_version_status.product_name
                          description: ''
                    description: >
                      Name of the producer/distribution of the image. For
                      example windows or red hat.
                    serializedName: product_name
                    extensions: {}
                    details:
                      default:
                        name: product_name
                        description: >
                          Name of the producer/distribution of the image. For
                          example windows or red hat.
                        required: true
                  product_version:
                    schema: &ref_75
                      type: string
                      description: Version string for the disk image.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .image_version_status.product_version
                          description: ''
                    description: Version string for the disk image.
                    serializedName: product_version
                    extensions: {}
                    details:
                      default:
                        name: product_version
                        description: Version string for the disk image.
                        required: true
                readOnly: false
                required:
                  - product_name
                  - product_version
                title: Image version
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: image_version_status
                    description: >
                      The image version, which is composed of a product name and
                      product version.
              description: The image version
              serializedName: version
              extensions: {}
              details:
                default:
                  name: version
                  description: The image version
                  required: false
          readOnly: false
          required: []
          title: Image status resources
          writeOnly: false
          extensions: {}
          details:
            default:
              name: image_resources_def_status
              description: Describes the image status resources object.
        description: Describes the image status resources object.
        serializedName: resources
        extensions: {}
        details:
          default:
            name: resources
            description: Describes the image status resources object.
            required: true
      state:
        schema: &ref_32
          type: string
          description: The state of the image.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_def_status.state
              description: ''
        description: The state of the image.
        serializedName: state
        extensions: {}
        details:
          default:
            name: state
            description: The state of the image.
            required: false
    readOnly: false
    required:
      - name
      - resources
    title: image Intent Status with placement specified
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_def_status
        description: An intentful representation of a image status
  image_intent_input: &ref_89
    type: object
    description: An intentful representation of a image
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_33
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_7
          type: object
          description: The image kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_54
                type: string
                description: image name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.name
                    description: ''
              description: image name
              serializedName: name
              extensions: {}
              details:
                default:
                  name: name
                  description: image name
                  required: false
            categories:
              schema: &ref_49
                type: object
                description: Categories for the image
                additionalProperties: &ref_50
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .image_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.categories
                    description: Categories for the image
              description: Categories for the image
              serializedName: categories
              extensions: {}
              details:
                default:
                  name: categories
                  description: Categories for the image
                  required: false
            creation_time:
              schema: &ref_51
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when image was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.creation_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when image was created
              serializedName: creation_time
              extensions: {}
              details:
                default:
                  name: creation_time
                  description: |
                    UTC date and time in RFC-3339 format when image was created
                  required: false
            kind:
              schema: &ref_52
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: image
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - image
                details:
                  default:
                    name: .image_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                default:
                  name: kind
                  description: The kind name
                  required: true
            last_update_time:
              schema: &ref_53
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when image was last
                  updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.last_update_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when image was last updated
              serializedName: last_update_time
              extensions: {}
              details:
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when image was last
                    updated
                  required: false
            owner_reference:
              schema: &ref_19
                type: object
                description: The reference to a user
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_86
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .user_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_85
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: user
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - user
                      details:
                        default:
                          name: .user_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      default:
                        name: kind
                        description: The kind name
                        required: true
                  uuid:
                    schema: &ref_87
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .user_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - kind
                  - uuid
                title: Reference to a user
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: user_reference
                    description: The reference to a user
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: &ref_18
                type: object
                description: The reference to a project
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_83
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .project_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_82
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: project
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - project
                      details:
                        default:
                          name: .project_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      default:
                        name: kind
                        description: The kind name
                        required: true
                  uuid:
                    schema: &ref_84
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .project_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - kind
                  - uuid
                title: Reference to a project
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: project_reference
                    description: The reference to a project
              description: The project the image is in.
              serializedName: project_reference
              extensions: {}
              details:
                default:
                  name: project_reference
                  description: The project the image is in.
                  required: false
            spec_hash:
              schema: &ref_55
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_56
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_57
                type: string
                format: UUID
                description: image uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_metadata.uuid
                    description: ''
              description: image uuid
              serializedName: uuid
              extensions: {}
              details:
                default:
                  name: uuid
                  description: image uuid
                  required: false
          readOnly: false
          required:
            - kind
          title: image metadata
          writeOnly: false
          extensions: {}
          details:
            default:
              name: image_metadata
              description: The image kind metadata
        description: The image kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The image kind metadata
            required: false
      spec:
        schema: *ref_6
        description: An intentful representation of a image spec
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: An intentful representation of a image spec
            required: true
    readOnly: false
    required:
      - 'metadat, a'
      - spec
    title: image Intent Entity
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_intent_input
        description: An intentful representation of a image
  image_intent_resource: &ref_9
    type: object
    description: Response object for intentful operations on a image
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_34
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_7
        description: The image kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The image kind metadata
            required: true
      spec:
        schema: *ref_6
        description: An intentful representation of a image spec
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: An intentful representation of a image spec
            required: false
      status:
        schema: *ref_8
        description: An intentful representation of a image status
        serializedName: status
        extensions: {}
        details:
          default:
            name: status
            description: An intentful representation of a image status
            required: false
    readOnly: false
    required:
      - metadata
    title: image Intent Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_intent_resource
        description: Response object for intentful operations on a image
  image_intent_response: &ref_91
    type: object
    description: Response object for intentful operations on a image
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_35
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_7
        description: The image kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The image kind metadata
            required: true
      spec:
        schema: *ref_6
        description: An intentful representation of a image spec
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: An intentful representation of a image spec
            required: false
      status:
        schema: *ref_8
        description: An intentful representation of a image status
        serializedName: status
        extensions: {}
        details:
          default:
            name: status
            description: An intentful representation of a image status
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: image Intent Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_intent_response
        description: Response object for intentful operations on a image
  image_list_intent_response:
    type: object
    description: Response object for intentful operation of images
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_36
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_37
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_9
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_11
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_43
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_44
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: image
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - image
                details:
                  default:
                    name: .image_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_45
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_46
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_47
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: &ref_10
                type: string
                description: The sort order in which results are returned
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                title: Sort order
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ASCENDING
                    - DESCENDING
                details:
                  default:
                    name: sort_order
                    description: ''
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_48
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .image_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for image list output
          writeOnly: false
          extensions: {}
          details:
            default:
              name: image_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_list_intent_response
        description: Response object for intentful operation of images
  image_list_metadata:
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_38
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_39
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: image
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - image
          details:
            default:
              name: .image_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_40
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_41
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_42
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_10
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for image list
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  image_list_metadata_output: *ref_11
  image_metadata: *ref_7
  image_migrate_input:
    type: object
    description: |
      Specify the cluster and image(s) from the cluster to migrate to PC
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      cluster_reference:
        schema: *ref_4
        description: |
          Reference to the PE cluster that currently owns images to be migrated.
        serializedName: cluster_reference
        extensions: {}
        details:
          default:
            name: cluster_reference
            description: >
              Reference to the PE cluster that currently owns images to be
              migrated.
            required: true
      image_reference_list:
        schema: &ref_58
          type: array
          description: |
            Reference to the images from PE cluster to be migrated
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_12
            type: object
            description: The reference to a image
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              name:
                schema: &ref_60
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .image_reference.name
                      description: ''
                description: ''
                serializedName: name
                extensions: {}
                details:
                  default:
                    name: name
                    description: ''
                    required: false
              kind:
                schema: &ref_59
                  type: string
                  description: The kind name
                  allOf: []
                  anyOf: []
                  default: image
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions:
                    x-ntnx-enum:
                      - image
                  details:
                    default:
                      name: .image_reference.kind
                      description: ''
                description: The kind name
                serializedName: kind
                extensions: {}
                details:
                  default:
                    name: kind
                    description: The kind name
                    required: true
              uuid:
                schema: &ref_61
                  type: string
                  format: UUID
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  pattern: >-
                    ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .image_reference.uuid
                      description: ''
                description: ''
                serializedName: uuid
                extensions: {}
                details:
                  default:
                    name: uuid
                    description: ''
                    required: true
            readOnly: false
            required:
              - kind
              - uuid
            title: Reference to a image
            writeOnly: false
            extensions: {}
            details:
              default:
                name: image_reference
                description: The reference to a image
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_migrate_input.image_reference_list
              description: ''
        description: |
          Reference to the images from PE cluster to be migrated
        serializedName: image_reference_list
        extensions: {}
        details:
          default:
            name: image_reference_list
            description: |
              Reference to the images from PE cluster to be migrated
            required: false
    readOnly: false
    required:
      - cluster_reference
    title: Input for image migration
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_migrate_input
        description: |
          Specify the cluster and image(s) from the cluster to migrate to PC
  image_reference: *ref_12
  image_resources: *ref_13
  image_resources_def_status: *ref_14
  image_status: &ref_92
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_67
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_68
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_69
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: image
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - image
          details:
            default:
              name: .image_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_70
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_15
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_71
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .image_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      default:
        name: image_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  image_type: *ref_5
  image_version_resources: *ref_16
  image_version_status: *ref_17
  message_resource: *ref_15
  procedural_error_response:
    type: object
    description: |
      Response for invoking a procedural call.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      message_list:
        schema: &ref_80
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_15
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .procedural_error_response.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          default:
            name: message_list
            description: ''
            required: false
    readOnly: false
    required: []
    title: Procedural API error response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: procedural_error_response
        description: |
          Response for invoking a procedural call.
  procedural_response:
    type: object
    description: |
      Response for invoking a procedural call. Contains a task UUID.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      task_uuid:
        schema: &ref_81
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .procedural_response.task_uuid
              description: ''
        description: ''
        serializedName: task_uuid
        extensions: {}
        details:
          default:
            name: task_uuid
            description: ''
            required: true
    readOnly: false
    required:
      - task_uuid
    title: Procedural API response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: procedural_response
        description: |
          Response for invoking a procedural call. Contains a task UUID.
  project_reference: *ref_18
  sort_order: *ref_10
  user_reference: *ref_19
  .Parameter.uuid: &ref_88
    type: string
    format: UUID
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    pattern: >-
      ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    properties: {}
    readOnly: false
    required: []
    writeOnly: false
    extensions: {}
    details:
      default:
        name: .Parameter.uuid
        description: ''
  .availability_zone_reference.kind: *ref_20
  .availability_zone_reference.name: *ref_21
  .availability_zone_reference.uuid: *ref_22
  .checksum.checksum_value: *ref_23
  .cluster_reference.kind: *ref_24
  .cluster_reference.name: *ref_25
  .cluster_reference.uuid: *ref_26
  .image.description: *ref_27
  .image.name: *ref_28
  .image_def_status.description: *ref_29
  .image_def_status.message_list: *ref_30
  .image_def_status.name: *ref_31
  .image_def_status.state: *ref_32
  .image_intent_input.api_version: *ref_33
  .image_intent_resource.api_version: *ref_34
  .image_intent_response.api_version: *ref_35
  .image_list_intent_response.api_version: *ref_36
  .image_list_intent_response.entities: *ref_37
  .image_list_metadata.filter: *ref_38
  .image_list_metadata.kind: *ref_39
  .image_list_metadata.length: *ref_40
  .image_list_metadata.offset: *ref_41
  .image_list_metadata.sort_attribute: *ref_42
  .image_list_metadata_output.filter: *ref_43
  .image_list_metadata_output.kind: *ref_44
  .image_list_metadata_output.length: *ref_45
  .image_list_metadata_output.offset: *ref_46
  .image_list_metadata_output.sort_attribute: *ref_47
  .image_list_metadata_output.total_matches: *ref_48
  .image_metadata.categories: *ref_49
  .image_metadata.categories.additionalItemType: *ref_50
  .image_metadata.creation_time: *ref_51
  .image_metadata.kind: *ref_52
  .image_metadata.last_update_time: *ref_53
  .image_metadata.name: *ref_54
  .image_metadata.spec_hash: *ref_55
  .image_metadata.spec_version: *ref_56
  .image_metadata.uuid: *ref_57
  .image_migrate_input.image_reference_list: *ref_58
  .image_reference.kind: *ref_59
  .image_reference.name: *ref_60
  .image_reference.uuid: *ref_61
  .image_resources.source_uri: *ref_62
  .image_resources_def_status.retrieval_uri_list: *ref_63
  .image_resources_def_status.retrieval_uri_list.itemType: *ref_64
  .image_resources_def_status.size_bytes: *ref_65
  .image_resources_def_status.source_uri: *ref_66
  .image_status.api_version: *ref_67
  .image_status.code: *ref_68
  .image_status.kind: *ref_69
  .image_status.message_list: *ref_70
  .image_status.state: *ref_71
  .image_version_resources.product_name: *ref_72
  .image_version_resources.product_version: *ref_73
  .image_version_status.product_name: *ref_74
  .image_version_status.product_version: *ref_75
  .message_resource.details: *ref_76
  .message_resource.details.additionalItemType: *ref_77
  .message_resource.message: *ref_78
  .message_resource.reason: *ref_79
  .procedural_error_response.message_list: *ref_80
  .procedural_response.task_uuid: *ref_81
  .project_reference.kind: *ref_82
  .project_reference.name: *ref_83
  .project_reference.uuid: *ref_84
  .user_reference.kind: *ref_85
  .user_reference.name: *ref_86
  .user_reference.uuid: *ref_87
info:
  title: Nutanix Intentful API
  version: 3.1.0
  extensions: {}
security:
  - basicAuth: []
servers:
  - url: /api/nutanix/v3
    extensions: {}
tags: []
http:
  examples: {}
  headers: {}
  links: {}
  parameters:
    uuid:
      name: uuid
      schema: *ref_88
      description: The UUID of the entity.
      allowEmptyValue: false
      allowReserved: false
      deprecated: false
      explode: false
      in: path
      required: true
      style: simple
      extensions: {}
      details:
        default:
          name: uuid
          description: The UUID of the entity.
          location: Client
  requestBodies:
    image_intent_input: &ref_90
      schema: *ref_89
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
  responses: {}
  securitySchemes: {}
  callbacks: {}
  operations:
    images:
      operationId: images
      path: /images
      method: post
      description: >
        Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user can
        be attached to a VM. An ISO image is attached as a virtual CD-ROM drive,
        and QCOW2 and VMDK files are attached as SCSI disks. An image has to be
        explicitly added to the self-service catalog before users can create VMs
        from it.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_90
      responses_new:
        '202':
          - schema: *ref_91
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_92
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: /api/nutanix/v3
          extensions: {}
      summary: Create a IMAGE
      tags:
        - images
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: image
        x-ntnx-operations:
          - create
      details:
        default:
          name: images
          description: >
            Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user
            can be attached to a VM. An ISO image is attached as a virtual
            CD-ROM drive, and QCOW2 and VMDK files are attached as SCSI disks.
            An image has to be explicitly added to the self-service catalog
            before users can create VMs from it.
          headerparameters: []
  extensions: {}
commands:
  parameters: {}
  operations: {}
  extensions: {}
extensions: {}
details:
  default:
    name: Nutanix Intentful API
    description: ''
