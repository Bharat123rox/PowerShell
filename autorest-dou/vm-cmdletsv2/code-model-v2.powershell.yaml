schemas:
  availability_zone_reference: &ref_6
    type: object
    description: The reference to a availability_zone
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_50
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .availability_zone_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_49
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: availability_zone
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - availability_zone
          details:
            csharp:
              name: .availability_zone_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_51
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .availability_zone_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .availability_zone_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a availability_zone
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: AvailabilityZoneReference
        description: The reference to a availability_zone
        fullname: Sample.API.Models.AvailabilityZoneReference
        interfaceName: IAvailabilityZoneReference
        namespace: Sample.API.Models
      default:
        name: availability_zone_reference
        description: The reference to a availability_zone
  cluster_reference: &ref_7
    type: object
    description: The reference to a cluster
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_53
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .cluster_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_52
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: cluster
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - cluster
          details:
            csharp:
              name: .cluster_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_54
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .cluster_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .cluster_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a cluster
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: ClusterReference
        description: The reference to a cluster
        fullname: Sample.API.Models.ClusterReference
        interfaceName: IClusterReference
        namespace: Sample.API.Models
      default:
        name: cluster_reference
        description: The reference to a cluster
  custom_generic_key_value_pair: &ref_1
    type: object
    description: Generic key value pair used for custom attributes
    additionalProperties: &ref_0
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: custom_generic_key_value_pair.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: custom_generic_key_value_pair.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties: {}
    readOnly: false
    required: []
    title: Generic key value pair
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: CustomGenericKeyValuePair
        description: Generic key value pair used for custom attributes
        fullname: Sample.API.Models.CustomGenericKeyValuePair
        interfaceName: ICustomGenericKeyValuePair
        namespace: Sample.API.Models
      default:
        name: custom_generic_key_value_pair
        description: Generic key value pair used for custom attributes
  custom_generic_key_value_pair.additionalItemType: *ref_0
  disk_address: &ref_8
    type: object
    description: Disk Address.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      adapter_type:
        schema: &ref_55
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - SCSI
              - IDE
              - PCI
              - SATA
              - SPAPR
          details:
            csharp:
              name: .disk_address.adapter_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .disk_address.adapter_type
              description: ''
        description: ''
        serializedName: adapter_type
        extensions: {}
        details:
          csharp:
            name: AdapterType
            description: ''
            required: true
          default:
            name: adapter_type
            description: ''
            required: true
      device_index:
        schema: &ref_56
          type: integer
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .disk_address.device_index
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .disk_address.device_index
              description: ''
        description: ''
        serializedName: device_index
        extensions: {}
        details:
          csharp:
            name: DeviceIndex
            description: ''
            required: true
          default:
            name: device_index
            description: ''
            required: true
    readOnly: false
    required:
      - adapter_type
      - device_index
    title: Disk Address
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: DiskAddress
        description: Disk Address.
        fullname: Sample.API.Models.DiskAddress
        interfaceName: IDiskAddress
        namespace: Sample.API.Models
      default:
        name: disk_address
        description: Disk Address.
  guest_customization: &ref_10
    type: object
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init
      should be provided. Note that guest customization can currently only be
      set during VM creation. Attempting to change it after creation will result
      in an error. Additional properties can be specified. For example - in the
      context of VM template creation if "override_script" is set to "True" then
      the deployer can upload their own custom script.
    additionalProperties: &ref_2
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: guest_customization.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: guest_customization.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      cloud_init:
        schema: &ref_57
          type: object
          description: >
            If this field is set, the guest will be customized using cloud-init.
            Either user_data or custom_key_values should be provided. If
            custom_key_ves are provided then the user data will be generated
            using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_1
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            meta_data:
              schema: &ref_58
                type: string
                description: >
                  The contents of the meta_data configuration for cloud-init.
                  This can be formatted as YAML or JSON. The value must be
                  base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.cloud_init.meta_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.cloud_init.meta_data
                    description: ''
              description: >
                The contents of the meta_data configuration for cloud-init. This
                can be formatted as YAML or JSON. The value must be base64
                encoded.
              serializedName: meta_data
              extensions: {}
              details:
                csharp:
                  name: MetaData
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
                default:
                  name: meta_data
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
            user_data:
              schema: &ref_59
                type: string
                description: >
                  The contents of the user_data configuration for cloud-init.
                  This can be formatted as YAML, JSON, or could be a shell
                  script. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.cloud_init.user_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.cloud_init.user_data
                    description: ''
              description: >
                The contents of the user_data configuration for cloud-init. This
                can be formatted as YAML, JSON, or could be a shell script. The
                value must be base64 encoded.
              serializedName: user_data
              extensions: {}
              details:
                csharp:
                  name: UserData
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
                default:
                  name: user_data
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - user_data
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationCloudInit
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
              fullname: Sample.API.Models.GuestCustomizationCloudInit
              interfaceName: IGuestCustomizationCloudInit
              namespace: Sample.API.Models
            default:
              name: .guest_customization.cloud_init
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated using
          these key-value pairs.
        serializedName: cloud_init
        extensions: {}
        details:
          csharp:
            name: CloudInit
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
          default:
            name: cloud_init
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
      is_overridable:
        schema: &ref_60
          type: boolean
          description: Flag to allow override of customization by deployer.
          allOf: []
          anyOf: []
          default: false
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .guest_customization.is_overridable
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .guest_customization.is_overridable
              description: ''
        description: Flag to allow override of customization by deployer.
        serializedName: is_overridable
        extensions: {}
        details:
          csharp:
            name: IsOverridable
            description: Flag to allow override of customization by deployer.
            required: false
          default:
            name: is_overridable
            description: Flag to allow override of customization by deployer.
            required: false
      sysprep:
        schema: &ref_61
          type: object
          description: >
            If this field is set, the guest will be customized using Sysprep.
            Either unattend_xml or custom_key_values should be provided. If
            custom_key_values are provided then the unattended answer file will
            be generated using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_1
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            install_type:
              schema: &ref_62
                type: string
                description: >
                  Whether the guest will be freshly installed using this
                  unattend configuration, or whether this unattend configuration
                  will be applied to a pre-prepared image. Default is
                  "PREPARED".
                allOf: []
                anyOf: []
                default: PREPARED
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - FRESH
                    - PREPARED
                details:
                  csharp:
                    name: .guest_customization.sysprep.install_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.sysprep.install_type
                    description: ''
              description: >
                Whether the guest will be freshly installed using this unattend
                configuration, or whether this unattend configuration will be
                applied to a pre-prepared image. Default is "PREPARED".
              serializedName: install_type
              extensions: {}
              details:
                csharp:
                  name: InstallType
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
                default:
                  name: install_type
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
            unattend_xml:
              schema: &ref_63
                type: string
                description: >
                  This field contains a Sysprep unattend xml definition, as a
                  string. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 32000
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization.sysprep.unattend_xml
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization.sysprep.unattend_xml
                    description: ''
              description: >
                This field contains a Sysprep unattend xml definition, as a
                string. The value must be base64 encoded.
              serializedName: unattend_xml
              extensions: {}
              details:
                csharp:
                  name: UnattendXml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
                default:
                  name: unattend_xml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - unattend_xml
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationSysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
              fullname: Sample.API.Models.GuestCustomizationSysprep
              interfaceName: IGuestCustomizationSysprep
              namespace: Sample.API.Models
            default:
              name: .guest_customization.sysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will be
          generated using these key-value pairs.
        serializedName: sysprep
        extensions: {}
        details:
          csharp:
            name: Sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
          default:
            name: sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
    readOnly: false
    required: []
    title: Guest Customization Configuration for creation/modification request
    writeOnly: false
    extensions:
      x-ntnx-one-of:
        - required:
            - sysprep
        - required:
            - cloud_init
    details:
      csharp:
        name: GuestCustomization
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
        fullname: Sample.API.Models.GuestCustomization
        interfaceName: IGuestCustomization
        namespace: Sample.API.Models
      default:
        name: guest_customization
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
  guest_customization.additionalItemType: *ref_2
  guest_customization_status: &ref_19
    type: object
    description: >
      VM guests may be customized at boot time using one of several different
      methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux VMs) and
      Sysprep (for Windows VMs) are supported. Only ONE OF sysprep or cloud_init
      should be provided. Note that guest customization can currently only be
      set during VM creation. Attempting to change it after creation will result
      in an error. Additional properties can be specified. For example - in the
      context of VM template creation if "override_script" is set to "True" then
      the deployer can upload their own custom script.
    additionalProperties: &ref_3
      type: string
      allOf: []
      anyOf: []
      deprecated: false
      enum: []
      nullable: false
      oneOf: []
      properties: {}
      readOnly: false
      required: []
      writeOnly: false
      extensions: {}
      details:
        csharp:
          name: guest_customization_status.additionalItemType
          description: ''
          fullname: <INVALID>
          interfaceName: <INVALID>
          namespace: <INVALID>
        default:
          name: guest_customization_status.additionalItemType
          description: ''
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      cloud_init:
        schema: &ref_64
          type: object
          description: >
            If this field is set, the guest will be customized using cloud-init.
            Either user_data or custom_key_values should be provided. If
            custom_key_ves are provided then the user data will be generated
            using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_1
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            meta_data:
              schema: &ref_65
                type: string
                description: >
                  The contents of the meta_data configuration for cloud-init.
                  This can be formatted as YAML or JSON. The value must be
                  base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.cloud_init.meta_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.cloud_init.meta_data
                    description: ''
              description: >
                The contents of the meta_data configuration for cloud-init. This
                can be formatted as YAML or JSON. The value must be base64
                encoded.
              serializedName: meta_data
              extensions: {}
              details:
                csharp:
                  name: MetaData
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
                default:
                  name: meta_data
                  description: >
                    The contents of the meta_data configuration for cloud-init.
                    This can be formatted as YAML or JSON. The value must be
                    base64 encoded.
                  required: false
            user_data:
              schema: &ref_66
                type: string
                description: >
                  The contents of the user_data configuration for cloud-init.
                  This can be formatted as YAML, JSON, or could be a shell
                  script. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.cloud_init.user_data
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.cloud_init.user_data
                    description: ''
              description: >
                The contents of the user_data configuration for cloud-init. This
                can be formatted as YAML, JSON, or could be a shell script. The
                value must be base64 encoded.
              serializedName: user_data
              extensions: {}
              details:
                csharp:
                  name: UserData
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
                default:
                  name: user_data
                  description: >
                    The contents of the user_data configuration for cloud-init.
                    This can be formatted as YAML, JSON, or could be a shell
                    script. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - user_data
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationStatusCloudInit
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
              fullname: Sample.API.Models.GuestCustomizationStatusCloudInit
              interfaceName: IGuestCustomizationStatusCloudInit
              namespace: Sample.API.Models
            default:
              name: .guest_customization_status.cloud_init
              description: >
                If this field is set, the guest will be customized using
                cloud-init. Either user_data or custom_key_values should be
                provided. If custom_key_ves are provided then the user data will
                be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using cloud-init.
          Either user_data or custom_key_values should be provided. If
          custom_key_ves are provided then the user data will be generated using
          these key-value pairs.
        serializedName: cloud_init
        extensions: {}
        details:
          csharp:
            name: CloudInit
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
          default:
            name: cloud_init
            description: >
              If this field is set, the guest will be customized using
              cloud-init. Either user_data or custom_key_values should be
              provided. If custom_key_ves are provided then the user data will
              be generated using these key-value pairs.
            required: false
      is_overridable:
        schema: &ref_67
          type: boolean
          description: Flag to allow override of customization by deployer.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .guest_customization_status.is_overridable
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .guest_customization_status.is_overridable
              description: ''
        description: Flag to allow override of customization by deployer.
        serializedName: is_overridable
        extensions: {}
        details:
          csharp:
            name: IsOverridable
            description: Flag to allow override of customization by deployer.
            required: false
          default:
            name: is_overridable
            description: Flag to allow override of customization by deployer.
            required: false
      sysprep:
        schema: &ref_68
          type: object
          description: >
            If this field is set, the guest will be customized using Sysprep.
            Either unattend_xml or custom_key_values should be provided. If
            custom_key_values are provided then the unattended answer file will
            be generated using these key-value pairs.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            custom_key_values:
              schema: *ref_1
              description: Generic key value pair used for custom attributes
              serializedName: custom_key_values
              extensions: {}
              details:
                csharp:
                  name: CustomKeyValues
                  description: Generic key value pair used for custom attributes
                  required: false
                default:
                  name: custom_key_values
                  description: Generic key value pair used for custom attributes
                  required: false
            install_type:
              schema: &ref_69
                type: string
                description: >
                  Whether the guest will be freshly installed using this
                  unattend configuration, or whether this unattend configuration
                  will be applied to a pre-prepared image. Default is
                  "PREPARED".
                allOf: []
                anyOf: []
                default: PREPARED
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - FRESH
                    - PREPARED
                details:
                  csharp:
                    name: .guest_customization_status.sysprep.install_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.sysprep.install_type
                    description: ''
              description: >
                Whether the guest will be freshly installed using this unattend
                configuration, or whether this unattend configuration will be
                applied to a pre-prepared image. Default is "PREPARED".
              serializedName: install_type
              extensions: {}
              details:
                csharp:
                  name: InstallType
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
                default:
                  name: install_type
                  description: >
                    Whether the guest will be freshly installed using this
                    unattend configuration, or whether this unattend
                    configuration will be applied to a pre-prepared image.
                    Default is "PREPARED".
                  required: false
            unattend_xml:
              schema: &ref_70
                type: string
                description: >
                  This field contains a Sysprep unattend xml definition, as a
                  string. The value must be base64 encoded.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .guest_customization_status.sysprep.unattend_xml
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .guest_customization_status.sysprep.unattend_xml
                    description: ''
              description: >
                This field contains a Sysprep unattend xml definition, as a
                string. The value must be base64 encoded.
              serializedName: unattend_xml
              extensions: {}
              details:
                csharp:
                  name: UnattendXml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
                default:
                  name: unattend_xml
                  description: >
                    This field contains a Sysprep unattend xml definition, as a
                    string. The value must be base64 encoded.
                  required: false
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - unattend_xml
              - required:
                  - custom_key_values
          details:
            csharp:
              name: GuestCustomizationStatusSysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
              fullname: Sample.API.Models.GuestCustomizationStatusSysprep
              interfaceName: IGuestCustomizationStatusSysprep
              namespace: Sample.API.Models
            default:
              name: .guest_customization_status.sysprep
              description: >
                If this field is set, the guest will be customized using
                Sysprep. Either unattend_xml or custom_key_values should be
                provided. If custom_key_values are provided then the unattended
                answer file will be generated using these key-value pairs.
        description: >
          If this field is set, the guest will be customized using Sysprep.
          Either unattend_xml or custom_key_values should be provided. If
          custom_key_values are provided then the unattended answer file will be
          generated using these key-value pairs.
        serializedName: sysprep
        extensions: {}
        details:
          csharp:
            name: Sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
          default:
            name: sysprep
            description: >
              If this field is set, the guest will be customized using Sysprep.
              Either unattend_xml or custom_key_values should be provided. If
              custom_key_values are provided then the unattended answer file
              will be generated using these key-value pairs.
            required: false
    readOnly: false
    required: []
    title: Guest Customization Configuration for creation/modification request
    writeOnly: false
    extensions:
      x-ntnx-one-of:
        - required:
            - sysprep
        - required:
            - cloud_init
    details:
      csharp:
        name: GuestCustomizationStatus
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
        fullname: Sample.API.Models.GuestCustomizationStatus
        interfaceName: IGuestCustomizationStatus
        namespace: Sample.API.Models
      default:
        name: guest_customization_status
        description: >
          VM guests may be customized at boot time using one of several
          different methods. Currently, cloud-init w/ ConfigDriveV2 (for Linux
          VMs) and Sysprep (for Windows VMs) are supported. Only ONE OF sysprep
          or cloud_init should be provided. Note that guest customization can
          currently only be set during VM creation. Attempting to change it
          after creation will result in an error. Additional properties can be
          specified. For example - in the context of VM template creation if
          "override_script" is set to "True" then the deployer can upload their
          own custom script.
  guest_customization_status.additionalItemType: *ref_3
  guest_tools_spec: &ref_11
    type: object
    description: Information regarding guest tools.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      nutanix_guest_tools:
        schema: &ref_4
          type: object
          description: Information regarding Nutanix Guest Tools.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            enabled_capability_list:
              schema: &ref_80
                type: array
                description: Application names that are enabled.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_81
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions:
                    x-ntnx-enum:
                      - SELF_SERVICE_RESTORE
                      - VSS_SNAPSHOT
                  details:
                    csharp:
                      name: >-
                        .nutanix_guest_tools_spec.enabled_capability_list.itemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: >-
                        .nutanix_guest_tools_spec.enabled_capability_list.itemType
                      description: ''
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.enabled_capability_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.enabled_capability_list
                    description: ''
              description: Application names that are enabled.
              serializedName: enabled_capability_list
              extensions: {}
              details:
                csharp:
                  name: EnabledCapabilityList
                  description: Application names that are enabled.
                  required: false
                default:
                  name: enabled_capability_list
                  description: Application names that are enabled.
                  required: false
            iso_mount_state:
              schema: &ref_82
                type: string
                description: |
                  Desired mount state of Nutanix Guest Tools ISO.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - MOUNTED
                    - UNMOUNTED
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.iso_mount_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.iso_mount_state
                    description: ''
              description: |
                Desired mount state of Nutanix Guest Tools ISO.
              serializedName: iso_mount_state
              extensions: {}
              details:
                csharp:
                  name: IsoMountState
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
                default:
                  name: iso_mount_state
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
            state:
              schema: &ref_83
                type: string
                description: Nutanix Guest Tools is enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ENABLED
                    - DISABLED
                details:
                  csharp:
                    name: .nutanix_guest_tools_spec.state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_spec.state
                    description: ''
              description: Nutanix Guest Tools is enabled or not.
              serializedName: state
              extensions: {}
              details:
                csharp:
                  name: State
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
                default:
                  name: state
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
          readOnly: false
          required: []
          title: Nutanix Guest Tools information
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: NutanixGuestToolsSpec
              description: Information regarding Nutanix Guest Tools.
              fullname: Sample.API.Models.NutanixGuestToolsSpec
              interfaceName: INutanixGuestToolsSpec
              namespace: Sample.API.Models
            default:
              name: nutanix_guest_tools_spec
              description: Information regarding Nutanix Guest Tools.
        description: Nutanix Guest Tools information
        serializedName: nutanix_guest_tools
        extensions: {}
        details:
          csharp:
            name: NutanixGuestTools
            description: Nutanix Guest Tools information
            required: false
          default:
            name: nutanix_guest_tools
            description: Nutanix Guest Tools information
            required: false
    readOnly: false
    required: []
    title: Guest Tools information
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: GuestToolsSpec
        description: Information regarding guest tools.
        fullname: Sample.API.Models.GuestToolsSpec
        interfaceName: IGuestToolsSpec
        namespace: Sample.API.Models
      default:
        name: guest_tools_spec
        description: Information regarding guest tools.
  guest_tools_status: &ref_20
    type: object
    description: Information regarding guest tools.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      nutanix_guest_tools:
        schema: &ref_5
          type: object
          description: Information regarding Nutanix Guest Tools.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            available_version:
              schema: &ref_84
                type: string
                description: Version of Nutanix Guest Tools available on the cluster.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.available_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.available_version
                    description: ''
              description: Version of Nutanix Guest Tools available on the cluster.
              serializedName: available_version
              extensions: {}
              details:
                csharp:
                  name: AvailableVersion
                  description: Version of Nutanix Guest Tools available on the cluster.
                  required: false
                default:
                  name: available_version
                  description: Version of Nutanix Guest Tools available on the cluster.
                  required: false
            enabled_capability_list:
              schema: &ref_85
                type: array
                description: Application names that are enabled.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_86
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions:
                    x-ntnx-enum:
                      - SELF_SERVICE_RESTORE
                      - VSS_SNAPSHOT
                  details:
                    csharp:
                      name: >-
                        .nutanix_guest_tools_status.enabled_capability_list.itemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: >-
                        .nutanix_guest_tools_status.enabled_capability_list.itemType
                      description: ''
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.enabled_capability_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.enabled_capability_list
                    description: ''
              description: Application names that are enabled.
              serializedName: enabled_capability_list
              extensions: {}
              details:
                csharp:
                  name: EnabledCapabilityList
                  description: Application names that are enabled.
                  required: false
                default:
                  name: enabled_capability_list
                  description: Application names that are enabled.
                  required: false
            guest_os_version:
              schema: &ref_87
                type: string
                description: Version of the operating system on the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.guest_os_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.guest_os_version
                    description: ''
              description: Version of the operating system on the VM.
              serializedName: guest_os_version
              extensions: {}
              details:
                csharp:
                  name: GuestOsVersion
                  description: Version of the operating system on the VM.
                  required: false
                default:
                  name: guest_os_version
                  description: Version of the operating system on the VM.
                  required: false
            is_reachable:
              schema: &ref_88
                type: boolean
                description: Communication from VM to CVM is active or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.is_reachable
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.is_reachable
                    description: ''
              description: Communication from VM to CVM is active or not.
              serializedName: is_reachable
              extensions: {}
              details:
                csharp:
                  name: IsReachable
                  description: Communication from VM to CVM is active or not.
                  required: false
                default:
                  name: is_reachable
                  description: Communication from VM to CVM is active or not.
                  required: false
            iso_mount_state:
              schema: &ref_89
                type: string
                description: |
                  Desired mount state of Nutanix Guest Tools ISO.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - MOUNTED
                    - UNMOUNTED
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.iso_mount_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.iso_mount_state
                    description: ''
              description: |
                Desired mount state of Nutanix Guest Tools ISO.
              serializedName: iso_mount_state
              extensions: {}
              details:
                csharp:
                  name: IsoMountState
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
                default:
                  name: iso_mount_state
                  description: |
                    Desired mount state of Nutanix Guest Tools ISO.
                  required: false
            state:
              schema: &ref_90
                type: string
                description: Nutanix Guest Tools is enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ENABLED
                    - DISABLED
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.state
                    description: ''
              description: Nutanix Guest Tools is enabled or not.
              serializedName: state
              extensions: {}
              details:
                csharp:
                  name: State
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
                default:
                  name: state
                  description: Nutanix Guest Tools is enabled or not.
                  required: false
            version:
              schema: &ref_91
                type: string
                description: Version of Nutanix Guest Tools installed on the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.version
                    description: ''
              description: Version of Nutanix Guest Tools installed on the VM.
              serializedName: version
              extensions: {}
              details:
                csharp:
                  name: Version
                  description: Version of Nutanix Guest Tools installed on the VM.
                  required: false
                default:
                  name: version
                  description: Version of Nutanix Guest Tools installed on the VM.
                  required: false
            vm_mobility_drivers_installed:
              schema: &ref_92
                type: boolean
                description: Whether VM mobility drivers are installed in the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.vm_mobility_drivers_installed
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.vm_mobility_drivers_installed
                    description: ''
              description: Whether VM mobility drivers are installed in the VM.
              serializedName: vm_mobility_drivers_installed
              extensions: {}
              details:
                csharp:
                  name: VmMobilityDriversInstalled
                  description: Whether VM mobility drivers are installed in the VM.
                  required: false
                default:
                  name: vm_mobility_drivers_installed
                  description: Whether VM mobility drivers are installed in the VM.
                  required: false
            vss_snapshot_capable:
              schema: &ref_93
                type: boolean
                description: >
                  Whether the VM is configured to take VSS snapshots through
                  NGT.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .nutanix_guest_tools_status.vss_snapshot_capable
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .nutanix_guest_tools_status.vss_snapshot_capable
                    description: ''
              description: |
                Whether the VM is configured to take VSS snapshots through NGT.
              serializedName: vss_snapshot_capable
              extensions: {}
              details:
                csharp:
                  name: VssSnapshotCapable
                  description: >
                    Whether the VM is configured to take VSS snapshots through
                    NGT.
                  required: false
                default:
                  name: vss_snapshot_capable
                  description: >
                    Whether the VM is configured to take VSS snapshots through
                    NGT.
                  required: false
          readOnly: false
          required: []
          title: Nutanix Guest Tools status
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: NutanixGuestToolsStatus
              description: Information regarding Nutanix Guest Tools.
              fullname: Sample.API.Models.NutanixGuestToolsStatus
              interfaceName: INutanixGuestToolsStatus
              namespace: Sample.API.Models
            default:
              name: nutanix_guest_tools_status
              description: Information regarding Nutanix Guest Tools.
        description: Nutanix Guest Tools information
        serializedName: nutanix_guest_tools
        extensions: {}
        details:
          csharp:
            name: NutanixGuestTools
            description: Nutanix Guest Tools information
            required: false
          default:
            name: nutanix_guest_tools
            description: Nutanix Guest Tools information
            required: false
    readOnly: false
    required: []
    title: Guest Tools information
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: GuestToolsStatus
        description: Information regarding guest tools.
        fullname: Sample.API.Models.GuestToolsStatus
        interfaceName: IGuestToolsStatus
        namespace: Sample.API.Models
      default:
        name: guest_tools_status
        description: Information regarding guest tools.
  ip_address: &ref_12
    type: object
    description: An IP address.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      type:
        schema: &ref_72
          type: string
          description: |
            Address type. It can only be "ASSIGNED" in the spec. If no type is
            specified in the spec, the default type is set to "ASSIGNED".
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ASSIGNED
              - LEARNED
          details:
            csharp:
              name: .ip_address.type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .ip_address.type
              description: ''
        description: |
          Address type. It can only be "ASSIGNED" in the spec. If no type is
          specified in the spec, the default type is set to "ASSIGNED".
        serializedName: type
        extensions: {}
        details:
          csharp:
            name: Type
            description: |
              Address type. It can only be "ASSIGNED" in the spec. If no type is
              specified in the spec, the default type is set to "ASSIGNED".
            required: false
          default:
            name: type
            description: |
              Address type. It can only be "ASSIGNED" in the spec. If no type is
              specified in the spec, the default type is set to "ASSIGNED".
            required: false
      ip:
        schema: &ref_71
          type: string
          description: Address string.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .ip_address.ip
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .ip_address.ip
              description: ''
        description: Address string.
        serializedName: ip
        extensions: {}
        details:
          csharp:
            name: Ip
            description: Address string.
            required: false
          default:
            name: ip
            description: Address string.
            required: false
    readOnly: false
    required: []
    title: IP Address
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: IpAddress
        description: An IP address.
        fullname: Sample.API.Models.IpAddress
        interfaceName: IIpAddress
        namespace: Sample.API.Models
      default:
        name: ip_address
        description: An IP address.
  message_resource: &ref_17
    type: object
    description: message.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      message:
        schema: &ref_75
          type: string
          description: 'If state is ERROR, a message describing the error.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .message_resource.message
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .message_resource.message
              description: ''
        description: 'If state is ERROR, a message describing the error.'
        serializedName: message
        extensions: {}
        details:
          csharp:
            name: Message
            description: 'If state is ERROR, a message describing the error.'
            required: true
          default:
            name: message
            description: 'If state is ERROR, a message describing the error.'
            required: true
      reason:
        schema: &ref_76
          type: string
          description: 'If state is ERROR, a machine-readable snake-cased string.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ACCESS_DENIED
              - ACCESS_FORBIDDEN
              - ACTION_NOT_SUPPORTED
              - AUTHENTICATION_REQUIRED
              - BEARER_TOKEN_EXPIRED
              - BEARER_TOKEN_BAD_SIGNATURE
              - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
              - CATEGORY_NAME_VALUE_MISMATCH
              - CONFIGURATION_INCOMPLETE
              - CONCURRENT_REQUESTS_NOT_ALLOWED
              - DEFAULT_PROJECT_UNAVAILABLE
              - DESERIALIZATION_FAILED
              - DIRECTORY_SERVICE_CONNECTION_FAILED
              - ENTITY_ALREADY_EXISTS
              - ENTITY_DELETION_FAILED
              - ENTITY_IS_READONLY
              - ENTITY_NAME_UUID_MISMATCH
              - ENTITY_NOT_CONFIGURED
              - ENTITY_NOT_FOUND
              - ENTITY_SAVE_ERROR
              - ENTITY_UPDATE_FAILED
              - IDEMPOTENCE_UUID_CREATION_FAILED
              - IDP_NOT_REACHABLE
              - INTERNAL_ERROR
              - INVALID_ARGUMENT
              - INVALID_AZ_NAME
              - INVALID_CONTENT_TYPE
              - INVALID_DATA_FORMAT
              - INVALID_PORTAL_CONFIGURATION
              - INVALID_REQUEST
              - INVALID_UUID
              - INVALID_OWNER_REFERENCE
              - INTERNAL_AZ_PROXY_SETUP_ERROR
              - INTERNAL_ERROR_REMOTE_REQUEST
              - INTERNAL_ROLE_ACCESS_DENIED
              - INCORRECT_EVENTS_FILTER
              - MISSING_ATTRIBUTE
              - MISSING_CURRENT_USER_METADATA
              - NAME_NOT_IN_DOMAIN
              - NO_RESPONSE_RECEIVED_FROM_PORTAL
              - PE_NOT_PAIRED_WITH_PC
              - PC_NOT_PAIRED_WITH_XI_PORTAL
              - REFERENCE_ERROR
              - RESERVED_ROLE_ACCESS_DENIED
              - REQUEST_NOT_SUPPORTED
              - REMOTE_CLUSTER_IP_FETCH_FAILED
              - REMOTE_CLUSTER_NOT_CONNECTED
              - REMOTE_CONNECTION_EXISTS
              - REMOTE_CONNECTION_NOT_FOUND
              - REPORT_CONFIG_NOT_FOUND
              - REPORTING_RESOURCE_NOT_FOUND
              - REPORTING_INTERNAL_ERROR
              - SERVICE_UNAVAILABLE
              - SEARCH_RESULT_PROCESSING_ERROR
              - TOO_MANY_REQUESTS
              - UNCONFIGURED_API_KEY
              - UNCONFIGURED_PORTAL_CONNECTION
              - UNSPECIFIED_EVENTS_FILTER
              - UNSUPPORTED_AZ_PROXY_API
              - UNSUPPORTED_MEDIA_TYPE_ERROR
              - UNSUPPORTED_API_VERSION
              - UPLOAD_TO_S3_FAILED
              - VALIDATION_ERROR
              - INVALID_SSL_CERTIFICATE
              - ERROR_ATTACHING_FILE_TO_CASE
              - SPEC_UPDATE_ERROR
              - SPEC_INCOMPATIBLE_ERROR
          details:
            csharp:
              name: .message_resource.reason
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .message_resource.reason
              description: ''
        description: 'If state is ERROR, a machine-readable snake-cased string.'
        serializedName: reason
        extensions: {}
        details:
          csharp:
            name: Reason
            description: 'If state is ERROR, a machine-readable snake-cased string.'
            required: true
          default:
            name: reason
            description: 'If state is ERROR, a machine-readable snake-cased string.'
            required: true
      details:
        schema: &ref_73
          type: object
          description: Custom key-value details relevant to the status.
          additionalProperties: &ref_74
            type: string
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties: {}
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: .message_resource.details.additionalItemType
                description: ''
                fullname: <INVALID>
                interfaceName: <INVALID>
                namespace: <INVALID>
              default:
                name: .message_resource.details.additionalItemType
                description: ''
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: MessageResourceDetails
              description: Custom key-value details relevant to the status.
              fullname: Sample.API.Models.MessageResourceDetails
              interfaceName: IMessageResourceDetails
              namespace: Sample.API.Models
            default:
              name: .message_resource.details
              description: Custom key-value details relevant to the status.
        description: Custom key-value details relevant to the status.
        serializedName: details
        extensions: {}
        details:
          csharp:
            name: Details
            description: Custom key-value details relevant to the status.
            required: false
          default:
            name: details
            description: Custom key-value details relevant to the status.
            required: false
    readOnly: false
    required:
      - message
      - reason
    title: Message.
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: MessageResource
        description: message.
        fullname: Sample.API.Models.MessageResource
        interfaceName: IMessageResource
        namespace: Sample.API.Models
      default:
        name: message_resource
        description: message.
  network_function_chain_reference: &ref_13
    type: object
    description: The reference to a network_function_chain
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_78
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .network_function_chain_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_77
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: network_function_chain
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - network_function_chain
          details:
            csharp:
              name: .network_function_chain_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_79
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .network_function_chain_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .network_function_chain_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a network_function_chain
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: NetworkFunctionChainReference
        description: The reference to a network_function_chain
        fullname: Sample.API.Models.NetworkFunctionChainReference
        interfaceName: INetworkFunctionChainReference
        namespace: Sample.API.Models
      default:
        name: network_function_chain_reference
        description: The reference to a network_function_chain
  nutanix_guest_tools_spec: *ref_4
  nutanix_guest_tools_status: *ref_5
  project_reference: &ref_27
    type: object
    description: The reference to a project
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_95
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .project_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_94
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: project
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - project
          details:
            csharp:
              name: .project_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_96
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .project_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .project_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a project
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: ProjectReference
        description: The reference to a project
        fullname: Sample.API.Models.ProjectReference
        interfaceName: IProjectReference
        namespace: Sample.API.Models
      default:
        name: project_reference
        description: The reference to a project
  reference: &ref_9
    type: object
    description: Reference to a kind
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_98
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_97
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.kind
              description: ''
        description: ''
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: ''
            required: true
          default:
            name: kind
            description: ''
            required: true
      uuid:
        schema: &ref_99
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: Reference
        description: Reference to a kind
        fullname: Sample.API.Models.Reference
        interfaceName: IReference
        namespace: Sample.API.Models
      default:
        name: reference
        description: Reference to a kind
  sort_order: &ref_32
    type: string
    description: The sort order in which results are returned
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties: {}
    readOnly: false
    required: []
    title: Sort order
    writeOnly: false
    extensions:
      x-ntnx-enum:
        - ASCENDING
        - DESCENDING
    details:
      csharp:
        name: sort_order
        description: ''
        fullname: <INVALID>
        interfaceName: <INVALID>
        namespace: <INVALID>
      default:
        name: sort_order
        description: ''
  subnet_reference: &ref_14
    type: object
    description: The reference to a subnet
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_101
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .subnet_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_100
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: subnet
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - subnet
          details:
            csharp:
              name: .subnet_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_102
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .subnet_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .subnet_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a subnet
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: SubnetReference
        description: The reference to a subnet
        fullname: Sample.API.Models.SubnetReference
        interfaceName: ISubnetReference
        namespace: Sample.API.Models
      default:
        name: subnet_reference
        description: The reference to a subnet
  user_reference: &ref_26
    type: object
    description: The reference to a user
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_104
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_reference.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: ''
            required: false
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_103
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: user
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - user
          details:
            csharp:
              name: .user_reference.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: true
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_105
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .user_reference.uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .user_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          csharp:
            name: Uuid
            description: ''
            required: true
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a user
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: UserReference
        description: The reference to a user
        fullname: Sample.API.Models.UserReference
        interfaceName: IUserReference
        namespace: Sample.API.Models
      default:
        name: user_reference
        description: The reference to a user
  vm: &ref_28
    type: object
    description: An intentful representation of a vm spec
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_107
          type: string
          description: vm Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm.name
              description: ''
        description: vm Name.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: vm Name.
            required: true
          default:
            name: name
            description: vm Name.
            required: true
      description:
        schema: &ref_106
          type: string
          description: A description for vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 1000
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm.description
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm.description
              description: ''
        description: A description for vm.
        serializedName: description
        extensions: {}
        details:
          csharp:
            name: Description
            description: A description for vm.
            required: false
          default:
            name: description
            description: A description for vm.
            required: false
      availability_zone_reference:
        schema: *ref_6
        description: The reference to a availability_zone
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: The reference to a availability_zone
            required: false
          default:
            name: availability_zone_reference
            description: The reference to a availability_zone
            required: false
      cluster_reference:
        schema: *ref_7
        description: The reference to a cluster
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: The reference to a cluster
            required: false
          default:
            name: cluster_reference
            description: The reference to a cluster
            required: false
      resources:
        schema: &ref_42
          type: object
          description: VM Resources Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            boot_config:
              schema: &ref_15
                type: object
                description: |
                  Indicates which device a VM should boot from.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  boot_device:
                    schema: &ref_16
                      type: object
                      description: >
                        Indicates which device a VM should boot from. One of
                        disk_address or mac_address should be provided.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties:
                        disk_address:
                          schema: *ref_8
                          description: Address of disk to boot from.
                          serializedName: disk_address
                          extensions: {}
                          details:
                            csharp:
                              name: DiskAddress
                              description: Address of disk to boot from.
                              required: false
                            default:
                              name: disk_address
                              description: Address of disk to boot from.
                              required: false
                        mac_address:
                          schema: &ref_110
                            type: string
                            description: MAC address of nic to boot from.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: .vm_boot_device.mac_address
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: .vm_boot_device.mac_address
                                description: ''
                          description: MAC address of nic to boot from.
                          serializedName: mac_address
                          extensions: {}
                          details:
                            csharp:
                              name: MacAddress
                              description: MAC address of nic to boot from.
                              required: false
                            default:
                              name: mac_address
                              description: MAC address of nic to boot from.
                              required: false
                      readOnly: false
                      required: []
                      title: VM Boot device
                      writeOnly: false
                      extensions:
                        x-ntnx-one-of:
                          - required:
                              - disk_address
                          - required:
                              - mac_address
                      details:
                        csharp:
                          name: VmBootDevice
                          description: >
                            Indicates which device a VM should boot from. One of
                            disk_address or mac_address should be provided.
                          fullname: Sample.API.Models.VmBootDevice
                          interfaceName: IVmBootDevice
                          namespace: Sample.API.Models
                        default:
                          name: vm_boot_device
                          description: >
                            Indicates which device a VM should boot from. One of
                            disk_address or mac_address should be provided.
                    description: >
                      Indicates which device a VM should boot from. Boot device
                      takes precdence over boot device order. If both are given
                      then specified boot device will be primary boot device and
                      remaining devices will be assigned boot order according to
                      boot device order field.
                    serializedName: boot_device
                    extensions: {}
                    details:
                      csharp:
                        name: BootDevice
                        description: >
                          Indicates which device a VM should boot from. Boot
                          device takes precdence over boot device order. If both
                          are given then specified boot device will be primary
                          boot device and remaining devices will be assigned
                          boot order according to boot device order field.
                        required: false
                      default:
                        name: boot_device
                        description: >
                          Indicates which device a VM should boot from. Boot
                          device takes precdence over boot device order. If both
                          are given then specified boot device will be primary
                          boot device and remaining devices will be assigned
                          boot order according to boot device order field.
                        required: false
                  boot_device_order_list:
                    schema: &ref_108
                      type: array
                      description: >
                        Indicates the order of device types in which VM should
                        try to boot from. If boot device order is not provided
                        the system will decide appropriate boot device order.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      items: &ref_109
                        type: string
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - CDROM
                            - DISK
                            - NETWORK
                        details:
                          csharp:
                            name: .vm_boot_config.boot_device_order_list.itemType
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_boot_config.boot_device_order_list.itemType
                            description: ''
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_boot_config.boot_device_order_list
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_boot_config.boot_device_order_list
                          description: ''
                    description: >
                      Indicates the order of device types in which VM should try
                      to boot from. If boot device order is not provided the
                      system will decide appropriate boot device order.
                    serializedName: boot_device_order_list
                    extensions: {}
                    details:
                      csharp:
                        name: BootDeviceOrderList
                        description: >
                          Indicates the order of device types in which VM should
                          try to boot from. If boot device order is not provided
                          the system will decide appropriate boot device order.
                        required: false
                      default:
                        name: boot_device_order_list
                        description: >
                          Indicates the order of device types in which VM should
                          try to boot from. If boot device order is not provided
                          the system will decide appropriate boot device order.
                        required: false
                readOnly: false
                required: []
                title: VM Boot configuration
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmBootConfig
                    description: |
                      Indicates which device a VM should boot from.
                    fullname: Sample.API.Models.VmBootConfig
                    interfaceName: IVmBootConfig
                    namespace: Sample.API.Models
                  default:
                    name: vm_boot_config
                    description: |
                      Indicates which device a VM should boot from.
              description: Indicates which device the VM should boot from.
              serializedName: boot_config
              extensions: {}
              details:
                csharp:
                  name: BootConfig
                  description: Indicates which device the VM should boot from.
                  required: false
                default:
                  name: boot_config
                  description: Indicates which device the VM should boot from.
                  required: false
            disk_list:
              schema: &ref_222
                type: array
                description: Disks attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_18
                  type: object
                  description: VirtualMachine Disk (VM Disk).
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties:
                    data_source_reference:
                      schema: *ref_9
                      description: Reference to a kind
                      serializedName: data_source_reference
                      extensions: {}
                      details:
                        csharp:
                          name: DataSourceReference
                          description: Reference to a kind
                          required: false
                        default:
                          name: data_source_reference
                          description: Reference to a kind
                          required: false
                    device_properties:
                      schema: &ref_115
                        type: object
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties:
                          device_type:
                            schema: &ref_116
                              type: string
                              allOf: []
                              anyOf: []
                              default: DISK
                              deprecated: false
                              enum: []
                              nullable: false
                              oneOf: []
                              properties: {}
                              readOnly: false
                              required: []
                              writeOnly: false
                              extensions:
                                x-ntnx-enum:
                                  - DISK
                                  - CDROM
                                  - VOLUME_GROUP
                              details:
                                csharp:
                                  name: .vm_disk.device_properties.device_type
                                  description: ''
                                  fullname: <INVALID>
                                  interfaceName: <INVALID>
                                  namespace: <INVALID>
                                default:
                                  name: .vm_disk.device_properties.device_type
                                  description: ''
                            description: ''
                            serializedName: device_type
                            extensions: {}
                            details:
                              csharp:
                                name: DeviceType
                                description: ''
                                required: false
                              default:
                                name: device_type
                                description: ''
                                required: false
                          disk_address:
                            schema: *ref_8
                            description: Disk Address.
                            serializedName: disk_address
                            extensions: {}
                            details:
                              csharp:
                                name: DiskAddress
                                description: Disk Address.
                                required: false
                              default:
                                name: disk_address
                                description: Disk Address.
                                required: false
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: VmDiskDeviceProperties
                            description: ''
                            fullname: Sample.API.Models.VmDiskDeviceProperties
                            interfaceName: IVmDiskDeviceProperties
                            namespace: Sample.API.Models
                          default:
                            name: .vm_disk.device_properties
                            description: ''
                      description: ''
                      serializedName: device_properties
                      extensions: {}
                      details:
                        csharp:
                          name: DeviceProperties
                          description: ''
                          required: false
                        default:
                          name: device_properties
                          description: ''
                          required: false
                    disk_size_bytes:
                      schema: &ref_117
                        type: integer
                        format: int64
                        description: Size of the disk in Bytes.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        minimum: 1
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_disk.disk_size_bytes
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_disk.disk_size_bytes
                            description: ''
                      description: Size of the disk in Bytes.
                      serializedName: disk_size_bytes
                      extensions: {}
                      details:
                        csharp:
                          name: DiskSizeBytes
                          description: Size of the disk in Bytes.
                          required: false
                        default:
                          name: disk_size_bytes
                          description: Size of the disk in Bytes.
                          required: false
                    disk_size_mib:
                      schema: &ref_118
                        type: integer
                        format: int32
                        description: >
                          Size of the disk in MiB. Must match the size specified
                          in 'disk_size_bytes' - rounded up to the nearest MiB
                          -  when that field is present.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        minimum: 1
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_disk.disk_size_mib
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_disk.disk_size_mib
                            description: ''
                      description: >
                        Size of the disk in MiB. Must match the size specified
                        in 'disk_size_bytes' - rounded up to the nearest MiB - 
                        when that field is present.
                      serializedName: disk_size_mib
                      extensions: {}
                      details:
                        csharp:
                          name: DiskSizeMib
                          description: >
                            Size of the disk in MiB. Must match the size
                            specified in 'disk_size_bytes' - rounded up to the
                            nearest MiB -  when that field is present.
                          required: false
                        default:
                          name: disk_size_mib
                          description: >
                            Size of the disk in MiB. Must match the size
                            specified in 'disk_size_bytes' - rounded up to the
                            nearest MiB -  when that field is present.
                          required: false
                    uuid:
                      schema: &ref_119
                        type: string
                        format: UUID
                        description: >
                          The device ID which is used to uniquely identify this
                          particular disk.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: >-
                          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_disk.uuid
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_disk.uuid
                            description: ''
                      description: >
                        The device ID which is used to uniquely identify this
                        particular disk.
                      serializedName: uuid
                      extensions: {}
                      details:
                        csharp:
                          name: Uuid
                          description: >
                            The device ID which is used to uniquely identify
                            this particular disk.
                          required: false
                        default:
                          name: uuid
                          description: >
                            The device ID which is used to uniquely identify
                            this particular disk.
                          required: false
                    volume_group_reference:
                      schema: *ref_9
                      description: Reference to a kind
                      serializedName: volume_group_reference
                      extensions: {}
                      details:
                        csharp:
                          name: VolumeGroupReference
                          description: Reference to a kind
                          required: false
                        default:
                          name: volume_group_reference
                          description: Reference to a kind
                          required: false
                  readOnly: false
                  required: []
                  title: VirtualMachine Disk (VM Disk)
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: VmDisk
                      description: VirtualMachine Disk (VM Disk).
                      fullname: Sample.API.Models.VmDisk
                      interfaceName: IVmDisk
                      namespace: Sample.API.Models
                    default:
                      name: vm_disk
                      description: VirtualMachine Disk (VM Disk).
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.disk_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.disk_list
                    description: ''
              description: Disks attached to the VM.
              serializedName: disk_list
              extensions: {}
              details:
                csharp:
                  name: DiskList
                  description: Disks attached to the VM.
                  required: false
                default:
                  name: disk_list
                  description: Disks attached to the VM.
                  required: false
            gpu_list:
              schema: &ref_223
                type: array
                description: GPUs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_23
                  type: object
                  description: Graphics resource information for the Virtual Machine.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties:
                    device_id:
                      schema: &ref_120
                        type: integer
                        format: int32
                        description: The device ID of the GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu.device_id
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu.device_id
                            description: ''
                      description: The device ID of the GPU.
                      serializedName: device_id
                      extensions: {}
                      details:
                        csharp:
                          name: DeviceId
                          description: The device ID of the GPU.
                          required: false
                        default:
                          name: device_id
                          description: The device ID of the GPU.
                          required: false
                    mode:
                      schema: &ref_121
                        type: string
                        description: The mode of this GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - PASSTHROUGH_GRAPHICS
                            - PASSTHROUGH_COMPUTE
                            - VIRTUAL
                        details:
                          csharp:
                            name: .vm_gpu.mode
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu.mode
                            description: ''
                      description: The mode of this GPU.
                      serializedName: mode
                      extensions: {}
                      details:
                        csharp:
                          name: Mode
                          description: The mode of this GPU.
                          required: false
                        default:
                          name: mode
                          description: The mode of this GPU.
                          required: false
                    vendor:
                      schema: &ref_122
                        type: string
                        description: The vendor of the GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - NVIDIA
                            - INTEL
                            - AMD
                        details:
                          csharp:
                            name: .vm_gpu.vendor
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu.vendor
                            description: ''
                      description: The vendor of the GPU.
                      serializedName: vendor
                      extensions: {}
                      details:
                        csharp:
                          name: Vendor
                          description: The vendor of the GPU.
                          required: false
                        default:
                          name: vendor
                          description: The vendor of the GPU.
                          required: false
                  readOnly: false
                  required: []
                  title: VirtualMachine GPU
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: VmGpu
                      description: Graphics resource information for the Virtual Machine.
                      fullname: Sample.API.Models.VmGpu
                      interfaceName: IVmGpu
                      namespace: Sample.API.Models
                    default:
                      name: vm_gpu
                      description: Graphics resource information for the Virtual Machine.
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.gpu_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.gpu_list
                    description: ''
              description: GPUs attached to the VM.
              serializedName: gpu_list
              extensions: {}
              details:
                csharp:
                  name: GpuList
                  description: GPUs attached to the VM.
                  required: false
                default:
                  name: gpu_list
                  description: GPUs attached to the VM.
                  required: false
            guest_customization:
              schema: *ref_10
              description: >
                VM guests may be customized at boot time using one of several
                different methods. Currently, cloud-init w/ ConfigDriveV2 (for
                Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE
                OF sysprep or cloud_init should be provided. Note that guest
                customization can currently only be set during VM creation.
                Attempting to change it after creation will result in an error.
                Additional properties can be specified. For example - in the
                context of VM template creation if "override_script" is set to
                "True" then the deployer can upload their own custom script.
              serializedName: guest_customization
              extensions: {}
              details:
                csharp:
                  name: GuestCustomization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
                default:
                  name: guest_customization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
            guest_os_id:
              schema: &ref_224
                type: string
                description: >
                  Guest OS Identifier. For ESX, refer to VMware documentation
                  link
                  (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                  for the list of guest OS identifiers.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.guest_os_id
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.guest_os_id
                    description: ''
              description: >
                Guest OS Identifier. For ESX, refer to VMware documentation link
                (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                for the list of guest OS identifiers.
              serializedName: guest_os_id
              extensions: {}
              details:
                csharp:
                  name: GuestOsId
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
                default:
                  name: guest_os_id
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
            guest_tools:
              schema: *ref_11
              description: Information regarding guest tools.
              serializedName: guest_tools
              extensions: {}
              details:
                csharp:
                  name: GuestTools
                  description: Information regarding guest tools.
                  required: false
                default:
                  name: guest_tools
                  description: Information regarding guest tools.
                  required: false
            hardware_clock_timezone:
              schema: &ref_225
                type: string
                description: >
                  VM's hardware clock timezone in IANA TZDB format
                  (America/Los_Angeles).
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.hardware_clock_timezone
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.hardware_clock_timezone
                    description: ''
              description: >
                VM's hardware clock timezone in IANA TZDB format
                (America/Los_Angeles).
              serializedName: hardware_clock_timezone
              extensions: {}
              details:
                csharp:
                  name: HardwareClockTimezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
                default:
                  name: hardware_clock_timezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
            memory_size_mib:
              schema: &ref_226
                type: integer
                format: int32
                description: Memory size in MiB.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.memory_size_mib
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.memory_size_mib
                    description: ''
              description: Memory size in MiB.
              serializedName: memory_size_mib
              extensions: {}
              details:
                csharp:
                  name: MemorySizeMib
                  description: Memory size in MiB.
                  required: false
                default:
                  name: memory_size_mib
                  description: Memory size in MiB.
                  required: false
            nic_list:
              schema: &ref_227
                type: array
                description: NICs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_34
                  type: object
                  description: Virtual Machine NIC.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties:
                    ip_endpoint_list:
                      schema: &ref_160
                        type: array
                        description: >
                          IP endpoints for the adapter. Currently, IPv4
                          addresses are

                          supported.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        items: *ref_12
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic.ip_endpoint_list
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.ip_endpoint_list
                            description: ''
                      description: >
                        IP endpoints for the adapter. Currently, IPv4 addresses
                        are

                        supported.
                      serializedName: ip_endpoint_list
                      extensions: {}
                      details:
                        csharp:
                          name: IpEndpointList
                          description: >
                            IP endpoints for the adapter. Currently, IPv4
                            addresses are

                            supported.
                          required: false
                        default:
                          name: ip_endpoint_list
                          description: >
                            IP endpoints for the adapter. Currently, IPv4
                            addresses are

                            supported.
                          required: false
                    mac_address:
                      schema: &ref_161
                        type: string
                        description: The MAC address for the adapter.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic.mac_address
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.mac_address
                            description: ''
                      description: The MAC address for the adapter.
                      serializedName: mac_address
                      extensions: {}
                      details:
                        csharp:
                          name: MacAddress
                          description: The MAC address for the adapter.
                          required: false
                        default:
                          name: mac_address
                          description: The MAC address for the adapter.
                          required: false
                    model:
                      schema: &ref_162
                        type: string
                        description: The model of this NIC.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - VIRTIO
                            - E1000
                        details:
                          csharp:
                            name: .vm_nic.model
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.model
                            description: ''
                      description: The model of this NIC.
                      serializedName: model
                      extensions: {}
                      details:
                        csharp:
                          name: Model
                          description: The model of this NIC.
                          required: false
                        default:
                          name: model
                          description: The model of this NIC.
                          required: false
                    network_function_chain_reference:
                      schema: *ref_13
                      description: The reference to a network_function_chain
                      serializedName: network_function_chain_reference
                      extensions: {}
                      details:
                        csharp:
                          name: NetworkFunctionChainReference
                          description: The reference to a network_function_chain
                          required: false
                        default:
                          name: network_function_chain_reference
                          description: The reference to a network_function_chain
                          required: false
                    network_function_nic_type:
                      schema: &ref_163
                        type: string
                        description: >
                          The type of this Network function NIC. Defaults to
                          INGRESS.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - INGRESS
                            - EGRESS
                            - TAP
                        details:
                          csharp:
                            name: .vm_nic.network_function_nic_type
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.network_function_nic_type
                            description: ''
                      description: >
                        The type of this Network function NIC. Defaults to
                        INGRESS.
                      serializedName: network_function_nic_type
                      extensions: {}
                      details:
                        csharp:
                          name: NetworkFunctionNicType
                          description: >
                            The type of this Network function NIC. Defaults to
                            INGRESS.
                          required: false
                        default:
                          name: network_function_nic_type
                          description: >
                            The type of this Network function NIC. Defaults to
                            INGRESS.
                          required: false
                    nic_type:
                      schema: &ref_164
                        type: string
                        description: The type of this NIC. Defaults to NORMAL_NIC.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - NORMAL_NIC
                            - DIRECT_NIC
                            - NETWORK_FUNCTION_NIC
                        details:
                          csharp:
                            name: .vm_nic.nic_type
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.nic_type
                            description: ''
                      description: The type of this NIC. Defaults to NORMAL_NIC.
                      serializedName: nic_type
                      extensions: {}
                      details:
                        csharp:
                          name: NicType
                          description: The type of this NIC. Defaults to NORMAL_NIC.
                          required: false
                        default:
                          name: nic_type
                          description: The type of this NIC. Defaults to NORMAL_NIC.
                          required: false
                    subnet_reference:
                      schema: *ref_14
                      description: The reference to a subnet
                      serializedName: subnet_reference
                      extensions: {}
                      details:
                        csharp:
                          name: SubnetReference
                          description: The reference to a subnet
                          required: false
                        default:
                          name: subnet_reference
                          description: The reference to a subnet
                          required: false
                    uuid:
                      schema: &ref_165
                        type: string
                        format: UUID
                        description: >
                          The NIC's UUID, which is used to uniquely identify
                          this particular NIC. This UUID may be used to refer to
                          the NIC outside the context of the particular VM it is
                          attached to.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: >-
                          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic.uuid
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic.uuid
                            description: ''
                      description: >
                        The NIC's UUID, which is used to uniquely identify this
                        particular NIC. This UUID may be used to refer to the
                        NIC outside the context of the particular VM it is
                        attached to.
                      serializedName: uuid
                      extensions: {}
                      details:
                        csharp:
                          name: Uuid
                          description: >
                            The NIC's UUID, which is used to uniquely identify
                            this particular NIC. This UUID may be used to refer
                            to the NIC outside the context of the particular VM
                            it is attached to.
                          required: false
                        default:
                          name: uuid
                          description: >
                            The NIC's UUID, which is used to uniquely identify
                            this particular NIC. This UUID may be used to refer
                            to the NIC outside the context of the particular VM
                            it is attached to.
                          required: false
                  readOnly: false
                  required: []
                  title: Virtual Machine NIC
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: VmNic
                      description: Virtual Machine NIC.
                      fullname: Sample.API.Models.VmNic
                      interfaceName: IVmNic
                      namespace: Sample.API.Models
                    default:
                      name: vm_nic
                      description: Virtual Machine NIC.
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.nic_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.nic_list
                    description: ''
              description: NICs attached to the VM.
              serializedName: nic_list
              extensions: {}
              details:
                csharp:
                  name: NicList
                  description: NICs attached to the VM.
                  required: false
                default:
                  name: nic_list
                  description: NICs attached to the VM.
                  required: false
            num_sockets:
              schema: &ref_228
                type: integer
                format: int32
                description: Number of vCPU sockets.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.num_sockets
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.num_sockets
                    description: ''
              description: Number of vCPU sockets.
              serializedName: num_sockets
              extensions: {}
              details:
                csharp:
                  name: NumSockets
                  description: Number of vCPU sockets.
                  required: false
                default:
                  name: num_sockets
                  description: Number of vCPU sockets.
                  required: false
            num_vcpus_per_socket:
              schema: &ref_229
                type: integer
                format: int32
                description: Number of vCPUs per socket.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                minimum: 1
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.num_vcpus_per_socket
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.num_vcpus_per_socket
                    description: ''
              description: Number of vCPUs per socket.
              serializedName: num_vcpus_per_socket
              extensions: {}
              details:
                csharp:
                  name: NumVcpusPerSocket
                  description: Number of vCPUs per socket.
                  required: false
                default:
                  name: num_vcpus_per_socket
                  description: Number of vCPUs per socket.
                  required: false
            parent_reference:
              schema: *ref_9
              description: |
                Reference to an entity that the VM should be cloned from.
              serializedName: parent_reference
              extensions: {}
              details:
                csharp:
                  name: ParentReference
                  description: |
                    Reference to an entity that the VM should be cloned from.
                  required: false
                default:
                  name: parent_reference
                  description: |
                    Reference to an entity that the VM should be cloned from.
                  required: false
            power_state:
              schema: &ref_230
                type: string
                description: The current or desired power state of the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - 'ON'
                    - 'OFF'
                details:
                  csharp:
                    name: .vm_resources.power_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.power_state
                    description: ''
              description: The current or desired power state of the VM.
              serializedName: power_state
              extensions: {}
              details:
                csharp:
                  name: PowerState
                  description: The current or desired power state of the VM.
                  required: false
                default:
                  name: power_state
                  description: The current or desired power state of the VM.
                  required: false
            power_state_mechanism:
              schema: &ref_21
                type: object
                description: >
                  Indicates the mechanism guiding the VM power state transition.
                  Currently used for the transition to "OFF" state.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  guest_transition_config:
                    schema: &ref_25
                      type: object
                      description: Extra configs related to power state transition.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties:
                        enable_script_exec:
                          schema: &ref_133
                            type: boolean
                            description: >-
                              Indicates whether to execute set script before ngt
                              shutdown/reboot.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: >-
                                  .vm_guest_power_state_transition_config.enable_script_exec
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: >-
                                  .vm_guest_power_state_transition_config.enable_script_exec
                                description: ''
                          description: >-
                            Indicates whether to execute set script before ngt
                            shutdown/reboot.
                          serializedName: enable_script_exec
                          extensions: {}
                          details:
                            csharp:
                              name: EnableScriptExec
                              description: >-
                                Indicates whether to execute set script before
                                ngt shutdown/reboot.
                              required: false
                            default:
                              name: enable_script_exec
                              description: >-
                                Indicates whether to execute set script before
                                ngt shutdown/reboot.
                              required: false
                        should_fail_on_script_failure:
                          schema: &ref_134
                            type: boolean
                            description: >-
                              Indicates whether to abort ngt shutdown/reboot if
                              script fails.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions: {}
                            details:
                              csharp:
                                name: >-
                                  .vm_guest_power_state_transition_config.should_fail_on_script_failure
                                description: ''
                                fullname: <INVALID>
                                interfaceName: <INVALID>
                                namespace: <INVALID>
                              default:
                                name: >-
                                  .vm_guest_power_state_transition_config.should_fail_on_script_failure
                                description: ''
                          description: >-
                            Indicates whether to abort ngt shutdown/reboot if
                            script fails.
                          serializedName: should_fail_on_script_failure
                          extensions: {}
                          details:
                            csharp:
                              name: ShouldFailOnScriptFailure
                              description: >-
                                Indicates whether to abort ngt shutdown/reboot
                                if script fails.
                              required: false
                            default:
                              name: should_fail_on_script_failure
                              description: >-
                                Indicates whether to abort ngt shutdown/reboot
                                if script fails.
                              required: false
                      readOnly: false
                      required: []
                      title: Power State Transition Config
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: VmGuestPowerStateTransitionConfig
                          description: Extra configs related to power state transition.
                          fullname: Sample.API.Models.VmGuestPowerStateTransitionConfig
                          interfaceName: IVmGuestPowerStateTransitionConfig
                          namespace: Sample.API.Models
                        default:
                          name: vm_guest_power_state_transition_config
                          description: Extra configs related to power state transition.
                    description: Extra configs related to power state transition.
                    serializedName: guest_transition_config
                    extensions: {}
                    details:
                      csharp:
                        name: GuestTransitionConfig
                        description: Extra configs related to power state transition.
                        required: false
                      default:
                        name: guest_transition_config
                        description: Extra configs related to power state transition.
                        required: false
                  mechanism:
                    schema: &ref_173
                      type: string
                      description: Power state mechanism (ACPI/GUEST/HARD).
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - ACPI
                          - GUEST
                          - HARD
                      details:
                        csharp:
                          name: .vm_power_state_mechanism.mechanism
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_power_state_mechanism.mechanism
                          description: ''
                    description: Power state mechanism (ACPI/GUEST/HARD).
                    serializedName: mechanism
                    extensions: {}
                    details:
                      csharp:
                        name: Mechanism
                        description: Power state mechanism (ACPI/GUEST/HARD).
                        required: false
                      default:
                        name: mechanism
                        description: Power state mechanism (ACPI/GUEST/HARD).
                        required: false
                readOnly: false
                required: []
                title: VM Power State Mechanism
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmPowerStateMechanism
                    description: >
                      Indicates the mechanism guiding the VM power state
                      transition. Currently used for the transition to "OFF"
                      state.
                    fullname: Sample.API.Models.VmPowerStateMechanism
                    interfaceName: IVmPowerStateMechanism
                    namespace: Sample.API.Models
                  default:
                    name: vm_power_state_mechanism
                    description: >
                      Indicates the mechanism guiding the VM power state
                      transition. Currently used for the transition to "OFF"
                      state.
              description: >
                Indicates the mechanism guiding the VM power state transition.
                Currently used for the transition to "OFF" state.
              serializedName: power_state_mechanism
              extensions: {}
              details:
                csharp:
                  name: PowerStateMechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
                default:
                  name: power_state_mechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
            vga_console_enabled:
              schema: &ref_231
                type: boolean
                description: Indicates whether VGA console should be enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources.vga_console_enabled
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources.vga_console_enabled
                    description: ''
              description: Indicates whether VGA console should be enabled or not.
              serializedName: vga_console_enabled
              extensions: {}
              details:
                csharp:
                  name: VgaConsoleEnabled
                  description: Indicates whether VGA console should be enabled or not.
                  required: false
                default:
                  name: vga_console_enabled
                  description: Indicates whether VGA console should be enabled or not.
                  required: false
            vnuma_config:
              schema: &ref_22
                type: object
                description: |
                  Indicates how VM vNUMA should be configured
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  num_vnuma_nodes:
                    schema: &ref_300
                      type: integer
                      format: int64
                      description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_vnuma_config.num_vnuma_nodes
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_vnuma_config.num_vnuma_nodes
                          description: ''
                    description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                    serializedName: num_vnuma_nodes
                    extensions: {}
                    details:
                      csharp:
                        name: NumVnumaNodes
                        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                        required: false
                      default:
                        name: num_vnuma_nodes
                        description: Number of vNUMA nodes. 0 means vNUMA is disabled.
                        required: false
                readOnly: false
                required: []
                title: VM vNUMA configuration
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmVnumaConfig
                    description: |
                      Indicates how VM vNUMA should be configured
                    fullname: Sample.API.Models.VmVnumaConfig
                    interfaceName: IVmVnumaConfig
                    namespace: Sample.API.Models
                  default:
                    name: vm_vnuma_config
                    description: |
                      Indicates how VM vNUMA should be configured
              description: Information regarding vNUMA configuration.
              serializedName: vnuma_config
              extensions: {}
              details:
                csharp:
                  name: VnumaConfig
                  description: Information regarding vNUMA configuration.
                  required: false
                default:
                  name: vnuma_config
                  description: Information regarding vNUMA configuration.
                  required: false
          readOnly: false
          required: []
          title: VM Resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmResources
              description: VM Resources Definition.
              fullname: Sample.API.Models.VmResources
              interfaceName: IVmResources
              namespace: Sample.API.Models
            default:
              name: vm_resources
              description: VM Resources Definition.
        description: VM Resources Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: VM Resources Definition.
            required: true
          default:
            name: resources
            description: VM Resources Definition.
            required: true
    readOnly: false
    required:
      - name
      - resources
    title: vm Intent Spec with placement specified
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: Vm
        description: An intentful representation of a vm spec
        fullname: Sample.API.Models.Vm
        interfaceName: IVm
        namespace: Sample.API.Models
      default:
        name: vm
        description: An intentful representation of a vm spec
  vm_boot_config: *ref_15
  vm_boot_device: *ref_16
  vm_def_status: &ref_30
    type: object
    description: An intentful representation of a vm status
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_113
          type: string
          description: vm Name.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.name
              description: ''
        description: vm Name.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: vm Name.
            required: true
          default:
            name: name
            description: vm Name.
            required: true
      description:
        schema: &ref_111
          type: string
          description: A description for vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.description
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.description
              description: ''
        description: A description for vm.
        serializedName: description
        extensions: {}
        details:
          csharp:
            name: Description
            description: A description for vm.
            required: false
          default:
            name: description
            description: A description for vm.
            required: false
      availability_zone_reference:
        schema: *ref_6
        description: The reference to a availability_zone
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: The reference to a availability_zone
            required: false
          default:
            name: availability_zone_reference
            description: The reference to a availability_zone
            required: false
      cluster_reference:
        schema: *ref_7
        description: The reference to a cluster
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: The reference to a cluster
            required: false
          default:
            name: cluster_reference
            description: The reference to a cluster
            required: false
      message_list:
        schema: &ref_112
          type: array
          description: 'Any error messages for the vm, if in an error state.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.message_list
              description: ''
        description: 'Any error messages for the vm, if in an error state.'
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: 'Any error messages for the vm, if in an error state.'
            required: false
          default:
            name: message_list
            description: 'Any error messages for the vm, if in an error state.'
            required: false
      resources:
        schema: &ref_43
          type: object
          description: VM Resources Status Definition.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            boot_config:
              schema: *ref_15
              description: Indicates which device the VM should boot from.
              serializedName: boot_config
              extensions: {}
              details:
                csharp:
                  name: BootConfig
                  description: Indicates which device the VM should boot from.
                  required: false
                default:
                  name: boot_config
                  description: Indicates which device the VM should boot from.
                  required: false
            disk_list:
              schema: &ref_232
                type: array
                description: Disks attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: *ref_18
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.disk_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.disk_list
                    description: ''
              description: Disks attached to the VM.
              serializedName: disk_list
              extensions: {}
              details:
                csharp:
                  name: DiskList
                  description: Disks attached to the VM.
                  required: false
                default:
                  name: disk_list
                  description: Disks attached to the VM.
                  required: false
            gpu_list:
              schema: &ref_233
                type: array
                description: GPUs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_24
                  type: object
                  description: >-
                    Graphics resource status information for the Virtual
                    Machine.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties:
                    name:
                      schema: &ref_128
                        type: string
                        description: Name of the GPU resource.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.name
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.name
                            description: ''
                      description: Name of the GPU resource.
                      serializedName: name
                      extensions: {}
                      details:
                        csharp:
                          name: Name
                          description: Name of the GPU resource.
                          required: false
                        default:
                          name: name
                          description: Name of the GPU resource.
                          required: false
                    device_id:
                      schema: &ref_123
                        type: integer
                        format: int32
                        description: The device ID of the GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.device_id
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.device_id
                            description: ''
                      description: The device ID of the GPU.
                      serializedName: device_id
                      extensions: {}
                      details:
                        csharp:
                          name: DeviceId
                          description: The device ID of the GPU.
                          required: false
                        default:
                          name: device_id
                          description: The device ID of the GPU.
                          required: false
                    fraction:
                      schema: &ref_124
                        type: integer
                        format: int32
                        description: Fraction of the physical GPU assigned.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.fraction
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.fraction
                            description: ''
                      description: Fraction of the physical GPU assigned.
                      serializedName: fraction
                      extensions: {}
                      details:
                        csharp:
                          name: Fraction
                          description: Fraction of the physical GPU assigned.
                          required: false
                        default:
                          name: fraction
                          description: Fraction of the physical GPU assigned.
                          required: false
                    frame_buffer_size_mib:
                      schema: &ref_125
                        type: integer
                        format: int64
                        description: GPU frame buffer size in MiB.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.frame_buffer_size_mib
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.frame_buffer_size_mib
                            description: ''
                      description: GPU frame buffer size in MiB.
                      serializedName: frame_buffer_size_mib
                      extensions: {}
                      details:
                        csharp:
                          name: FrameBufferSizeMib
                          description: GPU frame buffer size in MiB.
                          required: false
                        default:
                          name: frame_buffer_size_mib
                          description: GPU frame buffer size in MiB.
                          required: false
                    guest_driver_version:
                      schema: &ref_126
                        type: string
                        description: Last determined guest driver version.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.guest_driver_version
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.guest_driver_version
                            description: ''
                      description: Last determined guest driver version.
                      serializedName: guest_driver_version
                      extensions: {}
                      details:
                        csharp:
                          name: GuestDriverVersion
                          description: Last determined guest driver version.
                          required: false
                        default:
                          name: guest_driver_version
                          description: Last determined guest driver version.
                          required: false
                    mode:
                      schema: &ref_127
                        type: string
                        description: The mode of this GPU
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - PASSTHROUGH_GRAPHICS
                            - PASSTHROUGH_COMPUTE
                            - VIRTUAL
                        details:
                          csharp:
                            name: .vm_gpu_output_status.mode
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.mode
                            description: ''
                      description: The mode of this GPU
                      serializedName: mode
                      extensions: {}
                      details:
                        csharp:
                          name: Mode
                          description: The mode of this GPU
                          required: false
                        default:
                          name: mode
                          description: The mode of this GPU
                          required: false
                    num_virtual_display_heads:
                      schema: &ref_129
                        type: integer
                        format: int32
                        description: Number of supported virtual display heads.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.num_virtual_display_heads
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.num_virtual_display_heads
                            description: ''
                      description: Number of supported virtual display heads.
                      serializedName: num_virtual_display_heads
                      extensions: {}
                      details:
                        csharp:
                          name: NumVirtualDisplayHeads
                          description: Number of supported virtual display heads.
                          required: false
                        default:
                          name: num_virtual_display_heads
                          description: Number of supported virtual display heads.
                          required: false
                    pci_address:
                      schema: &ref_130
                        type: string
                        description: >
                          GPU {segment:bus:device:function} (sbdf) address if
                          assigned.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.pci_address
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.pci_address
                            description: ''
                      description: >
                        GPU {segment:bus:device:function} (sbdf) address if
                        assigned.
                      serializedName: pci_address
                      extensions: {}
                      details:
                        csharp:
                          name: PciAddress
                          description: >
                            GPU {segment:bus:device:function} (sbdf) address if
                            assigned.
                          required: false
                        default:
                          name: pci_address
                          description: >
                            GPU {segment:bus:device:function} (sbdf) address if
                            assigned.
                          required: false
                    uuid:
                      schema: &ref_131
                        type: string
                        format: UUID
                        description: UUID of the GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: >-
                          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_gpu_output_status.uuid
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.uuid
                            description: ''
                      description: UUID of the GPU.
                      serializedName: uuid
                      extensions: {}
                      details:
                        csharp:
                          name: Uuid
                          description: UUID of the GPU.
                          required: false
                        default:
                          name: uuid
                          description: UUID of the GPU.
                          required: false
                    vendor:
                      schema: &ref_132
                        type: string
                        description: The vendor of the GPU.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - NVIDIA
                            - INTEL
                            - AMD
                        details:
                          csharp:
                            name: .vm_gpu_output_status.vendor
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_gpu_output_status.vendor
                            description: ''
                      description: The vendor of the GPU.
                      serializedName: vendor
                      extensions: {}
                      details:
                        csharp:
                          name: Vendor
                          description: The vendor of the GPU.
                          required: false
                        default:
                          name: vendor
                          description: The vendor of the GPU.
                          required: false
                  readOnly: false
                  required: []
                  title: Virtual Machine GPU status
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: VmGpuOutputStatus
                      description: >-
                        Graphics resource status information for the Virtual
                        Machine.
                      fullname: Sample.API.Models.VmGpuOutputStatus
                      interfaceName: IVmGpuOutputStatus
                      namespace: Sample.API.Models
                    default:
                      name: vm_gpu_output_status
                      description: >-
                        Graphics resource status information for the Virtual
                        Machine.
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.gpu_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.gpu_list
                    description: ''
              description: GPUs attached to the VM.
              serializedName: gpu_list
              extensions: {}
              details:
                csharp:
                  name: GpuList
                  description: GPUs attached to the VM.
                  required: false
                default:
                  name: gpu_list
                  description: GPUs attached to the VM.
                  required: false
            guest_customization:
              schema: *ref_19
              description: >
                VM guests may be customized at boot time using one of several
                different methods. Currently, cloud-init w/ ConfigDriveV2 (for
                Linux VMs) and Sysprep (for Windows VMs) are supported. Only ONE
                OF sysprep or cloud_init should be provided. Note that guest
                customization can currently only be set during VM creation.
                Attempting to change it after creation will result in an error.
                Additional properties can be specified. For example - in the
                context of VM template creation if "override_script" is set to
                "True" then the deployer can upload their own custom script.
              serializedName: guest_customization
              extensions: {}
              details:
                csharp:
                  name: GuestCustomization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
                default:
                  name: guest_customization
                  description: >
                    VM guests may be customized at boot time using one of
                    several different methods. Currently, cloud-init w/
                    ConfigDriveV2 (for Linux VMs) and Sysprep (for Windows VMs)
                    are supported. Only ONE OF sysprep or cloud_init should be
                    provided. Note that guest customization can currently only
                    be set during VM creation. Attempting to change it after
                    creation will result in an error. Additional properties can
                    be specified. For example - in the context of VM template
                    creation if "override_script" is set to "True" then the
                    deployer can upload their own custom script.
                  required: false
            guest_os_id:
              schema: &ref_234
                type: string
                description: >
                  Guest OS Identifier. For ESX, refer to VMware documentation
                  link
                  (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                  for the list of guest OS identifiers.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.guest_os_id
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.guest_os_id
                    description: ''
              description: >
                Guest OS Identifier. For ESX, refer to VMware documentation link
                (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                for the list of guest OS identifiers.
              serializedName: guest_os_id
              extensions: {}
              details:
                csharp:
                  name: GuestOsId
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
                default:
                  name: guest_os_id
                  description: >
                    Guest OS Identifier. For ESX, refer to VMware documentation
                    link
                    (https://www.vmware.com/support/developer/converter-sdk/conv43_apireference/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html)
                    for the list of guest OS identifiers.
                  required: false
            guest_tools:
              schema: *ref_20
              description: Information regarding guest tools.
              serializedName: guest_tools
              extensions: {}
              details:
                csharp:
                  name: GuestTools
                  description: Information regarding guest tools.
                  required: false
                default:
                  name: guest_tools
                  description: Information regarding guest tools.
                  required: false
            hardware_clock_timezone:
              schema: &ref_235
                type: string
                description: >
                  VM's hardware clock timezone in IANA TZDB format
                  (America/Los_Angeles).
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.hardware_clock_timezone
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.hardware_clock_timezone
                    description: ''
              description: >
                VM's hardware clock timezone in IANA TZDB format
                (America/Los_Angeles).
              serializedName: hardware_clock_timezone
              extensions: {}
              details:
                csharp:
                  name: HardwareClockTimezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
                default:
                  name: hardware_clock_timezone
                  description: >
                    VM's hardware clock timezone in IANA TZDB format
                    (America/Los_Angeles).
                  required: false
            host_reference:
              schema: *ref_9
              description: Reference to a kind
              serializedName: host_reference
              extensions: {}
              details:
                csharp:
                  name: HostReference
                  description: Reference to a kind
                  required: false
                default:
                  name: host_reference
                  description: Reference to a kind
                  required: false
            hypervisor_type:
              schema: &ref_236
                type: string
                description: |
                  The hypervisor type for the hypervisor the VM is hosted on.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ESX
                    - HyperV
                    - AHV
                details:
                  csharp:
                    name: .vm_resources_def_status.hypervisor_type
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.hypervisor_type
                    description: ''
              description: |
                The hypervisor type for the hypervisor the VM is hosted on.
              serializedName: hypervisor_type
              extensions: {}
              details:
                csharp:
                  name: HypervisorType
                  description: |
                    The hypervisor type for the hypervisor the VM is hosted on.
                  required: false
                default:
                  name: hypervisor_type
                  description: |
                    The hypervisor type for the hypervisor the VM is hosted on.
                  required: false
            memory_size_mib:
              schema: &ref_237
                type: integer
                format: int32
                description: Memory size in MiB.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.memory_size_mib
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.memory_size_mib
                    description: ''
              description: Memory size in MiB.
              serializedName: memory_size_mib
              extensions: {}
              details:
                csharp:
                  name: MemorySizeMib
                  description: Memory size in MiB.
                  required: false
                default:
                  name: memory_size_mib
                  description: Memory size in MiB.
                  required: false
            nic_list:
              schema: &ref_238
                type: array
                description: NICs attached to the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                items: &ref_35
                  type: object
                  description: Virtual Machine NIC Status.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties:
                    floating_ip:
                      schema: &ref_166
                        type: string
                        description: The Floating IP associated with the vnic.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: >-
                          ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic_output_status.floating_ip
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.floating_ip
                            description: ''
                      description: The Floating IP associated with the vnic.
                      serializedName: floating_ip
                      extensions: {}
                      details:
                        csharp:
                          name: FloatingIp
                          description: The Floating IP associated with the vnic.
                          required: false
                        default:
                          name: floating_ip
                          description: The Floating IP associated with the vnic.
                          required: false
                    ip_endpoint_list:
                      schema: &ref_167
                        type: array
                        description: >
                          IP endpoints for the adapter. Currently, IPv4
                          addresses are supported.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        items: *ref_12
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic_output_status.ip_endpoint_list
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.ip_endpoint_list
                            description: ''
                      description: >
                        IP endpoints for the adapter. Currently, IPv4 addresses
                        are supported.
                      serializedName: ip_endpoint_list
                      extensions: {}
                      details:
                        csharp:
                          name: IpEndpointList
                          description: >
                            IP endpoints for the adapter. Currently, IPv4
                            addresses are supported.
                          required: false
                        default:
                          name: ip_endpoint_list
                          description: >
                            IP endpoints for the adapter. Currently, IPv4
                            addresses are supported.
                          required: false
                    mac_address:
                      schema: &ref_168
                        type: string
                        description: The MAC address for the adapter.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic_output_status.mac_address
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.mac_address
                            description: ''
                      description: The MAC address for the adapter.
                      serializedName: mac_address
                      extensions: {}
                      details:
                        csharp:
                          name: MacAddress
                          description: The MAC address for the adapter.
                          required: false
                        default:
                          name: mac_address
                          description: The MAC address for the adapter.
                          required: false
                    model:
                      schema: &ref_169
                        type: string
                        description: The model of this NIC.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - VIRTIO
                            - E1000
                        details:
                          csharp:
                            name: .vm_nic_output_status.model
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.model
                            description: ''
                      description: The model of this NIC.
                      serializedName: model
                      extensions: {}
                      details:
                        csharp:
                          name: Model
                          description: The model of this NIC.
                          required: false
                        default:
                          name: model
                          description: The model of this NIC.
                          required: false
                    network_function_chain_reference:
                      schema: *ref_13
                      description: The reference to a network_function_chain
                      serializedName: network_function_chain_reference
                      extensions: {}
                      details:
                        csharp:
                          name: NetworkFunctionChainReference
                          description: The reference to a network_function_chain
                          required: false
                        default:
                          name: network_function_chain_reference
                          description: The reference to a network_function_chain
                          required: false
                    network_function_nic_type:
                      schema: &ref_170
                        type: string
                        description: >
                          The type of this Network function NIC. Defaults to
                          INGRESS.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - INGRESS
                            - EGRESS
                            - TAP
                        details:
                          csharp:
                            name: .vm_nic_output_status.network_function_nic_type
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.network_function_nic_type
                            description: ''
                      description: >
                        The type of this Network function NIC. Defaults to
                        INGRESS.
                      serializedName: network_function_nic_type
                      extensions: {}
                      details:
                        csharp:
                          name: NetworkFunctionNicType
                          description: >
                            The type of this Network function NIC. Defaults to
                            INGRESS.
                          required: false
                        default:
                          name: network_function_nic_type
                          description: >
                            The type of this Network function NIC. Defaults to
                            INGRESS.
                          required: false
                    nic_type:
                      schema: &ref_171
                        type: string
                        description: The type of this NIC. Defaults to NORMAL_NIC.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions:
                          x-ntnx-enum:
                            - NORMAL_NIC
                            - DIRECT_NIC
                            - NETWORK_FUNCTION_NIC
                        details:
                          csharp:
                            name: .vm_nic_output_status.nic_type
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.nic_type
                            description: ''
                      description: The type of this NIC. Defaults to NORMAL_NIC.
                      serializedName: nic_type
                      extensions: {}
                      details:
                        csharp:
                          name: NicType
                          description: The type of this NIC. Defaults to NORMAL_NIC.
                          required: false
                        default:
                          name: nic_type
                          description: The type of this NIC. Defaults to NORMAL_NIC.
                          required: false
                    subnet_reference:
                      schema: *ref_14
                      description: The reference to a subnet
                      serializedName: subnet_reference
                      extensions: {}
                      details:
                        csharp:
                          name: SubnetReference
                          description: The reference to a subnet
                          required: false
                        default:
                          name: subnet_reference
                          description: The reference to a subnet
                          required: false
                    uuid:
                      schema: &ref_172
                        type: string
                        format: UUID
                        description: >
                          The NIC's UUID, which is used to uniquely identify
                          this particular NIC. This UUID may be used to refer to
                          the NIC outside the context of the particular VM it is
                          attached to.
                        allOf: []
                        anyOf: []
                        deprecated: false
                        enum: []
                        nullable: false
                        oneOf: []
                        pattern: >-
                          ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                        properties: {}
                        readOnly: false
                        required: []
                        writeOnly: false
                        extensions: {}
                        details:
                          csharp:
                            name: .vm_nic_output_status.uuid
                            description: ''
                            fullname: <INVALID>
                            interfaceName: <INVALID>
                            namespace: <INVALID>
                          default:
                            name: .vm_nic_output_status.uuid
                            description: ''
                      description: >
                        The NIC's UUID, which is used to uniquely identify this
                        particular NIC. This UUID may be used to refer to the
                        NIC outside the context of the particular VM it is
                        attached to.
                      serializedName: uuid
                      extensions: {}
                      details:
                        csharp:
                          name: Uuid
                          description: >
                            The NIC's UUID, which is used to uniquely identify
                            this particular NIC. This UUID may be used to refer
                            to the NIC outside the context of the particular VM
                            it is attached to.
                          required: false
                        default:
                          name: uuid
                          description: >
                            The NIC's UUID, which is used to uniquely identify
                            this particular NIC. This UUID may be used to refer
                            to the NIC outside the context of the particular VM
                            it is attached to.
                          required: false
                  readOnly: false
                  required: []
                  title: Virtual Machine NIC Status
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: VmNicOutputStatus
                      description: Virtual Machine NIC Status.
                      fullname: Sample.API.Models.VmNicOutputStatus
                      interfaceName: IVmNicOutputStatus
                      namespace: Sample.API.Models
                    default:
                      name: vm_nic_output_status
                      description: Virtual Machine NIC Status.
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.nic_list
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.nic_list
                    description: ''
              description: NICs attached to the VM.
              serializedName: nic_list
              extensions: {}
              details:
                csharp:
                  name: NicList
                  description: NICs attached to the VM.
                  required: false
                default:
                  name: nic_list
                  description: NICs attached to the VM.
                  required: false
            num_sockets:
              schema: &ref_239
                type: integer
                format: int32
                description: Number of vCPU sockets.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.num_sockets
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.num_sockets
                    description: ''
              description: Number of vCPU sockets.
              serializedName: num_sockets
              extensions: {}
              details:
                csharp:
                  name: NumSockets
                  description: Number of vCPU sockets.
                  required: false
                default:
                  name: num_sockets
                  description: Number of vCPU sockets.
                  required: false
            num_vcpus_per_socket:
              schema: &ref_240
                type: integer
                format: int32
                description: Number of vCPUs per socket.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.num_vcpus_per_socket
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.num_vcpus_per_socket
                    description: ''
              description: Number of vCPUs per socket.
              serializedName: num_vcpus_per_socket
              extensions: {}
              details:
                csharp:
                  name: NumVcpusPerSocket
                  description: Number of vCPUs per socket.
                  required: false
                default:
                  name: num_vcpus_per_socket
                  description: Number of vCPUs per socket.
                  required: false
            parent_reference:
              schema: *ref_9
              description: |
                Reference to an entity that the VM cloned from.
              serializedName: parent_reference
              extensions: {}
              details:
                csharp:
                  name: ParentReference
                  description: |
                    Reference to an entity that the VM cloned from.
                  required: false
                default:
                  name: parent_reference
                  description: |
                    Reference to an entity that the VM cloned from.
                  required: false
            power_state:
              schema: &ref_241
                type: string
                description: Current power state of the VM.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - 'ON'
                    - 'OFF'
                    - PAUSED
                    - UNKNOWN
                details:
                  csharp:
                    name: .vm_resources_def_status.power_state
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.power_state
                    description: ''
              description: Current power state of the VM.
              serializedName: power_state
              extensions: {}
              details:
                csharp:
                  name: PowerState
                  description: Current power state of the VM.
                  required: false
                default:
                  name: power_state
                  description: Current power state of the VM.
                  required: false
            power_state_mechanism:
              schema: *ref_21
              description: >
                Indicates the mechanism guiding the VM power state transition.
                Currently used for the transition to "OFF" state.
              serializedName: power_state_mechanism
              extensions: {}
              details:
                csharp:
                  name: PowerStateMechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
                default:
                  name: power_state_mechanism
                  description: >
                    Indicates the mechanism guiding the VM power state
                    transition. Currently used for the transition to "OFF"
                    state.
                  required: false
            vga_console_enabled:
              schema: &ref_242
                type: boolean
                description: Indicates whether VGA console has been enabled or not.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_resources_def_status.vga_console_enabled
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_resources_def_status.vga_console_enabled
                    description: ''
              description: Indicates whether VGA console has been enabled or not.
              serializedName: vga_console_enabled
              extensions: {}
              details:
                csharp:
                  name: VgaConsoleEnabled
                  description: Indicates whether VGA console has been enabled or not.
                  required: false
                default:
                  name: vga_console_enabled
                  description: Indicates whether VGA console has been enabled or not.
                  required: false
            vnuma_config:
              schema: *ref_22
              description: Information regarding vNUMA configuration.
              serializedName: vnuma_config
              extensions: {}
              details:
                csharp:
                  name: VnumaConfig
                  description: Information regarding vNUMA configuration.
                  required: false
                default:
                  name: vnuma_config
                  description: Information regarding vNUMA configuration.
                  required: false
          readOnly: false
          required: []
          title: VM Resources Status Definition
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmResourcesDefStatus
              description: VM Resources Status Definition.
              fullname: Sample.API.Models.VmResourcesDefStatus
              interfaceName: IVmResourcesDefStatus
              namespace: Sample.API.Models
            default:
              name: vm_resources_def_status
              description: VM Resources Status Definition.
        description: VM Resources Status Definition.
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: VM Resources Status Definition.
            required: true
          default:
            name: resources
            description: VM Resources Status Definition.
            required: true
      state:
        schema: &ref_114
          type: string
          description: The state of the vm.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_def_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_def_status.state
              description: ''
        description: The state of the vm.
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: The state of the vm.
            required: false
          default:
            name: state
            description: The state of the vm.
            required: false
    readOnly: false
    required:
      - name
      - resources
    title: vm Intent Status with placement specified
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmDefStatus
        description: An intentful representation of a vm status
        fullname: Sample.API.Models.VmDefStatus
        interfaceName: IVmDefStatus
        namespace: Sample.API.Models
      default:
        name: vm_def_status
        description: An intentful representation of a vm status
  vm_disk: *ref_18
  vm_gpu: *ref_23
  vm_gpu_output_status: *ref_24
  vm_guest_power_state_transition_config: *ref_25
  vm_intent_input: &ref_302
    type: object
    description: An intentful representation of a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_135
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_input.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_29
          type: object
          description: The vm kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_156
                type: string
                description: vm name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.name
                    description: ''
              description: vm name
              serializedName: name
              extensions: {}
              details:
                csharp:
                  name: Name
                  description: vm name
                  required: false
                default:
                  name: name
                  description: vm name
                  required: false
            categories:
              schema: &ref_151
                type: object
                description: Categories for the vm
                additionalProperties: &ref_152
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .vm_metadata.categories.additionalItemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .vm_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmMetadataCategories
                    description: Categories for the vm
                    fullname: Sample.API.Models.VmMetadataCategories
                    interfaceName: IVmMetadataCategories
                    namespace: Sample.API.Models
                  default:
                    name: .vm_metadata.categories
                    description: Categories for the vm
              description: Categories for the vm
              serializedName: categories
              extensions: {}
              details:
                csharp:
                  name: Categories
                  description: Categories for the vm
                  required: false
                default:
                  name: categories
                  description: Categories for the vm
                  required: false
            creation_time:
              schema: &ref_153
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when vm was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.creation_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.creation_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when vm was created
              serializedName: creation_time
              extensions: {}
              details:
                csharp:
                  name: CreationTime
                  description: |
                    UTC date and time in RFC-3339 format when vm was created
                  required: false
                default:
                  name: creation_time
                  description: |
                    UTC date and time in RFC-3339 format when vm was created
                  required: false
            kind:
              schema: &ref_154
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm
                details:
                  csharp:
                    name: .vm_metadata.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: true
                default:
                  name: kind
                  description: The kind name
                  required: true
            last_update_time:
              schema: &ref_155
                type: string
                format: date-time
                description: |
                  UTC date and time in RFC-3339 format when vm was last updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.last_update_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.last_update_time
                    description: ''
              description: |
                UTC date and time in RFC-3339 format when vm was last updated
              serializedName: last_update_time
              extensions: {}
              details:
                csharp:
                  name: LastUpdateTime
                  description: >
                    UTC date and time in RFC-3339 format when vm was last
                    updated
                  required: false
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when vm was last
                    updated
                  required: false
            owner_reference:
              schema: *ref_26
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                csharp:
                  name: OwnerReference
                  description: The reference to a user
                  required: false
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: *ref_27
              description: The project the vm is in.
              serializedName: project_reference
              extensions: {}
              details:
                csharp:
                  name: ProjectReference
                  description: The project the vm is in.
                  required: false
                default:
                  name: project_reference
                  description: The project the vm is in.
                  required: false
            spec_hash:
              schema: &ref_157
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.spec_hash
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                csharp:
                  name: SpecHash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_158
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.spec_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                csharp:
                  name: SpecVersion
                  description: Version number of the latest spec.
                  required: false
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_159
                type: string
                format: UUID
                description: vm uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_metadata.uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_metadata.uuid
                    description: ''
              description: vm uuid
              serializedName: uuid
              extensions: {}
              details:
                csharp:
                  name: Uuid
                  description: vm uuid
                  required: false
                default:
                  name: uuid
                  description: vm uuid
                  required: false
          readOnly: false
          required:
            - kind
          title: vm metadata
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmMetadata
              description: The vm kind metadata
              fullname: Sample.API.Models.VmMetadata
              interfaceName: IVmMetadata
              namespace: Sample.API.Models
            default:
              name: vm_metadata
              description: The vm kind metadata
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_28
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: true
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: true
    readOnly: false
    required:
      - metadata
      - spec
    title: vm Intent Entity
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentInput
        description: An intentful representation of a vm
        fullname: Sample.API.Models.VmIntentInput
        interfaceName: IVmIntentInput
        namespace: Sample.API.Models
      default:
        name: vm_intent_input
        description: An intentful representation of a vm
  vm_intent_resource: &ref_31
    type: object
    description: Response object for intentful operations on a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_136
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_resource.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_29
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_28
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: false
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: false
      status:
        schema: *ref_30
        description: An intentful representation of a vm status
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: An intentful representation of a vm status
            required: false
          default:
            name: status
            description: An intentful representation of a vm status
            required: false
    readOnly: false
    required:
      - metadata
    title: vm Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentResource
        description: Response object for intentful operations on a vm
        fullname: Sample.API.Models.VmIntentResource
        interfaceName: IVmIntentResource
        namespace: Sample.API.Models
      default:
        name: vm_intent_resource
        description: Response object for intentful operations on a vm
  vm_intent_response: &ref_334
    type: object
    description: Response object for intentful operations on a vm
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_137
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_29
        description: The vm kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm kind metadata
            required: true
          default:
            name: metadata
            description: The vm kind metadata
            required: true
      spec:
        schema: *ref_28
        description: An intentful representation of a vm spec
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: An intentful representation of a vm spec
            required: false
          default:
            name: spec
            description: An intentful representation of a vm spec
            required: false
      status:
        schema: *ref_30
        description: An intentful representation of a vm status
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: An intentful representation of a vm status
            required: false
          default:
            name: status
            description: An intentful representation of a vm status
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: vm Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmIntentResponse
        description: Response object for intentful operations on a vm
        fullname: Sample.API.Models.VmIntentResponse
        interfaceName: IVmIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_intent_response
        description: Response object for intentful operations on a vm
  vm_list_intent_response: &ref_330
    type: object
    description: Response object for intentful operation of vms
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_138
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_139
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_31
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_intent_response.entities
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          csharp:
            name: Entities
            description: ''
            required: false
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_33
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_145
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.filter
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                csharp:
                  name: Filter
                  description: The filter used for the results
                  required: false
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_146
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm
                details:
                  csharp:
                    name: .vm_list_metadata_output.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_147
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.length
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                csharp:
                  name: Length
                  description: The number of records retrieved relative to the offset
                  required: false
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_148
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.offset
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                csharp:
                  name: Offset
                  description: Offset from the start of the entity list
                  required: false
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_149
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.sort_attribute
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                csharp:
                  name: SortAttribute
                  description: The attribute to perform sort on
                  required: false
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: *ref_32
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                csharp:
                  name: SortOrder
                  description: The sort order in which results are returned
                  required: false
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_150
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_list_metadata_output.total_matches
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                csharp:
                  name: TotalMatches
                  description: Total matches found
                  required: false
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for vm list output
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmListMetadataOutput
              description: |
                All api calls that return a list will have this metadata block
              fullname: Sample.API.Models.VmListMetadataOutput
              interfaceName: IVmListMetadataOutput
              namespace: Sample.API.Models
            default:
              name: vm_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmListIntentResponse
        description: Response object for intentful operation of vms
        fullname: Sample.API.Models.VmListIntentResponse
        interfaceName: IVmListIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_list_intent_response
        description: Response object for intentful operation of vms
  vm_list_metadata: &ref_307
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_140
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.filter
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          csharp:
            name: Filter
            description: The filter in FIQL syntax used for the results.
            required: false
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_141
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm
          details:
            csharp:
              name: .vm_list_metadata.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_142
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.length
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          csharp:
            name: Length
            description: The number of records to retrieve relative to the offset
            required: false
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_143
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.offset
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          csharp:
            name: Offset
            description: Offset from the start of the entity list
            required: false
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_144
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_list_metadata.sort_attribute
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          csharp:
            name: SortAttribute
            description: The attribute to perform sort on
            required: false
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_32
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          csharp:
            name: SortOrder
            description: The sort order in which results are returned
            required: false
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for vm list
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmListMetadata
        description: >
          All api calls that return a list will have this metadata block as
          input
        fullname: Sample.API.Models.VmListMetadata
        interfaceName: IVmListMetadata
        namespace: Sample.API.Models
      default:
        name: vm_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  vm_list_metadata_output: *ref_33
  vm_metadata: *ref_29
  vm_nic: *ref_34
  vm_nic_output_status: *ref_35
  vm_power_state_mechanism: *ref_21
  vm_recovery_point: &ref_37
    type: object
    description: The input object that defines a vm recovery point.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_176
          type: string
          description: Name of the recovery point.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point.name
              description: ''
        description: Name of the recovery point.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the recovery point.
            required: false
          default:
            name: name
            description: Name of the recovery point.
            required: false
      availability_zone_reference:
        schema: *ref_6
        description: |
          Reference to the availability zone where this recovery point is
          located
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: |
              Reference to the availability zone where this recovery point is
              located
            required: false
          default:
            name: availability_zone_reference
            description: |
              Reference to the availability zone where this recovery point is
              located
            required: false
      cluster_reference:
        schema: *ref_7
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: >
              Reference to the cluster in the availability zone where this
              recovery

              point is located.
            required: false
          default:
            name: cluster_reference
            description: >
              Reference to the cluster in the availability zone where this
              recovery

              point is located.
            required: false
      creation_time:
        schema: &ref_174
          type: string
          format: date-time
          description: |
            The time when the the recovery point is created. This is in internet
            date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
            this represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point.creation_time
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point.creation_time
              description: ''
        description: |
          The time when the the recovery point is created. This is in internet
          date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
          this represents 20 minutes and 50.52 seconds after the 23rd hour of
          April 12th, 1985 in UTC.
        serializedName: creation_time
        extensions: {}
        details:
          csharp:
            name: CreationTime
            description: >
              The time when the the recovery point is created. This is in
              internet

              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,

              this represents 20 minutes and 50.52 seconds after the 23rd hour
              of

              April 12th, 1985 in UTC.
            required: false
          default:
            name: creation_time
            description: >
              The time when the the recovery point is created. This is in
              internet

              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,

              this represents 20 minutes and 50.52 seconds after the 23rd hour
              of

              April 12th, 1985 in UTC.
            required: false
      expiration_time:
        schema: &ref_175
          type: string
          format: date-time
          description: |
            The time when this recovery point expires and will be garbage
            collected. This is in internet date/time format (RFC 3339). For
            example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
            50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
            set, then the recovery point never expires.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point.expiration_time
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point.expiration_time
              description: ''
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). For
          example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
          50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
          set, then the recovery point never expires.
        serializedName: expiration_time
        extensions: {}
        details:
          csharp:
            name: ExpirationTime
            description: >
              The time when this recovery point expires and will be garbage

              collected. This is in internet date/time format (RFC 3339). For

              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and

              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If
              not

              set, then the recovery point never expires.
            required: false
          default:
            name: expiration_time
            description: >
              The time when this recovery point expires and will be garbage

              collected. This is in internet date/time format (RFC 3339). For

              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and

              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If
              not

              set, then the recovery point never expires.
            required: false
      recovery_point_type:
        schema: &ref_177
          type: string
          description: Crash consistent or Application Consistent recovery point
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
          details:
            csharp:
              name: .vm_recovery_point.recovery_point_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point.recovery_point_type
              description: ''
        description: Crash consistent or Application Consistent recovery point
        serializedName: recovery_point_type
        extensions: {}
        details:
          csharp:
            name: RecoveryPointType
            description: Crash consistent or Application Consistent recovery point
            required: false
          default:
            name: recovery_point_type
            description: Crash consistent or Application Consistent recovery point
            required: false
      resources:
        schema: &ref_178
          type: object
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            parent_vm_reference:
              schema: &ref_36
                type: object
                description: The reference to a vm
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_220
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_reference.name
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      csharp:
                        name: Name
                        description: ''
                        required: false
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_219
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: vm
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - vm
                      details:
                        csharp:
                          name: .vm_reference.kind
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      csharp:
                        name: Kind
                        description: The kind name
                        required: true
                      default:
                        name: kind
                        description: The kind name
                        required: true
                  uuid:
                    schema: &ref_221
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        csharp:
                          name: .vm_reference.uuid
                          description: ''
                          fullname: <INVALID>
                          interfaceName: <INVALID>
                          namespace: <INVALID>
                        default:
                          name: .vm_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      csharp:
                        name: Uuid
                        description: ''
                        required: true
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - kind
                  - uuid
                title: Reference to a vm
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmReference
                    description: The reference to a vm
                    fullname: Sample.API.Models.VmReference
                    interfaceName: IVmReference
                    namespace: Sample.API.Models
                  default:
                    name: vm_reference
                    description: The reference to a vm
              description: |
                Reference to vm that this recovery point is a snapshot of.
              serializedName: parent_vm_reference
              extensions: {}
              details:
                csharp:
                  name: ParentVmReference
                  description: |
                    Reference to vm that this recovery point is a snapshot of.
                  required: false
                default:
                  name: parent_vm_reference
                  description: |
                    Reference to vm that this recovery point is a snapshot of.
                  required: false
            source_availability_zone_reference:
              schema: *ref_6
              description: |
                Reference to the availability zone where the source recovery
                point exists. This need to be set to copy a recovery from some
                other location.
              serializedName: source_availability_zone_reference
              extensions: {}
              details:
                csharp:
                  name: SourceAvailabilityZoneReference
                  description: >
                    Reference to the availability zone where the source recovery

                    point exists. This need to be set to copy a recovery from
                    some

                    other location.
                  required: false
                default:
                  name: source_availability_zone_reference
                  description: >
                    Reference to the availability zone where the source recovery

                    point exists. This need to be set to copy a recovery from
                    some

                    other location.
                  required: false
            source_cluster_reference:
              schema: *ref_7
              description: |
                Reference to the cluster in the source availability zone.
              serializedName: source_cluster_reference
              extensions: {}
              details:
                csharp:
                  name: SourceClusterReference
                  description: |
                    Reference to the cluster in the source availability zone.
                  required: false
                default:
                  name: source_cluster_reference
                  description: |
                    Reference to the cluster in the source availability zone.
                  required: false
            vm_recovery_point_location_agnostic_uuid:
              schema: &ref_179
                type: string
                description: |
                  Location agnostic UUID of the recovery point. If a recovery
                  point is replicated to a different clusters, then all the
                  instances of same recovery point will share this UUID.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: >-
                      .vm_recovery_point.resources.vm_recovery_point_location_agnostic_uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: >-
                      .vm_recovery_point.resources.vm_recovery_point_location_agnostic_uuid
                    description: ''
              description: |
                Location agnostic UUID of the recovery point. If a recovery
                point is replicated to a different clusters, then all the
                instances of same recovery point will share this UUID.
              serializedName: vm_recovery_point_location_agnostic_uuid
              extensions: {}
              details:
                csharp:
                  name: VmRecoveryPointLocationAgnosticUuid
                  description: |
                    Location agnostic UUID of the recovery point. If a recovery
                    point is replicated to a different clusters, then all the
                    instances of same recovery point will share this UUID.
                  required: false
                default:
                  name: vm_recovery_point_location_agnostic_uuid
                  description: |
                    Location agnostic UUID of the recovery point. If a recovery
                    point is replicated to a different clusters, then all the
                    instances of same recovery point will share this UUID.
                  required: false
          readOnly: false
          required: []
          title: Recovery point resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmRecoveryPointResources
              description: Recovery point resources
              fullname: Sample.API.Models.VmRecoveryPointResources
              interfaceName: IVmRecoveryPointResources
              namespace: Sample.API.Models
            default:
              name: .vm_recovery_point.resources
              description: Recovery point resources
        description: Recovery point resources
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: Recovery point resources
            required: false
          default:
            name: resources
            description: Recovery point resources
            required: false
    readOnly: false
    required: []
    title: vm recovery point input definitions
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPoint
        description: The input object that defines a vm recovery point.
        fullname: Sample.API.Models.VmRecoveryPoint
        interfaceName: IVmRecoveryPoint
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point
        description: The input object that defines a vm recovery point.
  vm_recovery_point_def_status: &ref_39
    type: object
    description: The output object that defines a vm recovery point
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_184
          type: string
          description: Name of the recovery point.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.name
              description: ''
        description: Name of the recovery point.
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the recovery point.
            required: false
          default:
            name: name
            description: Name of the recovery point.
            required: false
      availability_zone_reference:
        schema: *ref_6
        description: |
          Reference to the availability zone where this recovery point is
          located.
        serializedName: availability_zone_reference
        extensions: {}
        details:
          csharp:
            name: AvailabilityZoneReference
            description: |
              Reference to the availability zone where this recovery point is
              located.
            required: false
          default:
            name: availability_zone_reference
            description: |
              Reference to the availability zone where this recovery point is
              located.
            required: false
      cluster_reference:
        schema: *ref_7
        description: |
          Reference to the cluster in the availability zone where this recovery
          point is located.
        serializedName: cluster_reference
        extensions: {}
        details:
          csharp:
            name: ClusterReference
            description: >
              Reference to the cluster in the availability zone where this
              recovery

              point is located.
            required: false
          default:
            name: cluster_reference
            description: >
              Reference to the cluster in the availability zone where this
              recovery

              point is located.
            required: false
      consistency_group_uuid:
        schema: &ref_180
          type: string
          description: |
            This field is same for all the entities (irrespective of kind) that
            were snapshotted together.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.consistency_group_uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.consistency_group_uuid
              description: ''
        description: |
          This field is same for all the entities (irrespective of kind) that
          were snapshotted together.
        serializedName: consistency_group_uuid
        extensions: {}
        details:
          csharp:
            name: ConsistencyGroupUuid
            description: >
              This field is same for all the entities (irrespective of kind)
              that

              were snapshotted together.
            required: false
          default:
            name: consistency_group_uuid
            description: >
              This field is same for all the entities (irrespective of kind)
              that

              were snapshotted together.
            required: false
      creation_time:
        schema: &ref_181
          type: string
          description: |
            The time when the the recovery point is created. This is in internet
            date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
            this represents 20 minutes and 50.52 seconds after the 23rd hour of
            April 12th, 1985 in UTC.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.creation_time
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.creation_time
              description: ''
        description: |
          The time when the the recovery point is created. This is in internet
          date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,
          this represents 20 minutes and 50.52 seconds after the 23rd hour of
          April 12th, 1985 in UTC.
        serializedName: creation_time
        extensions: {}
        details:
          csharp:
            name: CreationTime
            description: >
              The time when the the recovery point is created. This is in
              internet

              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,

              this represents 20 minutes and 50.52 seconds after the 23rd hour
              of

              April 12th, 1985 in UTC.
            required: false
          default:
            name: creation_time
            description: >
              The time when the the recovery point is created. This is in
              internet

              date/time format (RFC 3339). For example, 1985-04-12T23:20:50.52Z,

              this represents 20 minutes and 50.52 seconds after the 23rd hour
              of

              April 12th, 1985 in UTC.
            required: false
      expiration_time:
        schema: &ref_182
          type: string
          description: |
            The time when this recovery point expires and will be garbage
            collected. This is in internet date/time format (RFC 3339). For
            example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
            50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
            set, then the recovery point never expires.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.expiration_time
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.expiration_time
              description: ''
        description: |
          The time when this recovery point expires and will be garbage
          collected. This is in internet date/time format (RFC 3339). For
          example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and
          50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If not
          set, then the recovery point never expires.
        serializedName: expiration_time
        extensions: {}
        details:
          csharp:
            name: ExpirationTime
            description: >
              The time when this recovery point expires and will be garbage

              collected. This is in internet date/time format (RFC 3339). For

              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and

              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If
              not

              set, then the recovery point never expires.
            required: false
          default:
            name: expiration_time
            description: >
              The time when this recovery point expires and will be garbage

              collected. This is in internet date/time format (RFC 3339). For

              example, 1985-04-12T23:20:50.52Z, this represents 20 minutes and

              50.52 seconds after the 23rd hour of April 12th, 1985 in UTC. If
              not

              set, then the recovery point never expires.
            required: false
      message_list:
        schema: &ref_183
          type: array
          description: 'Any error messages for the {kind}}, if in an error state.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.message_list
              description: ''
        description: 'Any error messages for the {kind}}, if in an error state.'
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: 'Any error messages for the {kind}}, if in an error state.'
            required: false
          default:
            name: message_list
            description: 'Any error messages for the {kind}}, if in an error state.'
            required: false
      recovery_point_type:
        schema: &ref_185
          type: string
          description: Crash consistent or Application Consistent recovery point
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
          details:
            csharp:
              name: .vm_recovery_point_def_status.recovery_point_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.recovery_point_type
              description: ''
        description: Crash consistent or Application Consistent recovery point
        serializedName: recovery_point_type
        extensions: {}
        details:
          csharp:
            name: RecoveryPointType
            description: Crash consistent or Application Consistent recovery point
            required: false
          default:
            name: recovery_point_type
            description: Crash consistent or Application Consistent recovery point
            required: false
      resources:
        schema: &ref_186
          type: object
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            parent_vm_reference:
              schema: *ref_36
              description: |
                Reference to vm that this recovery point is a snapshot of.
              serializedName: parent_vm_reference
              extensions: {}
              details:
                csharp:
                  name: ParentVmReference
                  description: |
                    Reference to vm that this recovery point is a snapshot of.
                  required: false
                default:
                  name: parent_vm_reference
                  description: |
                    Reference to vm that this recovery point is a snapshot of.
                  required: false
            source_availability_zone_reference:
              schema: *ref_6
              description: |
                Reference to the availability zone where the source recovery
                point exists. This need to be set to copy a recovery from some
                other location.
              serializedName: source_availability_zone_reference
              extensions: {}
              details:
                csharp:
                  name: SourceAvailabilityZoneReference
                  description: >
                    Reference to the availability zone where the source recovery

                    point exists. This need to be set to copy a recovery from
                    some

                    other location.
                  required: false
                default:
                  name: source_availability_zone_reference
                  description: >
                    Reference to the availability zone where the source recovery

                    point exists. This need to be set to copy a recovery from
                    some

                    other location.
                  required: false
            source_cluster_reference:
              schema: *ref_7
              description: |
                Reference to the cluster in the source availability zone. This
                need to be set to copy a recovery from some other location.
              serializedName: source_cluster_reference
              extensions: {}
              details:
                csharp:
                  name: SourceClusterReference
                  description: >
                    Reference to the cluster in the source availability zone.
                    This

                    need to be set to copy a recovery from some other location.
                  required: false
                default:
                  name: source_cluster_reference
                  description: >
                    Reference to the cluster in the source availability zone.
                    This

                    need to be set to copy a recovery from some other location.
                  required: false
            vm_recovery_point_location_agnostic_uuid:
              schema: &ref_187
                type: string
                format: UUID
                description: |
                  Location agnostic UUID of the recovery point. If a recovery
                  point is replicated to a different clusters, then all the
                  instances of same recovery point will share this UUID.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: >-
                      .vm_recovery_point_def_status.resources.vm_recovery_point_location_agnostic_uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: >-
                      .vm_recovery_point_def_status.resources.vm_recovery_point_location_agnostic_uuid
                    description: ''
              description: |
                Location agnostic UUID of the recovery point. If a recovery
                point is replicated to a different clusters, then all the
                instances of same recovery point will share this UUID.
              serializedName: vm_recovery_point_location_agnostic_uuid
              extensions: {}
              details:
                csharp:
                  name: VmRecoveryPointLocationAgnosticUuid
                  description: |
                    Location agnostic UUID of the recovery point. If a recovery
                    point is replicated to a different clusters, then all the
                    instances of same recovery point will share this UUID.
                  required: false
                default:
                  name: vm_recovery_point_location_agnostic_uuid
                  description: |
                    Location agnostic UUID of the recovery point. If a recovery
                    point is replicated to a different clusters, then all the
                    instances of same recovery point will share this UUID.
                  required: false
            vm_spec:
              schema: *ref_28
              description: |
                Spec of the vm at the time of snapshot.
              serializedName: vm_spec
              extensions: {}
              details:
                csharp:
                  name: VmSpec
                  description: |
                    Spec of the vm at the time of snapshot.
                  required: false
                default:
                  name: vm_spec
                  description: |
                    Spec of the vm at the time of snapshot.
                  required: false
          readOnly: false
          required: []
          title: Recovery point resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmRecoveryPointDefStatusResources
              description: Recovery point resources
              fullname: Sample.API.Models.VmRecoveryPointDefStatusResources
              interfaceName: IVmRecoveryPointDefStatusResources
              namespace: Sample.API.Models
            default:
              name: .vm_recovery_point_def_status.resources
              description: Recovery point resources
        description: Recovery point resources
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: Recovery point resources
            required: false
          default:
            name: resources
            description: Recovery point resources
            required: false
      state:
        schema: &ref_188
          type: string
          description: The state of the vm recovery point.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_def_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_def_status.state
              description: ''
        description: The state of the vm recovery point.
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: The state of the vm recovery point.
            required: false
          default:
            name: state
            description: The state of the vm recovery point.
            required: false
    readOnly: false
    required: []
    title: vm recovery point output definitions
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointDefStatus
        description: The output object that defines a vm recovery point
        fullname: Sample.API.Models.VmRecoveryPointDefStatus
        interfaceName: IVmRecoveryPointDefStatus
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_def_status
        description: The output object that defines a vm recovery point
  vm_recovery_point_intent_input: &ref_303
    type: object
    description: An intentful representation of a vm_recovery_point
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_189
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_intent_input.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_38
          type: object
          description: The vm_recovery_point kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_210
                type: string
                description: vm_recovery_point name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.name
                    description: ''
              description: vm_recovery_point name
              serializedName: name
              extensions: {}
              details:
                csharp:
                  name: Name
                  description: vm_recovery_point name
                  required: false
                default:
                  name: name
                  description: vm_recovery_point name
                  required: false
            categories:
              schema: &ref_205
                type: object
                description: Categories for the vm_recovery_point
                additionalProperties: &ref_206
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: >-
                        .vm_recovery_point_metadata.categories.additionalItemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: >-
                        .vm_recovery_point_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmRecoveryPointMetadataCategories
                    description: Categories for the vm_recovery_point
                    fullname: Sample.API.Models.VmRecoveryPointMetadataCategories
                    interfaceName: IVmRecoveryPointMetadataCategories
                    namespace: Sample.API.Models
                  default:
                    name: .vm_recovery_point_metadata.categories
                    description: Categories for the vm_recovery_point
              description: Categories for the vm_recovery_point
              serializedName: categories
              extensions: {}
              details:
                csharp:
                  name: Categories
                  description: Categories for the vm_recovery_point
                  required: false
                default:
                  name: categories
                  description: Categories for the vm_recovery_point
                  required: false
            creation_time:
              schema: &ref_207
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when vm_recovery_point
                  was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.creation_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.creation_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when vm_recovery_point was
                created
              serializedName: creation_time
              extensions: {}
              details:
                csharp:
                  name: CreationTime
                  description: >
                    UTC date and time in RFC-3339 format when vm_recovery_point
                    was created
                  required: false
                default:
                  name: creation_time
                  description: >
                    UTC date and time in RFC-3339 format when vm_recovery_point
                    was created
                  required: false
            kind:
              schema: &ref_208
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm_recovery_point
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm_recovery_point
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: true
                default:
                  name: kind
                  description: The kind name
                  required: true
            last_update_time:
              schema: &ref_209
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when vm_recovery_point
                  was last updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.last_update_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.last_update_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when vm_recovery_point was
                last updated
              serializedName: last_update_time
              extensions: {}
              details:
                csharp:
                  name: LastUpdateTime
                  description: >
                    UTC date and time in RFC-3339 format when vm_recovery_point
                    was last updated
                  required: false
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when vm_recovery_point
                    was last updated
                  required: false
            owner_reference:
              schema: *ref_26
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                csharp:
                  name: OwnerReference
                  description: The reference to a user
                  required: false
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: *ref_27
              description: The project the vm_recovery_point is in.
              serializedName: project_reference
              extensions: {}
              details:
                csharp:
                  name: ProjectReference
                  description: The project the vm_recovery_point is in.
                  required: false
                default:
                  name: project_reference
                  description: The project the vm_recovery_point is in.
                  required: false
            spec_hash:
              schema: &ref_211
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.spec_hash
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                csharp:
                  name: SpecHash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_212
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.spec_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                csharp:
                  name: SpecVersion
                  description: Version number of the latest spec.
                  required: false
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_213
                type: string
                format: UUID
                description: vm_recovery_point uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_metadata.uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_metadata.uuid
                    description: ''
              description: vm_recovery_point uuid
              serializedName: uuid
              extensions: {}
              details:
                csharp:
                  name: Uuid
                  description: vm_recovery_point uuid
                  required: false
                default:
                  name: uuid
                  description: vm_recovery_point uuid
                  required: false
          readOnly: false
          required:
            - kind
          title: vm_recovery_point metadata
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmRecoveryPointMetadata
              description: The vm_recovery_point kind metadata
              fullname: Sample.API.Models.VmRecoveryPointMetadata
              interfaceName: IVmRecoveryPointMetadata
              namespace: Sample.API.Models
            default:
              name: vm_recovery_point_metadata
              description: The vm_recovery_point kind metadata
        description: The vm_recovery_point kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_recovery_point kind metadata
            required: true
          default:
            name: metadata
            description: The vm_recovery_point kind metadata
            required: true
      spec:
        schema: *ref_37
        description: The input object that defines a vm recovery point.
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a vm recovery point.
            required: true
          default:
            name: spec
            description: The input object that defines a vm recovery point.
            required: true
    readOnly: false
    required:
      - metadata
      - spec
    title: vm_recovery_point Intent Entity
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointIntentInput
        description: An intentful representation of a vm_recovery_point
        fullname: Sample.API.Models.VmRecoveryPointIntentInput
        interfaceName: IVmRecoveryPointIntentInput
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_intent_input
        description: An intentful representation of a vm_recovery_point
  vm_recovery_point_intent_resource: &ref_40
    type: object
    description: Response object for intentful operations on a vm_recovery_point
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_190
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_intent_resource.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_38
        description: The vm_recovery_point kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_recovery_point kind metadata
            required: true
          default:
            name: metadata
            description: The vm_recovery_point kind metadata
            required: true
      spec:
        schema: *ref_37
        description: The input object that defines a vm recovery point.
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a vm recovery point.
            required: false
          default:
            name: spec
            description: The input object that defines a vm recovery point.
            required: false
      status:
        schema: *ref_39
        description: The output object that defines a vm recovery point
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: The output object that defines a vm recovery point
            required: false
          default:
            name: status
            description: The output object that defines a vm recovery point
            required: false
    readOnly: false
    required:
      - metadata
    title: vm_recovery_point Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointIntentResource
        description: Response object for intentful operations on a vm_recovery_point
        fullname: Sample.API.Models.VmRecoveryPointIntentResource
        interfaceName: IVmRecoveryPointIntentResource
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_intent_resource
        description: Response object for intentful operations on a vm_recovery_point
  vm_recovery_point_intent_response: &ref_314
    type: object
    description: Response object for intentful operations on a vm_recovery_point
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_191
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_38
        description: The vm_recovery_point kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_recovery_point kind metadata
            required: true
          default:
            name: metadata
            description: The vm_recovery_point kind metadata
            required: true
      spec:
        schema: *ref_37
        description: The input object that defines a vm recovery point.
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a vm recovery point.
            required: false
          default:
            name: spec
            description: The input object that defines a vm recovery point.
            required: false
      status:
        schema: *ref_39
        description: The output object that defines a vm recovery point
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: The output object that defines a vm recovery point
            required: false
          default:
            name: status
            description: The output object that defines a vm recovery point
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: vm_recovery_point Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointIntentResponse
        description: Response object for intentful operations on a vm_recovery_point
        fullname: Sample.API.Models.VmRecoveryPointIntentResponse
        interfaceName: IVmRecoveryPointIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_intent_response
        description: Response object for intentful operations on a vm_recovery_point
  vm_recovery_point_list_intent_response: &ref_317
    type: object
    description: Response object for intentful operation of vm_recovery_points
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_192
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_193
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_40
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_intent_response.entities
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          csharp:
            name: Entities
            description: ''
            required: false
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_41
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_199
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.filter
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                csharp:
                  name: Filter
                  description: The filter used for the results
                  required: false
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_200
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm_recovery_point
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm_recovery_point
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_201
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.length
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                csharp:
                  name: Length
                  description: The number of records retrieved relative to the offset
                  required: false
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_202
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.offset
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                csharp:
                  name: Offset
                  description: Offset from the start of the entity list
                  required: false
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_203
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.sort_attribute
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                csharp:
                  name: SortAttribute
                  description: The attribute to perform sort on
                  required: false
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: *ref_32
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                csharp:
                  name: SortOrder
                  description: The sort order in which results are returned
                  required: false
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_204
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_recovery_point_list_metadata_output.total_matches
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_recovery_point_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                csharp:
                  name: TotalMatches
                  description: Total matches found
                  required: false
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for vm_recovery_point list output
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmRecoveryPointListMetadataOutput
              description: |
                All api calls that return a list will have this metadata block
              fullname: Sample.API.Models.VmRecoveryPointListMetadataOutput
              interfaceName: IVmRecoveryPointListMetadataOutput
              namespace: Sample.API.Models
            default:
              name: vm_recovery_point_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointListIntentResponse
        description: Response object for intentful operation of vm_recovery_points
        fullname: Sample.API.Models.VmRecoveryPointListIntentResponse
        interfaceName: IVmRecoveryPointListIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_list_intent_response
        description: Response object for intentful operation of vm_recovery_points
  vm_recovery_point_list_metadata: &ref_305
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_194
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_metadata.filter
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          csharp:
            name: Filter
            description: The filter in FIQL syntax used for the results.
            required: false
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_195
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm_recovery_point
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm_recovery_point
          details:
            csharp:
              name: .vm_recovery_point_list_metadata.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_196
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_metadata.length
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          csharp:
            name: Length
            description: The number of records to retrieve relative to the offset
            required: false
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_197
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_metadata.offset
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          csharp:
            name: Offset
            description: Offset from the start of the entity list
            required: false
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_198
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_list_metadata.sort_attribute
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          csharp:
            name: SortAttribute
            description: The attribute to perform sort on
            required: false
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_32
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          csharp:
            name: SortOrder
            description: The sort order in which results are returned
            required: false
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for vm_recovery_point list
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointListMetadata
        description: >
          All api calls that return a list will have this metadata block as
          input
        fullname: Sample.API.Models.VmRecoveryPointListMetadata
        interfaceName: IVmRecoveryPointListMetadata
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  vm_recovery_point_list_metadata_output: *ref_41
  vm_recovery_point_metadata: *ref_38
  vm_recovery_point_status: &ref_309
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_214
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_215
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_216
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm_recovery_point
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm_recovery_point
          details:
            csharp:
              name: .vm_recovery_point_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_217
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_218
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_recovery_point_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_recovery_point_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmRecoveryPointStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Sample.API.Models.VmRecoveryPointStatus
        interfaceName: IVmRecoveryPointStatus
        namespace: Sample.API.Models
      default:
        name: vm_recovery_point_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  vm_reference: *ref_36
  vm_resources: *ref_42
  vm_resources_def_status: *ref_43
  vm_snapshot: &ref_44
    type: object
    description: The input object that defines a VM snapshot
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_244
          type: string
          description: Name of the snapshot
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot.name
              description: ''
        description: Name of the snapshot
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the snapshot
            required: false
          default:
            name: name
            description: Name of the snapshot
            required: false
      expiration_time_msecs:
        schema: &ref_243
          type: integer
          description: |
            The time when this snapshot expires and will be garbage collected.
            If not set, then the snapshot never expires.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot.expiration_time_msecs
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot.expiration_time_msecs
              description: ''
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
        serializedName: expiration_time_msecs
        extensions: {}
        details:
          csharp:
            name: ExpirationTimeMsecs
            description: |
              The time when this snapshot expires and will be garbage collected.
              If not set, then the snapshot never expires.
            required: false
          default:
            name: expiration_time_msecs
            description: |
              The time when this snapshot expires and will be garbage collected.
              If not set, then the snapshot never expires.
            required: false
      replication_target_list:
        schema: &ref_245
          type: array
          description: |
            This describes a list replication targets where this snapshot exists
            or needs to be replicated to. This is to support the replication and
            retrieve of the snapshot.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_246
            type: object
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              availability_zone_reference:
                schema: *ref_6
                description: The reference to a availability_zone
                serializedName: availability_zone_reference
                extensions: {}
                details:
                  csharp:
                    name: AvailabilityZoneReference
                    description: The reference to a availability_zone
                    required: false
                  default:
                    name: availability_zone_reference
                    description: The reference to a availability_zone
                    required: false
              cluster_reference:
                schema: *ref_7
                description: UUID of cluster in the availability zone.
                serializedName: cluster_reference
                extensions: {}
                details:
                  csharp:
                    name: ClusterReference
                    description: UUID of cluster in the availability zone.
                    required: false
                  default:
                    name: cluster_reference
                    description: UUID of cluster in the availability zone.
                    required: false
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: VmSnapshotReplicationTargetListItemType
                description: ''
                fullname: Sample.API.Models.VmSnapshotReplicationTargetListItemType
                interfaceName: IVmSnapshotReplicationTargetListItemType
                namespace: Sample.API.Models
              default:
                name: .vm_snapshot.replication_target_list.itemType
                description: ''
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot.replication_target_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot.replication_target_list
              description: ''
        description: |
          This describes a list replication targets where this snapshot exists
          or needs to be replicated to. This is to support the replication and
          retrieve of the snapshot.
        serializedName: replication_target_list
        extensions: {}
        details:
          csharp:
            name: ReplicationTargetList
            description: >
              This describes a list replication targets where this snapshot
              exists

              or needs to be replicated to. This is to support the replication
              and

              retrieve of the snapshot.
            required: false
          default:
            name: replication_target_list
            description: >
              This describes a list replication targets where this snapshot
              exists

              or needs to be replicated to. This is to support the replication
              and

              retrieve of the snapshot.
            required: false
      resources:
        schema: &ref_247
          type: object
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            entity_uuid:
              schema: &ref_248
                type: string
                format: UUID
                description: |
                  UUID of the base entity for which snapshot need to be taken
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot.resources.entity_uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot.resources.entity_uuid
                    description: ''
              description: |
                UUID of the base entity for which snapshot need to be taken
              serializedName: entity_uuid
              extensions: {}
              details:
                csharp:
                  name: EntityUuid
                  description: |
                    UUID of the base entity for which snapshot need to be taken
                  required: false
                default:
                  name: entity_uuid
                  description: |
                    UUID of the base entity for which snapshot need to be taken
                  required: false
          readOnly: false
          required: []
          title: Snapshot Resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmSnapshotResources
              description: Snapshot Resources
              fullname: Sample.API.Models.VmSnapshotResources
              interfaceName: IVmSnapshotResources
              namespace: Sample.API.Models
            default:
              name: .vm_snapshot.resources
              description: Snapshot Resources
        description: Snapshot Resources
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: Snapshot Resources
            required: false
          default:
            name: resources
            description: Snapshot Resources
            required: false
      snapshot_type:
        schema: &ref_249
          type: string
          description: Crash consistent or Application Consistent snapshot
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
          details:
            csharp:
              name: .vm_snapshot.snapshot_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot.snapshot_type
              description: ''
        description: Crash consistent or Application Consistent snapshot
        serializedName: snapshot_type
        extensions: {}
        details:
          csharp:
            name: SnapshotType
            description: Crash consistent or Application Consistent snapshot
            required: false
          default:
            name: snapshot_type
            description: Crash consistent or Application Consistent snapshot
            required: false
    readOnly: false
    required: []
    title: VM snapshot input definitions
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshot
        description: The input object that defines a VM snapshot
        fullname: Sample.API.Models.VmSnapshot
        interfaceName: IVmSnapshot
        namespace: Sample.API.Models
      default:
        name: vm_snapshot
        description: The input object that defines a VM snapshot
  vm_snapshot_def_status: &ref_46
    type: object
    description: The output object that defines a VM snapshot
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_254
          type: string
          description: Name of the snapshot
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.name
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.name
              description: ''
        description: Name of the snapshot
        serializedName: name
        extensions: {}
        details:
          csharp:
            name: Name
            description: Name of the snapshot
            required: false
          default:
            name: name
            description: Name of the snapshot
            required: false
      consistency_group_uuid:
        schema: &ref_250
          type: string
          description: |
            This field is same for all the entities (irrespective of kind) that
            were snapshotted together.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.consistency_group_uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.consistency_group_uuid
              description: ''
        description: |
          This field is same for all the entities (irrespective of kind) that
          were snapshotted together.
        serializedName: consistency_group_uuid
        extensions: {}
        details:
          csharp:
            name: ConsistencyGroupUuid
            description: >
              This field is same for all the entities (irrespective of kind)
              that

              were snapshotted together.
            required: false
          default:
            name: consistency_group_uuid
            description: >
              This field is same for all the entities (irrespective of kind)
              that

              were snapshotted together.
            required: false
      expiration_time_msecs:
        schema: &ref_251
          type: integer
          description: |
            The time when this snapshot expires and will be garbage collected.
            If not set, then the snapshot never expires.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.expiration_time_msecs
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.expiration_time_msecs
              description: ''
        description: |
          The time when this snapshot expires and will be garbage collected.
          If not set, then the snapshot never expires.
        serializedName: expiration_time_msecs
        extensions: {}
        details:
          csharp:
            name: ExpirationTimeMsecs
            description: |
              The time when this snapshot expires and will be garbage collected.
              If not set, then the snapshot never expires.
            required: false
          default:
            name: expiration_time_msecs
            description: |
              The time when this snapshot expires and will be garbage collected.
              If not set, then the snapshot never expires.
            required: false
      location_agnostic_uuid:
        schema: &ref_252
          type: string
          description: |
            If a snapshot is replicated to a different clusters, then all the
            instances of same snapshot will share this UUID.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.location_agnostic_uuid
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.location_agnostic_uuid
              description: ''
        description: |
          If a snapshot is replicated to a different clusters, then all the
          instances of same snapshot will share this UUID.
        serializedName: location_agnostic_uuid
        extensions: {}
        details:
          csharp:
            name: LocationAgnosticUuid
            description: |
              If a snapshot is replicated to a different clusters, then all the
              instances of same snapshot will share this UUID.
            required: false
          default:
            name: location_agnostic_uuid
            description: |
              If a snapshot is replicated to a different clusters, then all the
              instances of same snapshot will share this UUID.
            required: false
      message_list:
        schema: &ref_253
          type: array
          description: 'Any error messages for the {kind}}, if in an error state.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.message_list
              description: ''
        description: 'Any error messages for the {kind}}, if in an error state.'
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: 'Any error messages for the {kind}}, if in an error state.'
            required: false
          default:
            name: message_list
            description: 'Any error messages for the {kind}}, if in an error state.'
            required: false
      replication_target_list:
        schema: &ref_255
          type: array
          description: |
            This describes a list replication targets where this snapshot exists
            or needs to be replicated to. This is to support the replication and
            retrieve of the snapshot.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_256
            type: object
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              availability_zone_reference:
                schema: *ref_6
                description: The reference to a availability_zone
                serializedName: availability_zone_reference
                extensions: {}
                details:
                  csharp:
                    name: AvailabilityZoneReference
                    description: The reference to a availability_zone
                    required: false
                  default:
                    name: availability_zone_reference
                    description: The reference to a availability_zone
                    required: false
              cluster_reference:
                schema: *ref_7
                description: UUID of cluster in the availability zone.
                serializedName: cluster_reference
                extensions: {}
                details:
                  csharp:
                    name: ClusterReference
                    description: UUID of cluster in the availability zone.
                    required: false
                  default:
                    name: cluster_reference
                    description: UUID of cluster in the availability zone.
                    required: false
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: VmSnapshotDefStatusReplicationTargetListItemType
                description: ''
                fullname: >-
                  Sample.API.Models.VmSnapshotDefStatusReplicationTargetListItemType
                interfaceName: IVmSnapshotDefStatusReplicationTargetListItemType
                namespace: Sample.API.Models
              default:
                name: .vm_snapshot_def_status.replication_target_list.itemType
                description: ''
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.replication_target_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.replication_target_list
              description: ''
        description: |
          This describes a list replication targets where this snapshot exists
          or needs to be replicated to. This is to support the replication and
          retrieve of the snapshot.
        serializedName: replication_target_list
        extensions: {}
        details:
          csharp:
            name: ReplicationTargetList
            description: >
              This describes a list replication targets where this snapshot
              exists

              or needs to be replicated to. This is to support the replication
              and

              retrieve of the snapshot.
            required: false
          default:
            name: replication_target_list
            description: >
              This describes a list replication targets where this snapshot
              exists

              or needs to be replicated to. This is to support the replication
              and

              retrieve of the snapshot.
            required: false
      resources:
        schema: &ref_257
          type: object
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            entity_uuid:
              schema: &ref_258
                type: string
                format: UUID
                description: |
                  UUID of the base entity for which snapshot need to be taken
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_def_status.resources.entity_uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_def_status.resources.entity_uuid
                    description: ''
              description: |
                UUID of the base entity for which snapshot need to be taken
              serializedName: entity_uuid
              extensions: {}
              details:
                csharp:
                  name: EntityUuid
                  description: |
                    UUID of the base entity for which snapshot need to be taken
                  required: false
                default:
                  name: entity_uuid
                  description: |
                    UUID of the base entity for which snapshot need to be taken
                  required: false
          readOnly: false
          required: []
          title: Snapshot Resources
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmSnapshotDefStatusResources
              description: Snapshot Resources
              fullname: Sample.API.Models.VmSnapshotDefStatusResources
              interfaceName: IVmSnapshotDefStatusResources
              namespace: Sample.API.Models
            default:
              name: .vm_snapshot_def_status.resources
              description: Snapshot Resources
        description: Snapshot Resources
        serializedName: resources
        extensions: {}
        details:
          csharp:
            name: Resources
            description: Snapshot Resources
            required: false
          default:
            name: resources
            description: Snapshot Resources
            required: false
      snapshot_file_list:
        schema: &ref_259
          type: array
          description: |
            Describes the files that are included in the snapshot.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_260
            type: object
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              file_path:
                schema: &ref_261
                  type: string
                  description: |
                    Pathname of the file that participated in the snapshot.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: >-
                        .vm_snapshot_def_status.snapshot_file_list.itemType.file_path
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: >-
                        .vm_snapshot_def_status.snapshot_file_list.itemType.file_path
                      description: ''
                description: |
                  Pathname of the file that participated in the snapshot.
                serializedName: file_path
                extensions: {}
                details:
                  csharp:
                    name: FilePath
                    description: |
                      Pathname of the file that participated in the snapshot.
                    required: false
                  default:
                    name: file_path
                    description: |
                      Pathname of the file that participated in the snapshot.
                    required: false
              snapshot_file_path:
                schema: &ref_262
                  type: string
                  description: Pathname of the snapshot of the file.
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: >-
                        .vm_snapshot_def_status.snapshot_file_list.itemType.snapshot_file_path
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: >-
                        .vm_snapshot_def_status.snapshot_file_list.itemType.snapshot_file_path
                      description: ''
                description: Pathname of the snapshot of the file.
                serializedName: snapshot_file_path
                extensions: {}
                details:
                  csharp:
                    name: SnapshotFilePath
                    description: Pathname of the snapshot of the file.
                    required: false
                  default:
                    name: snapshot_file_path
                    description: Pathname of the snapshot of the file.
                    required: false
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              csharp:
                name: VmSnapshotDefStatusSnapshotFileListItemType
                description: ''
                fullname: Sample.API.Models.VmSnapshotDefStatusSnapshotFileListItemType
                interfaceName: IVmSnapshotDefStatusSnapshotFileListItemType
                namespace: Sample.API.Models
              default:
                name: .vm_snapshot_def_status.snapshot_file_list.itemType
                description: ''
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.snapshot_file_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.snapshot_file_list
              description: ''
        description: |
          Describes the files that are included in the snapshot.
        serializedName: snapshot_file_list
        extensions: {}
        details:
          csharp:
            name: SnapshotFileList
            description: |
              Describes the files that are included in the snapshot.
            required: true
          default:
            name: snapshot_file_list
            description: |
              Describes the files that are included in the snapshot.
            required: true
      snapshot_type:
        schema: &ref_263
          type: string
          description: Crash consistent or Application Consistent snapshot
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - CRASH_CONSISTENT
              - APPLICATION_CONSISTENT
          details:
            csharp:
              name: .vm_snapshot_def_status.snapshot_type
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.snapshot_type
              description: ''
        description: Crash consistent or Application Consistent snapshot
        serializedName: snapshot_type
        extensions: {}
        details:
          csharp:
            name: SnapshotType
            description: Crash consistent or Application Consistent snapshot
            required: false
          default:
            name: snapshot_type
            description: Crash consistent or Application Consistent snapshot
            required: false
      state:
        schema: &ref_264
          type: string
          description: The state of the VM snapshot.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_def_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_def_status.state
              description: ''
        description: The state of the VM snapshot.
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: The state of the VM snapshot.
            required: false
          default:
            name: state
            description: The state of the VM snapshot.
            required: false
    readOnly: false
    required:
      - snapshot_file_list
    title: VM snapshot output definitions
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotDefStatus
        description: The output object that defines a VM snapshot
        fullname: Sample.API.Models.VmSnapshotDefStatus
        interfaceName: IVmSnapshotDefStatus
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_def_status
        description: The output object that defines a VM snapshot
  vm_snapshot_intent_input: &ref_304
    type: object
    description: An intentful representation of a vm_snapshot
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_265
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_intent_input.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_45
          type: object
          description: The vm_snapshot kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_286
                type: string
                description: vm_snapshot name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.name
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.name
                    description: ''
              description: vm_snapshot name
              serializedName: name
              extensions: {}
              details:
                csharp:
                  name: Name
                  description: vm_snapshot name
                  required: false
                default:
                  name: name
                  description: vm_snapshot name
                  required: false
            categories:
              schema: &ref_281
                type: object
                description: Categories for the vm_snapshot
                additionalProperties: &ref_282
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    csharp:
                      name: .vm_snapshot_metadata.categories.additionalItemType
                      description: ''
                      fullname: <INVALID>
                      interfaceName: <INVALID>
                      namespace: <INVALID>
                    default:
                      name: .vm_snapshot_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: VmSnapshotMetadataCategories
                    description: Categories for the vm_snapshot
                    fullname: Sample.API.Models.VmSnapshotMetadataCategories
                    interfaceName: IVmSnapshotMetadataCategories
                    namespace: Sample.API.Models
                  default:
                    name: .vm_snapshot_metadata.categories
                    description: Categories for the vm_snapshot
              description: Categories for the vm_snapshot
              serializedName: categories
              extensions: {}
              details:
                csharp:
                  name: Categories
                  description: Categories for the vm_snapshot
                  required: false
                default:
                  name: categories
                  description: Categories for the vm_snapshot
                  required: false
            creation_time:
              schema: &ref_283
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when vm_snapshot was
                  created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.creation_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.creation_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when vm_snapshot was
                created
              serializedName: creation_time
              extensions: {}
              details:
                csharp:
                  name: CreationTime
                  description: >
                    UTC date and time in RFC-3339 format when vm_snapshot was
                    created
                  required: false
                default:
                  name: creation_time
                  description: >
                    UTC date and time in RFC-3339 format when vm_snapshot was
                    created
                  required: false
            kind:
              schema: &ref_284
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm_snapshot
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm_snapshot
                details:
                  csharp:
                    name: .vm_snapshot_metadata.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: true
                default:
                  name: kind
                  description: The kind name
                  required: true
            last_update_time:
              schema: &ref_285
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when vm_snapshot was last
                  updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.last_update_time
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.last_update_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when vm_snapshot was last
                updated
              serializedName: last_update_time
              extensions: {}
              details:
                csharp:
                  name: LastUpdateTime
                  description: >
                    UTC date and time in RFC-3339 format when vm_snapshot was
                    last updated
                  required: false
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when vm_snapshot was
                    last updated
                  required: false
            owner_reference:
              schema: *ref_26
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                csharp:
                  name: OwnerReference
                  description: The reference to a user
                  required: false
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: *ref_27
              description: The project the vm_snapshot is in.
              serializedName: project_reference
              extensions: {}
              details:
                csharp:
                  name: ProjectReference
                  description: The project the vm_snapshot is in.
                  required: false
                default:
                  name: project_reference
                  description: The project the vm_snapshot is in.
                  required: false
            spec_hash:
              schema: &ref_287
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.spec_hash
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                csharp:
                  name: SpecHash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_288
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.spec_version
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                csharp:
                  name: SpecVersion
                  description: Version number of the latest spec.
                  required: false
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_289
                type: string
                format: UUID
                description: vm_snapshot uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_metadata.uuid
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_metadata.uuid
                    description: ''
              description: vm_snapshot uuid
              serializedName: uuid
              extensions: {}
              details:
                csharp:
                  name: Uuid
                  description: vm_snapshot uuid
                  required: false
                default:
                  name: uuid
                  description: vm_snapshot uuid
                  required: false
          readOnly: false
          required:
            - kind
          title: vm_snapshot metadata
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmSnapshotMetadata
              description: The vm_snapshot kind metadata
              fullname: Sample.API.Models.VmSnapshotMetadata
              interfaceName: IVmSnapshotMetadata
              namespace: Sample.API.Models
            default:
              name: vm_snapshot_metadata
              description: The vm_snapshot kind metadata
        description: The vm_snapshot kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_snapshot kind metadata
            required: true
          default:
            name: metadata
            description: The vm_snapshot kind metadata
            required: true
      spec:
        schema: *ref_44
        description: The input object that defines a VM snapshot
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a VM snapshot
            required: true
          default:
            name: spec
            description: The input object that defines a VM snapshot
            required: true
    readOnly: false
    required:
      - metadata
      - spec
    title: vm_snapshot Intent Entity
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotIntentInput
        description: An intentful representation of a vm_snapshot
        fullname: Sample.API.Models.VmSnapshotIntentInput
        interfaceName: IVmSnapshotIntentInput
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_intent_input
        description: An intentful representation of a vm_snapshot
  vm_snapshot_intent_resource: &ref_47
    type: object
    description: Response object for intentful operations on a vm_snapshot
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_266
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_intent_resource.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_45
        description: The vm_snapshot kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_snapshot kind metadata
            required: true
          default:
            name: metadata
            description: The vm_snapshot kind metadata
            required: true
      spec:
        schema: *ref_44
        description: The input object that defines a VM snapshot
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a VM snapshot
            required: false
          default:
            name: spec
            description: The input object that defines a VM snapshot
            required: false
      status:
        schema: *ref_46
        description: The output object that defines a VM snapshot
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: The output object that defines a VM snapshot
            required: false
          default:
            name: status
            description: The output object that defines a VM snapshot
            required: false
    readOnly: false
    required:
      - metadata
    title: vm_snapshot Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotIntentResource
        description: Response object for intentful operations on a vm_snapshot
        fullname: Sample.API.Models.VmSnapshotIntentResource
        interfaceName: IVmSnapshotIntentResource
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_intent_resource
        description: Response object for intentful operations on a vm_snapshot
  vm_snapshot_intent_response: &ref_311
    type: object
    description: Response object for intentful operations on a vm_snapshot
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_267
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_45
        description: The vm_snapshot kind metadata
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: The vm_snapshot kind metadata
            required: true
          default:
            name: metadata
            description: The vm_snapshot kind metadata
            required: true
      spec:
        schema: *ref_44
        description: The input object that defines a VM snapshot
        serializedName: spec
        extensions: {}
        details:
          csharp:
            name: Spec
            description: The input object that defines a VM snapshot
            required: false
          default:
            name: spec
            description: The input object that defines a VM snapshot
            required: false
      status:
        schema: *ref_46
        description: The output object that defines a VM snapshot
        serializedName: status
        extensions: {}
        details:
          csharp:
            name: Status
            description: The output object that defines a VM snapshot
            required: false
          default:
            name: status
            description: The output object that defines a VM snapshot
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: vm_snapshot Intent Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotIntentResponse
        description: Response object for intentful operations on a vm_snapshot
        fullname: Sample.API.Models.VmSnapshotIntentResponse
        interfaceName: IVmSnapshotIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_intent_response
        description: Response object for intentful operations on a vm_snapshot
  vm_snapshot_list_intent_response: &ref_320
    type: object
    description: Response object for intentful operation of vm_snapshots
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_268
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_intent_response.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: true
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_269
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_47
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_intent_response.entities
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          csharp:
            name: Entities
            description: ''
            required: false
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_48
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_275
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.filter
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                csharp:
                  name: Filter
                  description: The filter used for the results
                  required: false
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_276
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: vm_snapshot
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - vm_snapshot
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.kind
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                csharp:
                  name: Kind
                  description: The kind name
                  required: false
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_277
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.length
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                csharp:
                  name: Length
                  description: The number of records retrieved relative to the offset
                  required: false
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_278
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.offset
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                csharp:
                  name: Offset
                  description: Offset from the start of the entity list
                  required: false
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_279
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.sort_attribute
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                csharp:
                  name: SortAttribute
                  description: The attribute to perform sort on
                  required: false
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: *ref_32
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                csharp:
                  name: SortOrder
                  description: The sort order in which results are returned
                  required: false
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_280
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  csharp:
                    name: .vm_snapshot_list_metadata_output.total_matches
                    description: ''
                    fullname: <INVALID>
                    interfaceName: <INVALID>
                    namespace: <INVALID>
                  default:
                    name: .vm_snapshot_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                csharp:
                  name: TotalMatches
                  description: Total matches found
                  required: false
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for vm_snapshot list output
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: VmSnapshotListMetadataOutput
              description: |
                All api calls that return a list will have this metadata block
              fullname: Sample.API.Models.VmSnapshotListMetadataOutput
              interfaceName: IVmSnapshotListMetadataOutput
              namespace: Sample.API.Models
            default:
              name: vm_snapshot_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          csharp:
            name: Metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotListIntentResponse
        description: Response object for intentful operation of vm_snapshots
        fullname: Sample.API.Models.VmSnapshotListIntentResponse
        interfaceName: IVmSnapshotListIntentResponse
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_list_intent_response
        description: Response object for intentful operation of vm_snapshots
  vm_snapshot_list_metadata: &ref_306
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_270
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_metadata.filter
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          csharp:
            name: Filter
            description: The filter in FIQL syntax used for the results.
            required: false
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_271
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm_snapshot
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm_snapshot
          details:
            csharp:
              name: .vm_snapshot_list_metadata.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_272
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_metadata.length
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          csharp:
            name: Length
            description: The number of records to retrieve relative to the offset
            required: false
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_273
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_metadata.offset
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          csharp:
            name: Offset
            description: Offset from the start of the entity list
            required: false
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_274
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_list_metadata.sort_attribute
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          csharp:
            name: SortAttribute
            description: The attribute to perform sort on
            required: false
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_32
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          csharp:
            name: SortOrder
            description: The sort order in which results are returned
            required: false
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for vm_snapshot list
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotListMetadata
        description: >
          All api calls that return a list will have this metadata block as
          input
        fullname: Sample.API.Models.VmSnapshotListMetadata
        interfaceName: IVmSnapshotListMetadata
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  vm_snapshot_list_metadata_output: *ref_48
  vm_snapshot_metadata: *ref_45
  vm_snapshot_status: &ref_312
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_290
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_291
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_292
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm_snapshot
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm_snapshot
          details:
            csharp:
              name: .vm_snapshot_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_293
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_294
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_snapshot_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_snapshot_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmSnapshotStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Sample.API.Models.VmSnapshotStatus
        interfaceName: IVmSnapshotStatus
        namespace: Sample.API.Models
      default:
        name: vm_snapshot_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  vm_status: &ref_331
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_295
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.api_version
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          csharp:
            name: ApiVersion
            description: ''
            required: false
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_296
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.code
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          csharp:
            name: Code
            description: The HTTP error code.
            required: false
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_297
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: vm
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - vm
          details:
            csharp:
              name: .vm_status.kind
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          csharp:
            name: Kind
            description: The kind name
            required: false
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_298
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_17
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.message_list
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          csharp:
            name: MessageList
            description: ''
            required: false
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_299
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            csharp:
              name: .vm_status.state
              description: ''
              fullname: <INVALID>
              interfaceName: <INVALID>
              namespace: <INVALID>
            default:
              name: .vm_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          csharp:
            name: State
            description: ''
            required: false
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: VmStatus
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
        fullname: Sample.API.Models.VmStatus
        interfaceName: IVmStatus
        namespace: Sample.API.Models
      default:
        name: vm_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  vm_vnuma_config: *ref_22
  .Parameter.uuid: &ref_301
    type: string
    format: UUID
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    pattern: >-
      ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    properties: {}
    readOnly: false
    required: []
    writeOnly: false
    extensions: {}
    details:
      csharp:
        name: .Parameter.uuid
        description: ''
        fullname: <INVALID>
        interfaceName: <INVALID>
        namespace: <INVALID>
      default:
        name: .Parameter.uuid
        description: ''
  .availability_zone_reference.kind: *ref_49
  .availability_zone_reference.name: *ref_50
  .availability_zone_reference.uuid: *ref_51
  .cluster_reference.kind: *ref_52
  .cluster_reference.name: *ref_53
  .cluster_reference.uuid: *ref_54
  .disk_address.adapter_type: *ref_55
  .disk_address.device_index: *ref_56
  .guest_customization.cloud_init: *ref_57
  .guest_customization.cloud_init.meta_data: *ref_58
  .guest_customization.cloud_init.user_data: *ref_59
  .guest_customization.is_overridable: *ref_60
  .guest_customization.sysprep: *ref_61
  .guest_customization.sysprep.install_type: *ref_62
  .guest_customization.sysprep.unattend_xml: *ref_63
  .guest_customization_status.cloud_init: *ref_64
  .guest_customization_status.cloud_init.meta_data: *ref_65
  .guest_customization_status.cloud_init.user_data: *ref_66
  .guest_customization_status.is_overridable: *ref_67
  .guest_customization_status.sysprep: *ref_68
  .guest_customization_status.sysprep.install_type: *ref_69
  .guest_customization_status.sysprep.unattend_xml: *ref_70
  .ip_address.ip: *ref_71
  .ip_address.type: *ref_72
  .message_resource.details: *ref_73
  .message_resource.details.additionalItemType: *ref_74
  .message_resource.message: *ref_75
  .message_resource.reason: *ref_76
  .network_function_chain_reference.kind: *ref_77
  .network_function_chain_reference.name: *ref_78
  .network_function_chain_reference.uuid: *ref_79
  .nutanix_guest_tools_spec.enabled_capability_list: *ref_80
  .nutanix_guest_tools_spec.enabled_capability_list.itemType: *ref_81
  .nutanix_guest_tools_spec.iso_mount_state: *ref_82
  .nutanix_guest_tools_spec.state: *ref_83
  .nutanix_guest_tools_status.available_version: *ref_84
  .nutanix_guest_tools_status.enabled_capability_list: *ref_85
  .nutanix_guest_tools_status.enabled_capability_list.itemType: *ref_86
  .nutanix_guest_tools_status.guest_os_version: *ref_87
  .nutanix_guest_tools_status.is_reachable: *ref_88
  .nutanix_guest_tools_status.iso_mount_state: *ref_89
  .nutanix_guest_tools_status.state: *ref_90
  .nutanix_guest_tools_status.version: *ref_91
  .nutanix_guest_tools_status.vm_mobility_drivers_installed: *ref_92
  .nutanix_guest_tools_status.vss_snapshot_capable: *ref_93
  .project_reference.kind: *ref_94
  .project_reference.name: *ref_95
  .project_reference.uuid: *ref_96
  .reference.kind: *ref_97
  .reference.name: *ref_98
  .reference.uuid: *ref_99
  .subnet_reference.kind: *ref_100
  .subnet_reference.name: *ref_101
  .subnet_reference.uuid: *ref_102
  .user_reference.kind: *ref_103
  .user_reference.name: *ref_104
  .user_reference.uuid: *ref_105
  .vm.description: *ref_106
  .vm.name: *ref_107
  .vm_boot_config.boot_device_order_list: *ref_108
  .vm_boot_config.boot_device_order_list.itemType: *ref_109
  .vm_boot_device.mac_address: *ref_110
  .vm_def_status.description: *ref_111
  .vm_def_status.message_list: *ref_112
  .vm_def_status.name: *ref_113
  .vm_def_status.state: *ref_114
  .vm_disk.device_properties: *ref_115
  .vm_disk.device_properties.device_type: *ref_116
  .vm_disk.disk_size_bytes: *ref_117
  .vm_disk.disk_size_mib: *ref_118
  .vm_disk.uuid: *ref_119
  .vm_gpu.device_id: *ref_120
  .vm_gpu.mode: *ref_121
  .vm_gpu.vendor: *ref_122
  .vm_gpu_output_status.device_id: *ref_123
  .vm_gpu_output_status.fraction: *ref_124
  .vm_gpu_output_status.frame_buffer_size_mib: *ref_125
  .vm_gpu_output_status.guest_driver_version: *ref_126
  .vm_gpu_output_status.mode: *ref_127
  .vm_gpu_output_status.name: *ref_128
  .vm_gpu_output_status.num_virtual_display_heads: *ref_129
  .vm_gpu_output_status.pci_address: *ref_130
  .vm_gpu_output_status.uuid: *ref_131
  .vm_gpu_output_status.vendor: *ref_132
  .vm_guest_power_state_transition_config.enable_script_exec: *ref_133
  .vm_guest_power_state_transition_config.should_fail_on_script_failure: *ref_134
  .vm_intent_input.api_version: *ref_135
  .vm_intent_resource.api_version: *ref_136
  .vm_intent_response.api_version: *ref_137
  .vm_list_intent_response.api_version: *ref_138
  .vm_list_intent_response.entities: *ref_139
  .vm_list_metadata.filter: *ref_140
  .vm_list_metadata.kind: *ref_141
  .vm_list_metadata.length: *ref_142
  .vm_list_metadata.offset: *ref_143
  .vm_list_metadata.sort_attribute: *ref_144
  .vm_list_metadata_output.filter: *ref_145
  .vm_list_metadata_output.kind: *ref_146
  .vm_list_metadata_output.length: *ref_147
  .vm_list_metadata_output.offset: *ref_148
  .vm_list_metadata_output.sort_attribute: *ref_149
  .vm_list_metadata_output.total_matches: *ref_150
  .vm_metadata.categories: *ref_151
  .vm_metadata.categories.additionalItemType: *ref_152
  .vm_metadata.creation_time: *ref_153
  .vm_metadata.kind: *ref_154
  .vm_metadata.last_update_time: *ref_155
  .vm_metadata.name: *ref_156
  .vm_metadata.spec_hash: *ref_157
  .vm_metadata.spec_version: *ref_158
  .vm_metadata.uuid: *ref_159
  .vm_nic.ip_endpoint_list: *ref_160
  .vm_nic.mac_address: *ref_161
  .vm_nic.model: *ref_162
  .vm_nic.network_function_nic_type: *ref_163
  .vm_nic.nic_type: *ref_164
  .vm_nic.uuid: *ref_165
  .vm_nic_output_status.floating_ip: *ref_166
  .vm_nic_output_status.ip_endpoint_list: *ref_167
  .vm_nic_output_status.mac_address: *ref_168
  .vm_nic_output_status.model: *ref_169
  .vm_nic_output_status.network_function_nic_type: *ref_170
  .vm_nic_output_status.nic_type: *ref_171
  .vm_nic_output_status.uuid: *ref_172
  .vm_power_state_mechanism.mechanism: *ref_173
  .vm_recovery_point.creation_time: *ref_174
  .vm_recovery_point.expiration_time: *ref_175
  .vm_recovery_point.name: *ref_176
  .vm_recovery_point.recovery_point_type: *ref_177
  .vm_recovery_point.resources: *ref_178
  .vm_recovery_point.resources.vm_recovery_point_location_agnostic_uuid: *ref_179
  .vm_recovery_point_def_status.consistency_group_uuid: *ref_180
  .vm_recovery_point_def_status.creation_time: *ref_181
  .vm_recovery_point_def_status.expiration_time: *ref_182
  .vm_recovery_point_def_status.message_list: *ref_183
  .vm_recovery_point_def_status.name: *ref_184
  .vm_recovery_point_def_status.recovery_point_type: *ref_185
  .vm_recovery_point_def_status.resources: *ref_186
  .vm_recovery_point_def_status.resources.vm_recovery_point_location_agnostic_uuid: *ref_187
  .vm_recovery_point_def_status.state: *ref_188
  .vm_recovery_point_intent_input.api_version: *ref_189
  .vm_recovery_point_intent_resource.api_version: *ref_190
  .vm_recovery_point_intent_response.api_version: *ref_191
  .vm_recovery_point_list_intent_response.api_version: *ref_192
  .vm_recovery_point_list_intent_response.entities: *ref_193
  .vm_recovery_point_list_metadata.filter: *ref_194
  .vm_recovery_point_list_metadata.kind: *ref_195
  .vm_recovery_point_list_metadata.length: *ref_196
  .vm_recovery_point_list_metadata.offset: *ref_197
  .vm_recovery_point_list_metadata.sort_attribute: *ref_198
  .vm_recovery_point_list_metadata_output.filter: *ref_199
  .vm_recovery_point_list_metadata_output.kind: *ref_200
  .vm_recovery_point_list_metadata_output.length: *ref_201
  .vm_recovery_point_list_metadata_output.offset: *ref_202
  .vm_recovery_point_list_metadata_output.sort_attribute: *ref_203
  .vm_recovery_point_list_metadata_output.total_matches: *ref_204
  .vm_recovery_point_metadata.categories: *ref_205
  .vm_recovery_point_metadata.categories.additionalItemType: *ref_206
  .vm_recovery_point_metadata.creation_time: *ref_207
  .vm_recovery_point_metadata.kind: *ref_208
  .vm_recovery_point_metadata.last_update_time: *ref_209
  .vm_recovery_point_metadata.name: *ref_210
  .vm_recovery_point_metadata.spec_hash: *ref_211
  .vm_recovery_point_metadata.spec_version: *ref_212
  .vm_recovery_point_metadata.uuid: *ref_213
  .vm_recovery_point_status.api_version: *ref_214
  .vm_recovery_point_status.code: *ref_215
  .vm_recovery_point_status.kind: *ref_216
  .vm_recovery_point_status.message_list: *ref_217
  .vm_recovery_point_status.state: *ref_218
  .vm_reference.kind: *ref_219
  .vm_reference.name: *ref_220
  .vm_reference.uuid: *ref_221
  .vm_resources.disk_list: *ref_222
  .vm_resources.gpu_list: *ref_223
  .vm_resources.guest_os_id: *ref_224
  .vm_resources.hardware_clock_timezone: *ref_225
  .vm_resources.memory_size_mib: *ref_226
  .vm_resources.nic_list: *ref_227
  .vm_resources.num_sockets: *ref_228
  .vm_resources.num_vcpus_per_socket: *ref_229
  .vm_resources.power_state: *ref_230
  .vm_resources.vga_console_enabled: *ref_231
  .vm_resources_def_status.disk_list: *ref_232
  .vm_resources_def_status.gpu_list: *ref_233
  .vm_resources_def_status.guest_os_id: *ref_234
  .vm_resources_def_status.hardware_clock_timezone: *ref_235
  .vm_resources_def_status.hypervisor_type: *ref_236
  .vm_resources_def_status.memory_size_mib: *ref_237
  .vm_resources_def_status.nic_list: *ref_238
  .vm_resources_def_status.num_sockets: *ref_239
  .vm_resources_def_status.num_vcpus_per_socket: *ref_240
  .vm_resources_def_status.power_state: *ref_241
  .vm_resources_def_status.vga_console_enabled: *ref_242
  .vm_snapshot.expiration_time_msecs: *ref_243
  .vm_snapshot.name: *ref_244
  .vm_snapshot.replication_target_list: *ref_245
  .vm_snapshot.replication_target_list.itemType: *ref_246
  .vm_snapshot.resources: *ref_247
  .vm_snapshot.resources.entity_uuid: *ref_248
  .vm_snapshot.snapshot_type: *ref_249
  .vm_snapshot_def_status.consistency_group_uuid: *ref_250
  .vm_snapshot_def_status.expiration_time_msecs: *ref_251
  .vm_snapshot_def_status.location_agnostic_uuid: *ref_252
  .vm_snapshot_def_status.message_list: *ref_253
  .vm_snapshot_def_status.name: *ref_254
  .vm_snapshot_def_status.replication_target_list: *ref_255
  .vm_snapshot_def_status.replication_target_list.itemType: *ref_256
  .vm_snapshot_def_status.resources: *ref_257
  .vm_snapshot_def_status.resources.entity_uuid: *ref_258
  .vm_snapshot_def_status.snapshot_file_list: *ref_259
  .vm_snapshot_def_status.snapshot_file_list.itemType: *ref_260
  .vm_snapshot_def_status.snapshot_file_list.itemType.file_path: *ref_261
  .vm_snapshot_def_status.snapshot_file_list.itemType.snapshot_file_path: *ref_262
  .vm_snapshot_def_status.snapshot_type: *ref_263
  .vm_snapshot_def_status.state: *ref_264
  .vm_snapshot_intent_input.api_version: *ref_265
  .vm_snapshot_intent_resource.api_version: *ref_266
  .vm_snapshot_intent_response.api_version: *ref_267
  .vm_snapshot_list_intent_response.api_version: *ref_268
  .vm_snapshot_list_intent_response.entities: *ref_269
  .vm_snapshot_list_metadata.filter: *ref_270
  .vm_snapshot_list_metadata.kind: *ref_271
  .vm_snapshot_list_metadata.length: *ref_272
  .vm_snapshot_list_metadata.offset: *ref_273
  .vm_snapshot_list_metadata.sort_attribute: *ref_274
  .vm_snapshot_list_metadata_output.filter: *ref_275
  .vm_snapshot_list_metadata_output.kind: *ref_276
  .vm_snapshot_list_metadata_output.length: *ref_277
  .vm_snapshot_list_metadata_output.offset: *ref_278
  .vm_snapshot_list_metadata_output.sort_attribute: *ref_279
  .vm_snapshot_list_metadata_output.total_matches: *ref_280
  .vm_snapshot_metadata.categories: *ref_281
  .vm_snapshot_metadata.categories.additionalItemType: *ref_282
  .vm_snapshot_metadata.creation_time: *ref_283
  .vm_snapshot_metadata.kind: *ref_284
  .vm_snapshot_metadata.last_update_time: *ref_285
  .vm_snapshot_metadata.name: *ref_286
  .vm_snapshot_metadata.spec_hash: *ref_287
  .vm_snapshot_metadata.spec_version: *ref_288
  .vm_snapshot_metadata.uuid: *ref_289
  .vm_snapshot_status.api_version: *ref_290
  .vm_snapshot_status.code: *ref_291
  .vm_snapshot_status.kind: *ref_292
  .vm_snapshot_status.message_list: *ref_293
  .vm_snapshot_status.state: *ref_294
  .vm_status.api_version: *ref_295
  .vm_status.code: *ref_296
  .vm_status.kind: *ref_297
  .vm_status.message_list: *ref_298
  .vm_status.state: *ref_299
  .vm_vnuma_config.num_vnuma_nodes: *ref_300
info:
  title: Nutanix Intentful API
  version: 3.1.0
  extensions: {}
security:
  - basicAuth: []
servers:
  - url: 'https://35.196.200.179:9440/api/nutanix/v3'
    extensions: {}
tags: []
http:
  examples: {}
  headers: {}
  links: {}
  parameters:
    uuid: &ref_308
      name: uuid
      schema: *ref_301
      description: The UUID of the entity.
      allowEmptyValue: false
      allowReserved: false
      deprecated: false
      explode: false
      in: path
      required: true
      style: simple
      extensions: {}
      details:
        csharp:
          name: uuid
          description: The UUID of the entity.
          location: Client
        default:
          name: uuid
          description: The UUID of the entity.
          location: Client
        powershell:
          name: Uuid
          description: The UUID of the entity.
          location: Client
  requestBodies:
    vm_intent_input: &ref_333
      schema: *ref_302
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
    vm_recovery_point_intent_input: &ref_323
      schema: *ref_303
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
    vm_snapshot_intent_input: &ref_325
      schema: *ref_304
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
    .GetRecoveryPoints.requestBody: &ref_316
      schema: *ref_305
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: get_entities_request
    .GetSnapshosts.requestBody: &ref_319
      schema: *ref_306
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: get_entities_request
    .getVms.requestBody: &ref_329
      schema: *ref_307
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: get_entities_request
  responses: {}
  securitySchemes: {}
  callbacks: {}
  operations:
    DeleteRecoveryPoint: &ref_337
      operationId: DeleteRecoveryPoint
      path: '/vm_recovery_points/{uuid}'
      method: delete
      description: Delete a kind recovery point given its uuid.
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      responses_new:
        '200':
          - description: Success
            headers: {}
            mimeTypes: []
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: ''
              default:
                name: '200 '
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_309
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_309
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Delete kind recovery point
      tags:
        - vm_recovery_point
      extensions:
        x-doc-hide: true
        x-ntnx-kind: vm_recovery_point
        x-ntnx-operations:
          - delete
        x-ntnx-permissions:
          - vm_recovery_point.delete
      details:
        csharp: &ref_338
          name: DeleteRecoveryPoint
          description: Delete a kind recovery point given its uuid.
          headerparameters: &ref_310 []
        default:
          name: DeleteRecoveryPoint
          description: Delete a kind recovery point given its uuid.
          headerparameters: *ref_310
    DeleteSnapshot: &ref_339
      operationId: DeleteSnapshot
      path: '/vm_snapshots/{uuid}'
      method: delete
      description: Delete a VM snapshot given its UUID
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      responses_new:
        '202':
          - schema: *ref_311
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              csharp:
                name: onAccepted
                description: >-
                  a delegate that is called when the remote service returns 202
                  (Accepted).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotIntentResponse
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_312
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_312
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Delete VM snapshot
      tags:
        - vm_snapshot
      extensions:
        x-doc-hide: true
        x-ntnx-kind: vm_snapshot
        x-ntnx-operations:
          - delete
      details:
        csharp: &ref_340
          name: DeleteSnapshot
          description: Delete a VM snapshot given its UUID
          headerparameters: &ref_313 []
        default:
          name: DeleteSnapshot
          description: Delete a VM snapshot given its UUID
          headerparameters: *ref_313
    GetRecoveryPoint: &ref_341
      operationId: GetRecoveryPoint
      path: '/vm_recovery_points/{uuid}'
      method: get
      description: 'Given a UUID, returns a kind recovery point definition.'
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      responses_new:
        '200':
          - schema: *ref_314
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_309
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_309
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get kind recovery points
      tags:
        - vm_recovery_point
      extensions:
        x-doc-hide: true
        x-ntnx-kind: vm_recovery_point
        x-ntnx-operations:
          - view
        x-ntnx-permissions:
          - vm_recovery_point.view
      details:
        csharp: &ref_342
          name: GetRecoveryPoint
          description: 'Given a UUID, returns a kind recovery point definition.'
          headerparameters: &ref_315 []
        default:
          name: GetRecoveryPoint
          description: 'Given a UUID, returns a kind recovery point definition.'
          headerparameters: *ref_315
    GetRecoveryPoints: &ref_343
      operationId: GetRecoveryPoints
      path: /vm_recovery_points/list
      method: post
      description: Get kind recovery points.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_316
      responses_new:
        '200':
          - schema: *ref_317
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointListIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_309
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get kind recovery points
      tags:
        - vm_recovery_point
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm_recovery_point
        x-ntnx-operations:
          - view
        x-ntnx-permissions:
          - vm_recovery_point.view
      details:
        csharp: &ref_344
          name: GetRecoveryPoints
          description: Get kind recovery points.
          headerparameters: &ref_318 []
        default:
          name: GetRecoveryPoints
          description: Get kind recovery points.
          headerparameters: *ref_318
    GetSnapshosts: &ref_345
      operationId: GetSnapshosts
      path: /vm_snapshots/list
      method: post
      description: |
        Get VM snapshots. Here is a list of supported filters
        - entity_uuid==UUID of the virtual machine
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_319
      responses_new:
        '200':
          - schema: *ref_320
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotListIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_312
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get VM snapshots
      tags:
        - vm_snapshot
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm_snapshot
        x-ntnx-operations:
          - view
      details:
        csharp: &ref_346
          name: GetSnapshosts
          description: |
            Get VM snapshots. Here is a list of supported filters
            - entity_uuid==UUID of the virtual machine
          headerparameters: &ref_321 []
        default:
          name: GetSnapshosts
          description: |
            Get VM snapshots. Here is a list of supported filters
            - entity_uuid==UUID of the virtual machine
          headerparameters: *ref_321
    GetSnapshot: &ref_347
      operationId: GetSnapshot
      path: '/vm_snapshots/{uuid}'
      method: get
      description: 'Given a UUID, returns a VM snapshot definition'
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      responses_new:
        '200':
          - schema: *ref_311
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_312
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_312
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get VM snapshot
      tags:
        - vm_snapshot
      extensions:
        x-doc-hide: true
        x-ntnx-kind: vm_snapshot
        x-ntnx-operations:
          - view
      details:
        csharp: &ref_348
          name: GetSnapshot
          description: 'Given a UUID, returns a VM snapshot definition'
          headerparameters: &ref_322 []
        default:
          name: GetSnapshot
          description: 'Given a UUID, returns a VM snapshot definition'
          headerparameters: *ref_322
    NewRecoveryPoint: &ref_349
      operationId: NewRecoveryPoint
      path: /vm_recovery_points
      method: post
      description: |
        Given an intentful spec, creates a recovery point with associated
        metadata
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_323
      responses_new:
        '200':
          - schema: *ref_314
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_309
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Create kind recovery point
      tags:
        - vm_recovery_point
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm_recovery_point
        x-ntnx-operations:
          - create
        x-ntnx-permissions:
          - vm_recovery_point.create
      details:
        csharp: &ref_350
          name: NewRecoveryPoint
          description: |
            Given an intentful spec, creates a recovery point with associated
            metadata
          headerparameters: &ref_324 []
        default:
          name: NewRecoveryPoint
          description: |
            Given an intentful spec, creates a recovery point with associated
            metadata
          headerparameters: *ref_324
    NewSnapshot: &ref_351
      operationId: NewSnapshot
      path: /vm_snapshots
      method: post
      description: |
        Given an intentful spec, creates a snapshot with associated metadata
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_325
      responses_new:
        '202':
          - schema: *ref_311
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              csharp:
                name: onAccepted
                description: >-
                  a delegate that is called when the remote service returns 202
                  (Accepted).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotIntentResponse
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_312
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Create VM snapshot
      tags:
        - vm_snapshot
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm_snapshot
        x-ntnx-operations:
          - create
      details:
        csharp: &ref_352
          name: NewSnapshot
          description: |
            Given an intentful spec, creates a snapshot with associated metadata
          headerparameters: &ref_326 []
        default:
          name: NewSnapshot
          description: |
            Given an intentful spec, creates a snapshot with associated metadata
          headerparameters: *ref_326
    UpdateRecoveryPoint: &ref_353
      operationId: UpdateRecoveryPoint
      path: '/vm_recovery_points/{uuid}'
      method: put
      description: |
        Given an intenful spec and recovery point uuid, update kind recovery
        point.
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      requestBody: *ref_323
      responses_new:
        '200':
          - schema: *ref_314
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_309
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_309
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmRecoveryPointStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Update kind recovery point
      tags:
        - vm_recovery_point
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 1
        x-ntnx-kind: vm_recovery_point
        x-ntnx-operations:
          - update
        x-ntnx-permissions:
          - vm_recovery_point.update
      details:
        csharp: &ref_354
          name: UpdateRecoveryPoint
          description: |
            Given an intenful spec and recovery point uuid, update kind recovery
            point.
          headerparameters: &ref_327 []
        default:
          name: UpdateRecoveryPoint
          description: |
            Given an intenful spec and recovery point uuid, update kind recovery
            point.
          headerparameters: *ref_327
    UpdateSnapshot: &ref_355
      operationId: UpdateSnapshot
      path: '/vm_snapshots/{uuid}'
      method: put
      description: |
        Given an intenful spec and snapshot UUID, update VM snapshot
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      requestBody: *ref_325
      responses_new:
        '202':
          - schema: *ref_311
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              csharp:
                name: onAccepted
                description: >-
                  a delegate that is called when the remote service returns 202
                  (Accepted).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotIntentResponse
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_312
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_312
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmSnapshotStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Update VM snapshot
      tags:
        - vm_snapshot
      extensions:
        x-doc-hide: true
        x-ms-requestBody-index: 1
        x-ntnx-kind: vm_snapshot
        x-ntnx-operations:
          - update
      details:
        csharp: &ref_356
          name: UpdateSnapshot
          description: |
            Given an intenful spec and snapshot UUID, update VM snapshot
          headerparameters: &ref_328 []
        default:
          name: UpdateSnapshot
          description: |
            Given an intenful spec and snapshot UUID, update VM snapshot
          headerparameters: *ref_328
    getVms: &ref_357
      operationId: getVms
      path: /vms/list
      method: post
      description: >
        This operation gets a list of VMs, allowing for sorting and pagination.
        Note: Entities that have not been created successfully are not listed.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_329
      responses_new:
        '200':
          - schema: *ref_330
            description: Success
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '200'
            extensions: {}
            details:
              csharp:
                name: onOK
                description: >-
                  a delegate that is called when the remote service returns 200
                  (OK).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmListIntentResponse
              default:
                name: 200 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_331
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Get a list of VMs
      tags:
        - vms
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm
        x-ntnx-operations:
          - view
      details:
        csharp: &ref_358
          name: GetVms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: &ref_332 []
        default:
          name: getVms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: *ref_332
    newVm: &ref_359
      operationId: newVm
      path: /vms
      method: post
      description: >
        This operation submits a request to create a VM based on the input
        parameters.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_333
      responses_new:
        '202':
          - schema: *ref_334
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              csharp:
                name: onAccepted
                description: >-
                  a delegate that is called when the remote service returns 202
                  (Accepted).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmIntentResponse
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_331
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Create a VM
      tags:
        - vms
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: vm
        x-ntnx-operations:
          - create
      details:
        csharp: &ref_360
          name: NewVm
          description: >
            This operation submits a request to create a VM based on the input
            parameters.
          headerparameters: &ref_335 []
        default:
          name: newVm
          description: >
            This operation submits a request to create a VM based on the input
            parameters.
          headerparameters: *ref_335
    vms: &ref_361
      operationId: vms
      path: '/vms/{uuid}'
      method: delete
      description: This operation submits a request to delete a VM.
      deprecated: false
      parameters:
        - *ref_308
      pathExtensions: {}
      responses_new:
        '202':
          - schema: *ref_334
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              csharp:
                name: onAccepted
                description: >-
                  a delegate that is called when the remote service returns 202
                  (Accepted).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmIntentResponse
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        '404':
          - schema: *ref_331
            description: Invalid UUID provided
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '404'
            extensions: {}
            details:
              csharp:
                name: onNotFound
                description: >-
                  a delegate that is called when the remote service returns 404
                  (NotFound).
                headerType: ''
                isErrorResponse: false
                responseType: Sample.API.Models.IVmStatus
              default:
                name: 404 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_331
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              csharp:
                name: onDefault
                description: >-
                  a delegate that is called when the remote service returns
                  default (any response code not handled elsewhere).
                headerType: ''
                isErrorResponse: true
                responseType: Sample.API.Models.IVmStatus
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'https://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Delete a VM
      tags:
        - vms
      extensions:
        x-ntnx-kind: vm
        x-ntnx-operations:
          - delete
      details:
        csharp: &ref_362
          name: Vms
          description: This operation submits a request to delete a VM.
          headerparameters: &ref_336 []
        default:
          name: vms
          description: This operation submits a request to delete a VM.
          headerparameters: *ref_336
  extensions: {}
commands:
  parameters: {}
  operations:
    '0':
      operationId: DeleteRecoveryPoint
      asjob: false
      callGraph:
        - *ref_337
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceRecoveryPoint
      parameters:
        - *ref_308
      pure: true
      responses: {}
      variant: RecoveryPoint
      verb: Remove
      extensions: {}
      details:
        csharp: *ref_338
        default:
          name: DeleteRecoveryPoint
          description: Delete a kind recovery point given its uuid.
          headerparameters: *ref_310
        powershell:
          name: RecoveryPointUuid
          description: Delete a kind recovery point given its uuid.
          headerparameters: *ref_310
    '1':
      operationId: DeleteSnapshot
      asjob: false
      callGraph:
        - *ref_339
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceSnapshot
      parameters:
        - *ref_308
      pure: true
      responses: {}
      variant: Snapshot
      verb: Remove
      extensions: {}
      details:
        csharp: *ref_340
        default:
          name: DeleteSnapshot
          description: Delete a VM snapshot given its UUID
          headerparameters: *ref_313
        powershell:
          name: SnapshotUuid
          description: Delete a VM snapshot given its UUID
          headerparameters: *ref_313
    '10':
      operationId: getVms
      asjob: false
      callGraph:
        - *ref_357
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceVm
      parameters:
        - name: get_entities_request
          schema: *ref_307
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: get_entities_request
              description: ''
            powershell:
              name: GetEntitiesRequest
              description: >
                All api calls that return a list will have this metadata block
                as input
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Vms
      verb: Get
      extensions: {}
      details:
        csharp: *ref_358
        default:
          name: getVms
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          headerparameters: *ref_332
        powershell:
          name: VmsFilterKindLengthOffsetSortAttributeSortOrder
          description: >
            This operation gets a list of VMs, allowing for sorting and
            pagination. Note: Entities that have not been created successfully
            are not listed.
          hasBody: true
          headerparameters: *ref_332
    '11':
      operationId: newVm
      asjob: false
      callGraph:
        - *ref_359
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceVm
      parameters:
        - name: body
          schema: *ref_302
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: body
              description: ''
            powershell:
              name: Body
              description: An intentful representation of a vm
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Vm
      verb: New
      extensions: {}
      details:
        csharp: *ref_360
        default:
          name: newVm
          description: >
            This operation submits a request to create a VM based on the input
            parameters.
          headerparameters: *ref_335
        powershell:
          name: VmApiVersionMetadataSpec
          description: >
            This operation submits a request to create a VM based on the input
            parameters.
          hasBody: true
          headerparameters: *ref_335
    '12':
      operationId: vms
      asjob: false
      callGraph:
        - *ref_361
      category: System.Management.Automation.VerbsLifecycle
      deprecated: false
      noun: VmService
      parameters:
        - *ref_308
      pure: true
      responses: {}
      variant: ''
      verb: Invoke
      extensions: {}
      details:
        csharp: *ref_362
        default:
          name: vms
          description: This operation submits a request to delete a VM.
          headerparameters: *ref_336
        powershell:
          name: Uuid
          description: This operation submits a request to delete a VM.
          headerparameters: *ref_336
    '2':
      operationId: GetRecoveryPoint
      asjob: false
      callGraph:
        - *ref_341
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceRecoveryPoint
      parameters:
        - *ref_308
      pure: true
      responses: {}
      variant: RecoveryPoint
      verb: Get
      extensions: {}
      details:
        csharp: *ref_342
        default:
          name: GetRecoveryPoint
          description: 'Given a UUID, returns a kind recovery point definition.'
          headerparameters: *ref_315
        powershell:
          name: RecoveryPointUuid
          description: 'Given a UUID, returns a kind recovery point definition.'
          headerparameters: *ref_315
    '3':
      operationId: GetRecoveryPoints
      asjob: false
      callGraph:
        - *ref_343
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceRecoveryPoint
      parameters:
        - name: get_entities_request
          schema: *ref_305
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: get_entities_request
              description: ''
            powershell:
              name: GetEntitiesRequest
              description: >
                All api calls that return a list will have this metadata block
                as input
              isBodyParameter: true
      pure: true
      responses: {}
      variant: RecoveryPoints
      verb: Get
      extensions: {}
      details:
        csharp: *ref_344
        default:
          name: GetRecoveryPoints
          description: Get kind recovery points.
          headerparameters: *ref_318
        powershell:
          name: RecoveryPointsFilterKindLengthOffsetSortAttributeSortOrder
          description: Get kind recovery points.
          hasBody: true
          headerparameters: *ref_318
    '4':
      operationId: GetSnapshosts
      asjob: false
      callGraph:
        - *ref_345
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceSnapshost
      parameters:
        - name: get_entities_request
          schema: *ref_306
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: get_entities_request
              description: ''
            powershell:
              name: GetEntitiesRequest
              description: >
                All api calls that return a list will have this metadata block
                as input
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Snapshosts
      verb: Get
      extensions: {}
      details:
        csharp: *ref_346
        default:
          name: GetSnapshosts
          description: |
            Get VM snapshots. Here is a list of supported filters
            - entity_uuid==UUID of the virtual machine
          headerparameters: *ref_321
        powershell:
          name: SnapshostsFilterKindLengthOffsetSortAttributeSortOrder
          description: |
            Get VM snapshots. Here is a list of supported filters
            - entity_uuid==UUID of the virtual machine
          hasBody: true
          headerparameters: *ref_321
    '5':
      operationId: GetSnapshot
      asjob: false
      callGraph:
        - *ref_347
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceSnapshot
      parameters:
        - *ref_308
      pure: true
      responses: {}
      variant: Snapshot
      verb: Get
      extensions: {}
      details:
        csharp: *ref_348
        default:
          name: GetSnapshot
          description: 'Given a UUID, returns a VM snapshot definition'
          headerparameters: *ref_322
        powershell:
          name: SnapshotUuid
          description: 'Given a UUID, returns a VM snapshot definition'
          headerparameters: *ref_322
    '6':
      operationId: NewRecoveryPoint
      asjob: false
      callGraph:
        - *ref_349
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceRecoveryPoint
      parameters:
        - name: body
          schema: *ref_303
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: body
              description: ''
            powershell:
              name: Body
              description: An intentful representation of a vm_recovery_point
              isBodyParameter: true
      pure: true
      responses: {}
      variant: RecoveryPoint
      verb: New
      extensions: {}
      details:
        csharp: *ref_350
        default:
          name: NewRecoveryPoint
          description: |
            Given an intentful spec, creates a recovery point with associated
            metadata
          headerparameters: *ref_324
        powershell:
          name: RecoveryPointApiVersionMetadataSpec
          description: |
            Given an intentful spec, creates a recovery point with associated
            metadata
          hasBody: true
          headerparameters: *ref_324
    '7':
      operationId: NewSnapshot
      asjob: false
      callGraph:
        - *ref_351
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceSnapshot
      parameters:
        - name: body
          schema: *ref_304
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: body
              description: ''
            powershell:
              name: Body
              description: An intentful representation of a vm_snapshot
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Snapshot
      verb: New
      extensions: {}
      details:
        csharp: *ref_352
        default:
          name: NewSnapshot
          description: |
            Given an intentful spec, creates a snapshot with associated metadata
          headerparameters: *ref_326
        powershell:
          name: SnapshotApiVersionMetadataSpec
          description: |
            Given an intentful spec, creates a snapshot with associated metadata
          hasBody: true
          headerparameters: *ref_326
    '8':
      operationId: UpdateRecoveryPoint
      asjob: false
      callGraph:
        - *ref_353
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceRecoveryPoint
      parameters:
        - *ref_308
        - name: body
          schema: *ref_303
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: body
              description: ''
            powershell:
              name: Body
              description: An intentful representation of a vm_recovery_point
              isBodyParameter: true
      pure: true
      responses: {}
      variant: RecoveryPoint
      verb: Set
      extensions: {}
      details:
        csharp: *ref_354
        default:
          name: UpdateRecoveryPoint
          description: |
            Given an intenful spec and recovery point uuid, update kind recovery
            point.
          headerparameters: *ref_327
        powershell:
          name: RecoveryPointUuidApiVersionMetadataSpec
          description: |
            Given an intenful spec and recovery point uuid, update kind recovery
            point.
          hasBody: true
          headerparameters: *ref_327
    '9':
      operationId: UpdateSnapshot
      asjob: false
      callGraph:
        - *ref_355
      category: System.Management.Automation.VerbsCommon
      deprecated: false
      noun: ServiceSnapshot
      parameters:
        - *ref_308
        - name: body
          schema: *ref_304
          description: ''
          allowEmptyValue: false
          deprecated: false
          required: false
          extensions: {}
          details:
            default:
              name: body
              description: ''
            powershell:
              name: Body
              description: An intentful representation of a vm_snapshot
              isBodyParameter: true
      pure: true
      responses: {}
      variant: Snapshot
      verb: Set
      extensions: {}
      details:
        csharp: *ref_356
        default:
          name: UpdateSnapshot
          description: |
            Given an intenful spec and snapshot UUID, update VM snapshot
          headerparameters: *ref_328
        powershell:
          name: SnapshotUuidApiVersionMetadataSpec
          description: |
            Given an intenful spec and snapshot UUID, update VM snapshot
          hasBody: true
          headerparameters: *ref_328
  extensions: {}
extensions: {}
details:
  csharp:
    name: NutanixIntentfulAPI
    description: ''
    fullname: Sample.API.NutanixIntentfulAPI
    namespace: Sample.API
  default:
    name: Nutanix Intentful API
    description: ''
