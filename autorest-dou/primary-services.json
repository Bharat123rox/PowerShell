{
    "paths" : {
        "/clusters/entity_replication_target_details": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/placement_detail"
                        }
                    }
                },
                "description": "Get entity placement details",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "description": "Entity spec",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/placement_spec"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-ntnx-kind": "cluster",
                "x-doc-hide": true,
                "summary": "Get the placement information for an entity. This will be used to\nidentify the replication target for an entity snapshot or placement of\nthe entity.\n"
            }
        },
        "/clusters/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cluster_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/cluster_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "description": "This operation gets a list of clusters, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n",
                "x-ntnx-kind": "cluster",
                "summary": "Get a list of clusters"
            }
        },
        "/clusters/multicluster_config": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Apply multicluster configuration from Prism Central.",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Apply multicluster configuration from Prism Central."
            }
        },
        "/clusters/multicluster_config/{cluster_uuid}/migrate_ssp_config": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error"
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/ssp_migration_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "description": "The UUID of the entity.",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string",
                        "name": "cluster_uuid"
                    },
                    {
                        "required": false,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ssp_config_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Migrate SSP config from a Prism Element.",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Migrate SSP config from a Prism Element."
            }
        },
        "/clusters/multicluster_config/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Update a scheduled and unprocessed multicluster configuration request.\n",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Update a scheduled and unprocessed multicluster configuration request.\n"
            },
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/multicluster_config_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Delete a scheduled and unprocessed multicluster configuration request.\n",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Delete a scheduled and unprocessed multicluster configuration request.\n"
            }
        },
        "/clusters/multicluster_config/{uuid}/cancel": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Cancel a multicluster configuration request by cancelling all queued\ncluster configuration tasks.\n",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Cancel a multicluster configuration request from Prism Central."
            }
        },
        "/clusters/multicluster_config/{uuid}/pause": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Pause a multicluster configuration request by pausing all\nqueued cluster configuration tasks.\n",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Pause a multicluster configuration request from Prism Central."
            }
        },
        "/clusters/multicluster_config/{uuid}/resume": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "description": "Resume a paused multicluster configuration request.",
                "x-ntnx-kind": "multicluster_config",
                "x-doc-hide": true,
                "summary": "Resume a paused multicluster configuration request."
            }
        },
        "/clusters/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-ntnx-operations": [
                    "update"
                ],
                "description": "This operation submits a request to update a cluster based on the input parameters.\n",
                "x-ntnx-kind": "cluster",
                "summary": "Update a cluster"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cluster_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cluster_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "description": "This operation gets a cluster.",
                "x-ntnx-kind": "cluster",
                "summary": "Get a cluster"
            }
        },
        "/clusters/{uuid}/certificates/ca_certs": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/ca_cert"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Add a new CA certificate",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Add a new CA certificate"
            }
        },
        "/clusters/{uuid}/certificates/ca_certs/{ca_name}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "name": "ca_name",
                        "in": "path",
                        "maxLength": 64
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Delete the CA certificate",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Delete the CA certificate specified by certificate authority name\n"
            }
        },
        "/clusters/{uuid}/certificates/client_auth": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Replace the CA chain for client authentication",
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ],
                "x-ntnx-kind": "client_auth",
                "description": "Replace the CA chain for client authentication"
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/ca_chain_spec"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Import CA chain for client authentication",
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ],
                "x-ntnx-kind": "client_auth",
                "description": "Import CA chain for client authentication"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Remove the CA chain for client authentication",
                "x-ntnx-ref-keys": [
                    "client_auth_reference"
                ],
                "x-ntnx-kind": "client_auth",
                "description": "Remove the CA chain for client authentication"
            }
        },
        "/clusters/{uuid}/certificates/csrs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/csrs_spec"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Download CSRs from cluster",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Download Certificate Signing Requests from cluster"
            }
        },
        "/clusters/{uuid}/certificates/csrs/{node_ip}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "name": "node_ip",
                        "in": "path"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Download CSR from a discovered node",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Download Certificate Signing Request from a discovered node"
            }
        },
        "/clusters/{uuid}/certificates/pemkey": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Generate a 2048 bits cipher length RSA key",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Generate a 2048 bits cipher length RSA key"
            }
        },
        "/clusters/{uuid}/certificates/pemkey/import": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/pemkey_spec"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Import a new key",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Import a new key"
            }
        },
        "/clusters/{uuid}/certificates/svm_certs/{kms_uuid}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "in": "path",
                        "name": "kms_uuid",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/certificate_spec_upload_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Add one or more certificates to a service VM",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Add one or more certificates to a service VM"
            }
        },
        "/clusters/{uuid}/certificates/svm_certs/{node_uuid}/{kms_uuid}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "kms_uuid",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "cert",
                        "schema": {
                            "$ref": "#/definitions/certificate"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Replace the certificate on a service VM",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Replace the certificate on a service VM"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "in": "path",
                        "name": "node_uuid",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "kms_uuid",
                        "format": "UUID",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Delete the certificate on a service VM",
                "x-ntnx-ref-keys": [
                    "certificate_reference"
                ],
                "x-ntnx-kind": "certificate",
                "description": "Delete the certificate on a service VM"
            }
        },
        "/clusters/{uuid}/cloud_credentials/{cloud_type}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Add a cloud credential for accessing cloud sites",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "Add a cloud credential for accessing cloud sites"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Delete all cloud credentials",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "Delete all cloud credentials"
            }
        },
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Get a list of cloud credentials",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "This operation gets a list of cloud credentials, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n"
            }
        },
        "/clusters/{uuid}/cloud_credentials/{cloud_type}/{cloud_credentials_id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "type": "integer",
                        "name": "cloud_credentials_id",
                        "in": "path",
                        "format": "int64"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_input"
                        }
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Update a cloud credentials",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "This operation submits a request to update a cloud credentials based on the input parameters.\n"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "type": "integer",
                        "name": "cloud_credentials_id",
                        "in": "path",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Get a cloud credentials",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "This operation gets a cloud credentials."
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/cloud_credentials_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "pattern": "(\\bAWS\\b|\\bAZURE\\b)",
                        "required": true,
                        "type": "string",
                        "name": "cloud_type",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "type": "integer",
                        "name": "cloud_credentials_id",
                        "in": "path",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "clusters"
                ],
                "x-doc-hide": true,
                "summary": "Delete a cloud credentials",
                "x-ntnx-ref-keys": [
                    "cloud_credentials_reference"
                ],
                "x-ntnx-kind": "cloud_credentials",
                "description": "This operation submits a request to delete a cloud credentials."
            }
        },
        "/images": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                },
                "description": "Images are raw ISO, QCOW2, or VMDK files that are uploaded by a user can be attached to a VM. An ISO image is attached as a virtual CD-ROM drive, and QCOW2 and VMDK files are attached as SCSI disks. An image has to be explicitly added to the self-service catalog before users can create VMs from it.\n",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "create"
                ],
                "x-ntnx-kind": "image",
                "summary": "Create a IMAGE"
            }
        },
        "/images/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/image_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }
                },
                "description": "This operation gets a list of IMAGEs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/image_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "image",
                "summary": "Get a list of IMAGEs"
            }
        },
        "/images/migrate": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/procedural_error_response"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/procedural_response"
                        }
                    }
                },
                "description": "Submits a request to create a task handling image migration operation, returns a task reference. This moves ownership of images from the PE cluster to PC. Image uuids can be obtained by querying the PE instance to list images on the PE. In the case where image uuid list is provided as empty, all images on the cluster that are not currently migrated to PC will be migrated to PC.\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/image_migrate_input"
                        }
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "migrate"
                ],
                "x-ntnx-kind": "image",
                "summary": "Migrate images from PE cluster to PC"
            }
        },
        "/images/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                },
                "description": "This operation submits a request to update a IMAGE based on the input parameters.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/image_intent_input"
                        }
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "image",
                "summary": "Update a IMAGE"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }
                },
                "description": "This operation gets a IMAGE.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "image",
                "summary": "Get a IMAGE"
            },
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/image_intent_response"
                        }
                    }
                },
                "description": "This operation submits a request to delete a IMAGE.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "images"
                ],
                "x-ntnx-operations": [
                    "delete"
                ],
                "x-ntnx-kind": "image",
                "summary": "Delete a IMAGE"
            }
        },
        "/images/{uuid}/file": {
            "put": {
                "description": "Upload the binary bits of an image based on the UUID specified. Note that the image must be created first before an upload can be done. Also, once the image has been uploaded the image cannot be changed.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "image",
                        "schema": {
                            "format": "binary"
                        }
                    },
                    {
                        "description": "Checksum type (e.g SHA_1, SHA_256).",
                        "enum": [
                            "SHA_1",
                            "SHA_256"
                        ],
                        "type": "string",
                        "name": "X-Nutanix-Checksum-Type",
                        "in": "header"
                    },
                    {
                        "description": "Checksum bytes.",
                        "type": "string",
                        "name": "X-Nutanix-Checksum-Bytes",
                        "in": "header"
                    }
                ],
                "tags": [
                    "images"
                ],
                "summary": "Upload Image Contents",
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "image",
                "consumes": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }
                }
            },
            "get": {
                "description": "Downloads the image based on the UUID specified.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "images"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "Get Image Contents",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "image",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/image_status"
                        }
                    }
                }
            }
        },
        "/subnets": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    }
                },
                "description": "This operation submits a request to create a subnet based on the input parameters.\nA subnet is a block of IP addresses.\n",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }
                    }
                ],
                "tags": [
                    "subnets"
                ],
                "x-ntnx-operations": [
                    "create"
                ],
                "x-ntnx-kind": "subnet",
                "summary": "Create a subnet"
            }
        },
        "/subnets/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/subnet_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                },
                "description": "This operation gets a list of subnets, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/subnet_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "subnets"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "subnet",
                "summary": "Get a list of subnets"
            }
        },
        "/subnets/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                },
                "description": "This operation submits a request to update a subnet based on the input parameters.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_input"
                        }
                    }
                ],
                "tags": [
                    "subnets"
                ],
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "subnet",
                "summary": "Update a subnet"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                },
                "description": "This operation gets a subnet.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "subnets"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "subnet",
                "summary": "Get a subnet"
            },
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/subnet_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/subnet_status"
                        }
                    }
                },
                "description": "This operation submits a request to delete a subnet.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "subnets"
                ],
                "x-ntnx-operations": [
                    "delete"
                ],
                "x-ntnx-kind": "subnet",
                "summary": "Delete a subnet"
            }
        },
        "/vm_recovery_points": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.create"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vm_recovery_point"
                ],
                "x-doc-hide": true,
                "summary": "Create kind recovery point",
                "x-ntnx-operations": [
                    "create"
                ],
                "x-ntnx-kind": "vm_recovery_point",
                "description": "Given an intentful spec, creates a recovery point with associated\nmetadata\n"
            }
        },
        "/vm_recovery_points/list": {
            "post": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ],
                "description": "Get kind recovery points.",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "vm_recovery_point"
                ],
                "x-doc-hide": true,
                "summary": "Get kind recovery points",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "vm_recovery_point",
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_list_intent_response"
                        }
                    }
                }
            }
        },
        "/vm_recovery_points/{uuid}": {
            "put": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.update"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vm_recovery_point"
                ],
                "x-doc-hide": true,
                "summary": "Update kind recovery point",
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "vm_recovery_point",
                "description": "Given an intenful spec and recovery point uuid, update kind recovery\npoint.\n"
            },
            "get": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.view"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vm_recovery_point"
                ],
                "x-doc-hide": true,
                "summary": "Get kind recovery points",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "vm_recovery_point",
                "description": "Given a UUID, returns a kind recovery point definition."
            },
            "delete": {
                "x-ntnx-permissions": [
                    "vm_recovery_point.delete"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_recovery_point_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vm_recovery_point"
                ],
                "x-doc-hide": true,
                "summary": "Delete kind recovery point",
                "x-ntnx-operations": [
                    "delete"
                ],
                "x-ntnx-kind": "vm_recovery_point",
                "description": "Delete a kind recovery point given its uuid."
            }
        },
        "/vm_snapshots": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vm_snapshot"
                ],
                "x-doc-hide": true,
                "summary": "Create VM snapshot",
                "x-ntnx-operations": [
                    "create"
                ],
                "x-ntnx-kind": "vm_snapshot",
                "description": "Given an intentful spec, creates a snapshot with associated metadata\n"
            }
        },
        "/vm_snapshots/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "vm_snapshot"
                ],
                "x-doc-hide": true,
                "summary": "Get VM snapshots",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "vm_snapshot",
                "description": "Get VM snapshots. Here is a list of supported filters\n- entity_uuid==UUID of the virtual machine\n"
            }
        },
        "/vm_snapshots/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vm_snapshot"
                ],
                "x-doc-hide": true,
                "summary": "Update VM snapshot",
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "vm_snapshot",
                "description": "Given an intenful spec and snapshot UUID, update VM snapshot\n"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vm_snapshot"
                ],
                "x-doc-hide": true,
                "summary": "Get VM snapshot",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "vm_snapshot",
                "description": "Given a UUID, returns a VM snapshot definition"
            },
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_snapshot_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vm_snapshot"
                ],
                "x-doc-hide": true,
                "summary": "Delete VM snapshot",
                "x-ntnx-operations": [
                    "delete"
                ],
                "x-ntnx-kind": "vm_snapshot",
                "description": "Delete a VM snapshot given its UUID"
            }
        },
        "/vms": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vms"
                ],
                "x-ntnx-operations": [
                    "create"
                ],
                "description": "This operation submits a request to create a VM based on the input parameters.\n",
                "x-ntnx-kind": "vm",
                "summary": "Create a VM"
            }
        },
        "/vms/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/vm_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "vms"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "description": "This operation gets a list of VMs, allowing for sorting and pagination. Note: Entities that have not been created successfully are not listed.\n",
                "x-ntnx-kind": "vm",
                "summary": "Get a list of VMs"
            }
        },
        "/vms/{uuid}": {
            "put": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_input"
                        }
                    }
                ],
                "tags": [
                    "vms"
                ],
                "x-ntnx-operations": [
                    "update",
                    "update_power_state"
                ],
                "description": "This operation submits a request to update a VM based on the input parameters.\n",
                "x-ntnx-kind": "vm",
                "summary": "Update a VM"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vms"
                ],
                "x-ntnx-operations": [
                    "view"
                ],
                "description": "This operation gets a VM.",
                "x-ntnx-kind": "vm",
                "summary": "Get a VM"
            },
            "delete": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/vm_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/vm_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "vms"
                ],
                "x-ntnx-operations": [
                    "delete"
                ],
                "description": "This operation submits a request to delete a VM.",
                "x-ntnx-kind": "vm",
                "summary": "Delete a VM"
            }
        },
        "/volume_groups": {
            "post": {
                "description": "Creates a volume group.",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "description": "Volume group object.",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }
                    }
                ],
                "tags": [
                    "volume_group"
                ],
                "x-doc-hide": true,
                "summary": "Creates a volume group",
                "x-ntnx-operations": [
                    "create"
                ],
                "x-ntnx-kind": "volume_group",
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    }
                }
            }
        },
        "/volume_groups/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/volume_group_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "volume_group"
                ],
                "x-doc-hide": true,
                "x-ntnx-ref-keys": [
                    "volume_group_reference",
                    "volume_group_reference_list"
                ],
                "summary": "Retrieves all volume groups.",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "volume_group",
                "description": "Retrieves all volume groups."
            }
        },
        "/volume_groups/{uuid}": {
            "put": {
                "description": "Updates specified volume group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Volume group object.",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_input"
                        }
                    }
                ],
                "tags": [
                    "volume_group"
                ],
                "x-doc-hide": true,
                "summary": "Updates specified volume group",
                "x-ntnx-operations": [
                    "update"
                ],
                "x-ntnx-kind": "volume_group",
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted",
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                }
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/volume_group_intent_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "volume_group"
                ],
                "x-doc-hide": true,
                "x-ntnx-ref-keys": [
                    "volume_group_reference"
                ],
                "summary": "Retrieves specified volume group.",
                "x-ntnx-operations": [
                    "view"
                ],
                "x-ntnx-kind": "volume_group",
                "description": "Retrieves specified volume group."
            },
            "delete": {
                "description": "Deletes a volume group.",
                "parameters": [
                    {
                        "$ref": "#/parameters/uuid"
                    }
                ],
                "tags": [
                    "volume_group"
                ],
                "x-doc-hide": true,
                "summary": "Deletes a volume group",
                "x-ntnx-operations": [
                    "delete"
                ],
                "x-ntnx-kind": "volume_group",
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    },
                    "202": {
                        "description": "Request Accepted"
                    },
                    "404": {
                        "description": "Invalid UUID provided",
                        "schema": {
                            "$ref": "#/definitions/volume_group_status"
                        }
                    }
                }
            }
        }
    }
}