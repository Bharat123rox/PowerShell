{
    "paths" : {
        "/oauth/authorize": {
            "post": {
                "responses": {
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    },
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "description": "authorization grant is provided in callback url callback url\nis in format {redirect_uri}/?code={grant_code}&state={state}\n"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "description": "Your client ID",
                        "in": "formData",
                        "name": "client_id"
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "description": "Whitespace-separated list of scopes you application needs",
                        "name": "scope"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Must be 'code'",
                        "in": "formData",
                        "name": "response_type"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Must be 'yes' or 'no'",
                        "in": "formData",
                        "name": "confirm"
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "description": "This URL is used to provide user authorization if the user accepted\naccess to the application or not\n",
                        "name": "redirect_uri"
                    },
                    {
                        "in": "formData",
                        "type": "string",
                        "description": "state parameter to prevent cross site origin attacks",
                        "name": "state"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "description": "Authorization confirmation post url",
                "x-doc-hide": true,
                "summary": "Used to get authorization code from server"
            }
        },
        "/oauth/client": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                },
                "description": "Add new Oauth Client",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "description": "Oauth client details",
                        "name": "oauth_client",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_client",
                "x-doc-hide": true,
                "summary": "This is used to register new oauth client"
            }
        },
        "/oauth/client/list": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                },
                "description": "Retrieves all oauth clients",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "get_entities_request",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_list_metadata"
                        }
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_client",
                "x-doc-hide": true,
                "summary": "Retrieves all oauth client"
            }
        },
        "/oauth/client/{client_id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    },
                    "404": {
                        "description": "Client identifier does not exists",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                },
                "description": "Update Oauth client information",
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "client_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Oauth client details",
                        "name": "oauth_client",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_input"
                        }
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_client",
                "x-doc-hide": true,
                "summary": "Used to update existing client details"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    },
                    "404": {
                        "description": "Client identifier does not exists",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                },
                "description": "Get Oauth client information",
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "client_id",
                        "in": "path"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_client",
                "x-doc-hide": true,
                "summary": "Used to fetch existing oauth client details"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    },
                    "404": {
                        "description": "Client identifier does not exists",
                        "schema": {
                            "$ref": "#/definitions/oauth_client_status"
                        }
                    }
                },
                "description": "Delete existing Oauth client information",
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "client_id",
                        "in": "path"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_client",
                "x-doc-hide": true,
                "summary": "Delete an existing Oauth client"
            }
        },
        "/oauth/generate_token": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_response"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                },
                "description": "Generates an oauth token",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "name": "oauth_generate_token_request",
                        "schema": {
                            "$ref": "#/definitions/oauth_generate_token_request"
                        }
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_token",
                "x-doc-hide": true,
                "summary": "This is used when the user is already authenticated and would like to\ncreate bearer tokens for distribution\n"
            }
        },
        "/oauth/idp_callback": {
            "get": {
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "description": "Redirect to SSP UI."
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "description": "Oauth2 callback from IDP to intent gateway",
                "x-doc-hide": true,
                "summary": "Oauth2 callback from IDP to intent gateway"
            }
        },
        "/oauth/idp_login": {
            "get": {
                "description": "Oauth2",
                "tags": [
                    "oauth"
                ],
                "x-doc-hide": true,
                "responses": {
                    "302": {
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "description": "Redirect to IDP Login Page"
                    }
                },
                "summary": "Oauth2 login to idp"
            }
        },
        "/oauth/revoke_token": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                },
                "description": "Revokes an oauth token",
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "name": "token_type_hint",
                        "in": "query",
                        "default": "access_token",
                        "x-ntnx-enum": [
                            "access_token",
                            "refresh_token"
                        ],
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "x-ntnx-kind": "oauth_token",
                "x-doc-hide": true,
                "summary": "Revoke a token will cause the token to be removed from system\nAny subsequent authorization calls with the token will fail\n"
            }
        },
        "/oauth/token": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/provider_oauth_token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    },
                    "default": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    },
                    "401": {
                        "description": "Authentication Failure",
                        "schema": {
                            "$ref": "#/definitions/oauth_status"
                        }
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "type": "string",
                        "description": "Must be authorization_code or refresh_token",
                        "in": "formData",
                        "name": "grant_type"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Your client ID",
                        "in": "formData",
                        "name": "client_id"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Your client secret",
                        "in": "formData",
                        "name": "client_secret"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "authorization_code received in redirect_uri\nmust for grant_type = authorization_code\n",
                        "in": "formData",
                        "name": "code"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "refresh_token received with previous token\nmust for grant_type = refresh_token\n",
                        "in": "formData",
                        "name": "refresh_token"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "state parameter to prevent cross site origin attacks\nuse only if passed in getting authorization\n",
                        "in": "formData",
                        "name": "state"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "redirect uri used to get authorization\nmust for grant_type = authorization_code\n",
                        "in": "formData",
                        "name": "redirect_uri"
                    }
                ],
                "tags": [
                    "oauth"
                ],
                "description": "Returns an access token",
                "x-doc-hide": true,
                "summary": "This callback is used to get token from Oauth2 provider"
            }
        }
    }
}