---
schemas:
  category_filter: &ref_0
    type: object
    description: A category filter.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      type:
        schema: &ref_20
          type: string
          description: The type of the filter being used.
          allOf: []
          anyOf: []
          default: CATEGORIES_MATCH_ANY
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - CATEGORIES_MATCH_ALL
              - CATEGORIES_MATCH_ANY
          details:
            default:
              name: .category_filter.type
              description: ''
        description: The type of the filter being used.
        serializedName: type
        extensions: {}
        details:
          default:
            name: type
            description: The type of the filter being used.
            required: false
      kind_list:
        schema: &ref_16
          type: array
          description: List of kinds associated with this filter.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_17
            type: string
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties: {}
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              default:
                name: .category_filter.kind_list.itemType
                description: ''
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .category_filter.kind_list
              description: ''
        description: List of kinds associated with this filter.
        serializedName: kind_list
        extensions: {}
        details:
          default:
            name: kind_list
            description: List of kinds associated with this filter.
            required: false
      params:
        schema: &ref_18
          type: object
          description: A list of category key and list of values.
          additionalProperties: &ref_19
            type: string
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties: {}
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              default:
                name: .category_filter.params.additionalItemType
                description: ''
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .category_filter.params
              description: A list of category key and list of values.
        description: A list of category key and list of values.
        serializedName: params
        extensions: {}
        details:
          default:
            name: params
            description: A list of category key and list of values.
            required: true
    readOnly: false
    required:
      - params
    title: A category filter
    writeOnly: false
    extensions: {}
    details:
      default:
        name: category_filter
        description: A category filter.
  ip_subnet: &ref_1
    type: object
    description: IP subnet provided as an address and prefix length.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      ip:
        schema: &ref_21
          type: string
          description: IPV4 address.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .ip_subnet.ip
              description: ''
        description: IPV4 address.
        serializedName: ip
        extensions: {}
        details:
          default:
            name: ip
            description: IPV4 address.
            required: false
      prefix_length:
        schema: &ref_22
          type: integer
          format: int32
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .ip_subnet.prefix_length
              description: ''
        description: ''
        serializedName: prefix_length
        extensions: {}
        details:
          default:
            name: prefix_length
            description: ''
            required: false
    readOnly: false
    required: []
    title: IP subnet.
    writeOnly: false
    extensions: {}
    details:
      default:
        name: ip_subnet
        description: IP subnet provided as an address and prefix length.
  message_resource: &ref_6
    type: object
    description: message.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      message:
        schema: &ref_25
          type: string
          description: 'If state is ERROR, a message describing the error.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .message_resource.message
              description: ''
        description: 'If state is ERROR, a message describing the error.'
        serializedName: message
        extensions: {}
        details:
          default:
            name: message
            description: 'If state is ERROR, a message describing the error.'
            required: true
      reason:
        schema: &ref_26
          type: string
          description: 'If state is ERROR, a machine-readable snake-cased string.'
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ACCESS_DENIED
              - ACCESS_FORBIDDEN
              - ACTION_NOT_SUPPORTED
              - AUTHENTICATION_REQUIRED
              - BEARER_TOKEN_EXPIRED
              - BEARER_TOKEN_BAD_SIGNATURE
              - CANNOT_MODIFY_PRE_CONFIGURED_REPORT
              - CATEGORY_NAME_VALUE_MISMATCH
              - CONFIGURATION_INCOMPLETE
              - CONCURRENT_REQUESTS_NOT_ALLOWED
              - DEFAULT_PROJECT_UNAVAILABLE
              - DESERIALIZATION_FAILED
              - DIRECTORY_SERVICE_CONNECTION_FAILED
              - ENTITY_ALREADY_EXISTS
              - ENTITY_DELETION_FAILED
              - ENTITY_IS_READONLY
              - ENTITY_NAME_UUID_MISMATCH
              - ENTITY_NOT_CONFIGURED
              - ENTITY_NOT_FOUND
              - ENTITY_SAVE_ERROR
              - ENTITY_UPDATE_FAILED
              - IDEMPOTENCE_UUID_CREATION_FAILED
              - IDP_NOT_REACHABLE
              - INTERNAL_ERROR
              - INVALID_ARGUMENT
              - INVALID_AZ_NAME
              - INVALID_CONTENT_TYPE
              - INVALID_DATA_FORMAT
              - INVALID_PORTAL_CONFIGURATION
              - INVALID_REQUEST
              - INVALID_UUID
              - INVALID_OWNER_REFERENCE
              - INTERNAL_AZ_PROXY_SETUP_ERROR
              - INTERNAL_ERROR_REMOTE_REQUEST
              - INTERNAL_ROLE_ACCESS_DENIED
              - INCORRECT_EVENTS_FILTER
              - MISSING_ATTRIBUTE
              - MISSING_CURRENT_USER_METADATA
              - NAME_NOT_IN_DOMAIN
              - NO_RESPONSE_RECEIVED_FROM_PORTAL
              - PE_NOT_PAIRED_WITH_PC
              - PC_NOT_PAIRED_WITH_XI_PORTAL
              - REFERENCE_ERROR
              - RESERVED_ROLE_ACCESS_DENIED
              - REQUEST_NOT_SUPPORTED
              - REMOTE_CLUSTER_IP_FETCH_FAILED
              - REMOTE_CLUSTER_NOT_CONNECTED
              - REMOTE_CONNECTION_EXISTS
              - REMOTE_CONNECTION_NOT_FOUND
              - REPORT_CONFIG_NOT_FOUND
              - REPORTING_RESOURCE_NOT_FOUND
              - REPORTING_INTERNAL_ERROR
              - SERVICE_UNAVAILABLE
              - SEARCH_RESULT_PROCESSING_ERROR
              - TOO_MANY_REQUESTS
              - UNCONFIGURED_API_KEY
              - UNCONFIGURED_PORTAL_CONNECTION
              - UNSPECIFIED_EVENTS_FILTER
              - UNSUPPORTED_AZ_PROXY_API
              - UNSUPPORTED_MEDIA_TYPE_ERROR
              - UNSUPPORTED_API_VERSION
              - UPLOAD_TO_S3_FAILED
              - VALIDATION_ERROR
              - INVALID_SSL_CERTIFICATE
              - ERROR_ATTACHING_FILE_TO_CASE
              - SPEC_UPDATE_ERROR
              - SPEC_INCOMPATIBLE_ERROR
          details:
            default:
              name: .message_resource.reason
              description: ''
        description: 'If state is ERROR, a machine-readable snake-cased string.'
        serializedName: reason
        extensions: {}
        details:
          default:
            name: reason
            description: 'If state is ERROR, a machine-readable snake-cased string.'
            required: true
      details:
        schema: &ref_23
          type: object
          description: Custom key-value details relevant to the status.
          additionalProperties: &ref_24
            type: string
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties: {}
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              default:
                name: .message_resource.details.additionalItemType
                description: ''
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .message_resource.details
              description: Custom key-value details relevant to the status.
        description: Custom key-value details relevant to the status.
        serializedName: details
        extensions: {}
        details:
          default:
            name: details
            description: Custom key-value details relevant to the status.
            required: false
    readOnly: false
    required:
      - message
      - reason
    title: Message.
    writeOnly: false
    extensions: {}
    details:
      default:
        name: message_resource
        description: message.
  network_function_chain_reference: &ref_2
    type: object
    description: The reference to a network_function_chain
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_28
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_function_chain_reference.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: ''
            required: false
      kind:
        schema: &ref_27
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: network_function_chain
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - network_function_chain
          details:
            default:
              name: .network_function_chain_reference.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: true
      uuid:
        schema: &ref_29
          type: string
          format: UUID
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          pattern: >-
            ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_function_chain_reference.uuid
              description: ''
        description: ''
        serializedName: uuid
        extensions: {}
        details:
          default:
            name: uuid
            description: ''
            required: true
    readOnly: false
    required:
      - kind
      - uuid
    title: Reference to a network_function_chain
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_function_chain_reference
        description: The reference to a network_function_chain
  network_rule: &ref_4
    type: object
    description: Network rule
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      expiration_time:
        schema: &ref_30
          type: string
          description: Timestamp of expiration time.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_rule.expiration_time
              description: ''
        description: Timestamp of expiration time.
        serializedName: expiration_time
        extensions: {}
        details:
          default:
            name: expiration_time
            description: Timestamp of expiration time.
            required: false
      filter:
        schema: *ref_0
        description: The set of categories that matching VMs need to have.
        serializedName: filter
        extensions: {}
        details:
          default:
            name: filter
            description: The set of categories that matching VMs need to have.
            required: false
      icmp_type_code_list:
        schema: &ref_31
          type: array
          description: List of ICMP types and codes allowed by this rule.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_32
            type: object
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              type:
                schema: &ref_34
                  type: integer
                  format: int32
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .network_rule.icmp_type_code_list.itemType.type
                      description: ''
                description: ''
                serializedName: type
                extensions: {}
                details:
                  default:
                    name: type
                    description: ''
                    required: false
              code:
                schema: &ref_33
                  type: integer
                  format: int32
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .network_rule.icmp_type_code_list.itemType.code
                      description: ''
                description: ''
                serializedName: code
                extensions: {}
                details:
                  default:
                    name: code
                    description: ''
                    required: false
            readOnly: false
            required: []
            writeOnly: false
            extensions: {}
            details:
              default:
                name: .network_rule.icmp_type_code_list.itemType
                description: ''
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_rule.icmp_type_code_list
              description: ''
        description: List of ICMP types and codes allowed by this rule.
        serializedName: icmp_type_code_list
        extensions: {}
        details:
          default:
            name: icmp_type_code_list
            description: List of ICMP types and codes allowed by this rule.
            required: false
      ip_subnet:
        schema: *ref_1
        description: IP subnet provided as an address and prefix length.
        serializedName: ip_subnet
        extensions: {}
        details:
          default:
            name: ip_subnet
            description: IP subnet provided as an address and prefix length.
            required: false
      network_function_chain_reference:
        schema: *ref_2
        description: The reference to a network_function_chain
        serializedName: network_function_chain_reference
        extensions: {}
        details:
          default:
            name: network_function_chain_reference
            description: The reference to a network_function_chain
            required: false
      peer_specification_type:
        schema: &ref_35
          type: string
          description: The set of categories that matching VMs need to have.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ALL
              - FILTER
              - IP_SUBNET
          details:
            default:
              name: .network_rule.peer_specification_type
              description: ''
        description: The set of categories that matching VMs need to have.
        serializedName: peer_specification_type
        extensions: {}
        details:
          default:
            name: peer_specification_type
            description: The set of categories that matching VMs need to have.
            required: false
      protocol:
        schema: &ref_36
          type: string
          description: >-
            Select a protocol to allow.  Multiple protocols can be allowed by
            repeating network_rule object.  If a protocol is not configured in
            the network_rule object then it is allowed.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - ALL
              - ICMP
              - TCP
              - UDP
          details:
            default:
              name: .network_rule.protocol
              description: ''
        description: >-
          Select a protocol to allow.  Multiple protocols can be allowed by
          repeating network_rule object.  If a protocol is not configured in the
          network_rule object then it is allowed.
        serializedName: protocol
        extensions: {}
        details:
          default:
            name: protocol
            description: >-
              Select a protocol to allow.  Multiple protocols can be allowed by
              repeating network_rule object.  If a protocol is not configured in
              the network_rule object then it is allowed.
            required: false
      tcp_port_range_list:
        schema: &ref_37
          type: array
          description: List of TCP ports that are allowed by this rule.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: &ref_3
            type: object
            description: Range of TCP/UDP ports.
            allOf: []
            anyOf: []
            deprecated: false
            enum: []
            nullable: false
            oneOf: []
            properties:
              end_port:
                schema: &ref_85
                  type: integer
                  format: int32
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .port_range.end_port
                      description: ''
                description: ''
                serializedName: end_port
                extensions: {}
                details:
                  default:
                    name: end_port
                    description: ''
                    required: false
              start_port:
                schema: &ref_86
                  type: integer
                  format: int32
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: .port_range.start_port
                      description: ''
                description: ''
                serializedName: start_port
                extensions: {}
                details:
                  default:
                    name: start_port
                    description: ''
                    required: false
            readOnly: false
            required: []
            title: TCP/UDP ports.
            writeOnly: false
            extensions: {}
            details:
              default:
                name: port_range
                description: Range of TCP/UDP ports.
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_rule.tcp_port_range_list
              description: ''
        description: List of TCP ports that are allowed by this rule.
        serializedName: tcp_port_range_list
        extensions: {}
        details:
          default:
            name: tcp_port_range_list
            description: List of TCP ports that are allowed by this rule.
            required: false
      udp_port_range_list:
        schema: &ref_38
          type: array
          description: List of UDP ports that are allowed by this rule.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_3
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_rule.udp_port_range_list
              description: ''
        description: List of UDP ports that are allowed by this rule.
        serializedName: udp_port_range_list
        extensions: {}
        details:
          default:
            name: udp_port_range_list
            description: List of UDP ports that are allowed by this rule.
            required: false
    readOnly: false
    required: []
    title: Network rule
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_rule
        description: Network rule
  network_security_rule: &ref_8
    type: object
    description: Network security rule
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_40
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 64
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: ''
            required: true
      description:
        schema: &ref_39
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          maxLength: 1000
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule.description
              description: ''
        description: ''
        serializedName: description
        extensions: {}
        details:
          default:
            name: description
            description: ''
            required: false
      resources:
        schema: &ref_7
          type: object
          description: Network security rule resources
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            app_rule:
              schema: &ref_70
                type: object
                description: >
                  These rules govern what flows are allowed. Target group is a
                  required attribute.  Empty inbound_allow_list will not
                  anything into target group. Empty outbound_allow_list will
                  allow everything from target group.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  action:
                    schema: &ref_71
                      type: string
                      description: Type of deployment of the rule.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - APPLY
                          - MONITOR
                      details:
                        default:
                          name: .network_security_rule_resources.app_rule.action
                          description: ''
                    description: Type of deployment of the rule.
                    serializedName: action
                    extensions: {}
                    details:
                      default:
                        name: action
                        description: Type of deployment of the rule.
                        required: false
                  inbound_allow_list:
                    schema: &ref_72
                      type: array
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      items: *ref_4
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.app_rule.inbound_allow_list
                          description: ''
                    description: ''
                    serializedName: inbound_allow_list
                    extensions: {}
                    details:
                      default:
                        name: inbound_allow_list
                        description: ''
                        required: false
                  outbound_allow_list:
                    schema: &ref_73
                      type: array
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      items: *ref_4
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.app_rule.outbound_allow_list
                          description: ''
                    description: ''
                    serializedName: outbound_allow_list
                    extensions: {}
                    details:
                      default:
                        name: outbound_allow_list
                        description: ''
                        required: false
                  target_group:
                    schema: &ref_5
                      type: object
                      description: Target group
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties:
                        default_internal_policy:
                          schema: &ref_90
                            type: string
                            description: >-
                              Default policy for communication within target
                              group.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions:
                              x-ntnx-enum:
                                - ALLOW_ALL
                                - DENY_ALL
                            details:
                              default:
                                name: .target_group.default_internal_policy
                                description: ''
                          description: >-
                            Default policy for communication within target
                            group.
                          serializedName: default_internal_policy
                          extensions: {}
                          details:
                            default:
                              name: default_internal_policy
                              description: >-
                                Default policy for communication within target
                                group.
                              required: false
                        filter:
                          schema: *ref_0
                          description: >-
                            The set of categories that matching VMs need to
                            have.
                          serializedName: filter
                          extensions: {}
                          details:
                            default:
                              name: filter
                              description: >-
                                The set of categories that matching VMs need to
                                have.
                              required: false
                        peer_specification_type:
                          schema: &ref_91
                            type: string
                            description: >-
                              Way to identify the object for which rule is
                              applied.
                            allOf: []
                            anyOf: []
                            deprecated: false
                            enum: []
                            nullable: false
                            oneOf: []
                            properties: {}
                            readOnly: false
                            required: []
                            writeOnly: false
                            extensions:
                              x-ntnx-enum:
                                - FILTER
                            details:
                              default:
                                name: .target_group.peer_specification_type
                                description: ''
                          description: >-
                            Way to identify the object for which rule is
                            applied.
                          serializedName: peer_specification_type
                          extensions: {}
                          details:
                            default:
                              name: peer_specification_type
                              description: >-
                                Way to identify the object for which rule is
                                applied.
                              required: false
                      readOnly: false
                      required: []
                      title: Target group
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: target_group
                          description: Target group
                    description: Target group
                    serializedName: target_group
                    extensions: {}
                    details:
                      default:
                        name: target_group
                        description: Target group
                        required: false
                readOnly: false
                required: []
                title: App rule
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_resources.app_rule
                    description: >
                      These rules govern what flows are allowed. Target group is
                      a required attribute.  Empty inbound_allow_list will not
                      anything into target group. Empty outbound_allow_list will
                      allow everything from target group.
              description: >
                These rules govern what flows are allowed. Target group is a
                required attribute.  Empty inbound_allow_list will not anything
                into target group. Empty outbound_allow_list will allow
                everything from target group.
              serializedName: app_rule
              extensions: {}
              details:
                default:
                  name: app_rule
                  description: >
                    These rules govern what flows are allowed. Target group is a
                    required attribute.  Empty inbound_allow_list will not
                    anything into target group. Empty outbound_allow_list will
                    allow everything from target group.
                  required: false
            isolation_rule:
              schema: &ref_74
                type: object
                description: These rules are used for environmental isolation.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  action:
                    schema: &ref_75
                      type: string
                      description: Type of action.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - APPLY
                          - MONITOR
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.isolation_rule.action
                          description: ''
                    description: Type of action.
                    serializedName: action
                    extensions: {}
                    details:
                      default:
                        name: action
                        description: Type of action.
                        required: false
                  first_entity_filter:
                    schema: *ref_0
                    description: The set of categories that matching VMs need to have.
                    serializedName: first_entity_filter
                    extensions: {}
                    details:
                      default:
                        name: first_entity_filter
                        description: The set of categories that matching VMs need to have.
                        required: false
                  second_entity_filter:
                    schema: *ref_0
                    description: The set of categories that matching VMs need to have.
                    serializedName: second_entity_filter
                    extensions: {}
                    details:
                      default:
                        name: second_entity_filter
                        description: The set of categories that matching VMs need to have.
                        required: false
                readOnly: false
                required: []
                title: Isolation rule
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_resources.isolation_rule
                    description: These rules are used for environmental isolation.
              description: These rules are used for environmental isolation.
              serializedName: isolation_rule
              extensions: {}
              details:
                default:
                  name: isolation_rule
                  description: These rules are used for environmental isolation.
                  required: false
            quarantine_rule:
              schema: &ref_76
                type: object
                description: >
                  These rules are used for quarantining suspected VMs. Target
                  group is a required attribute.  Empty inbound_allow_list will
                  not allow anything into target group. Empty
                  outbound_allow_list will allow everything from target group.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  action:
                    schema: &ref_77
                      type: string
                      description: Type of action.
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - APPLY
                          - MONITOR
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.quarantine_rule.action
                          description: ''
                    description: Type of action.
                    serializedName: action
                    extensions: {}
                    details:
                      default:
                        name: action
                        description: Type of action.
                        required: false
                  inbound_allow_list:
                    schema: &ref_78
                      type: array
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      items: *ref_4
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.quarantine_rule.inbound_allow_list
                          description: ''
                    description: ''
                    serializedName: inbound_allow_list
                    extensions: {}
                    details:
                      default:
                        name: inbound_allow_list
                        description: ''
                        required: false
                  outbound_allow_list:
                    schema: &ref_79
                      type: array
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      items: *ref_4
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: >-
                            .network_security_rule_resources.quarantine_rule.outbound_allow_list
                          description: ''
                    description: ''
                    serializedName: outbound_allow_list
                    extensions: {}
                    details:
                      default:
                        name: outbound_allow_list
                        description: ''
                        required: false
                  target_group:
                    schema: *ref_5
                    description: Target group
                    serializedName: target_group
                    extensions: {}
                    details:
                      default:
                        name: target_group
                        description: Target group
                        required: false
                readOnly: false
                required: []
                title: Quarantine rule
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_resources.quarantine_rule
                    description: >
                      These rules are used for quarantining suspected VMs.
                      Target group is a required attribute.  Empty
                      inbound_allow_list will not allow anything into target
                      group. Empty outbound_allow_list will allow everything
                      from target group.
              description: >
                These rules are used for quarantining suspected VMs. Target
                group is a required attribute.  Empty inbound_allow_list will
                not allow anything into target group. Empty outbound_allow_list
                will allow everything from target group.
              serializedName: quarantine_rule
              extensions: {}
              details:
                default:
                  name: quarantine_rule
                  description: >
                    These rules are used for quarantining suspected VMs. Target
                    group is a required attribute.  Empty inbound_allow_list
                    will not allow anything into target group. Empty
                    outbound_allow_list will allow everything from target group.
                  required: false
          readOnly: false
          required: []
          title: Network security rule resources
          writeOnly: false
          extensions:
            x-ntnx-one-of:
              - required:
                  - app_rule
              - required:
                  - isolation_rule
              - required:
                  - quarantine_rule
          details:
            default:
              name: network_security_rule_resources
              description: Network security rule resources
        description: Network security rule resources
        serializedName: resources
        extensions: {}
        details:
          default:
            name: resources
            description: Network security rule resources
            required: true
    readOnly: false
    required:
      - name
      - resources
    title: Network security rule
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule
        description: Network security rule
  network_security_rule_def_status: &ref_10
    type: object
    description: Network security rule status
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      name:
        schema: &ref_43
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_def_status.name
              description: ''
        description: ''
        serializedName: name
        extensions: {}
        details:
          default:
            name: name
            description: ''
            required: false
      description:
        schema: &ref_41
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_def_status.description
              description: ''
        description: ''
        serializedName: description
        extensions: {}
        details:
          default:
            name: description
            description: ''
            required: false
      message_list:
        schema: &ref_42
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_6
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_def_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          default:
            name: message_list
            description: ''
            required: false
      resources:
        schema: *ref_7
        description: Network security rule resources
        serializedName: resources
        extensions: {}
        details:
          default:
            name: resources
            description: Network security rule resources
            required: false
      state:
        schema: &ref_44
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_def_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Network security rule status
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_def_status
        description: Network security rule status
  network_security_rule_intent_input: &ref_96
    type: object
    description: An intentful representation of a network_security_rule
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_45
          type: string
          allOf: []
          anyOf: []
          default: 3.1.0
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_intent_input.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: &ref_9
          type: object
          description: The network_security_rule kind metadata
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            name:
              schema: &ref_66
                type: string
                description: network_security_rule name
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                maxLength: 64
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.name
                    description: ''
              description: network_security_rule name
              serializedName: name
              extensions: {}
              details:
                default:
                  name: name
                  description: network_security_rule name
                  required: false
            categories:
              schema: &ref_61
                type: object
                description: Categories for the network_security_rule
                additionalProperties: &ref_62
                  type: string
                  allOf: []
                  anyOf: []
                  deprecated: false
                  enum: []
                  nullable: false
                  oneOf: []
                  properties: {}
                  readOnly: false
                  required: []
                  writeOnly: false
                  extensions: {}
                  details:
                    default:
                      name: >-
                        .network_security_rule_metadata.categories.additionalItemType
                      description: ''
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.categories
                    description: Categories for the network_security_rule
              description: Categories for the network_security_rule
              serializedName: categories
              extensions: {}
              details:
                default:
                  name: categories
                  description: Categories for the network_security_rule
                  required: false
            creation_time:
              schema: &ref_63
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when
                  network_security_rule was created
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.creation_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when network_security_rule
                was created
              serializedName: creation_time
              extensions: {}
              details:
                default:
                  name: creation_time
                  description: >
                    UTC date and time in RFC-3339 format when
                    network_security_rule was created
                  required: false
            kind:
              schema: &ref_64
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: network_security_rule
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - network_security_rule
                details:
                  default:
                    name: .network_security_rule_metadata.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                default:
                  name: kind
                  description: The kind name
                  required: true
            last_update_time:
              schema: &ref_65
                type: string
                format: date-time
                description: >
                  UTC date and time in RFC-3339 format when
                  network_security_rule was last updated
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.last_update_time
                    description: ''
              description: >
                UTC date and time in RFC-3339 format when network_security_rule
                was last updated
              serializedName: last_update_time
              extensions: {}
              details:
                default:
                  name: last_update_time
                  description: >
                    UTC date and time in RFC-3339 format when
                    network_security_rule was last updated
                  required: false
            owner_reference:
              schema: &ref_15
                type: object
                description: The reference to a user
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_93
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .user_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_92
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: user
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - user
                      details:
                        default:
                          name: .user_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      default:
                        name: kind
                        description: The kind name
                        required: true
                  uuid:
                    schema: &ref_94
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .user_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - kind
                  - uuid
                title: Reference to a user
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: user_reference
                    description: The reference to a user
              description: The reference to a user
              serializedName: owner_reference
              extensions: {}
              details:
                default:
                  name: owner_reference
                  description: The reference to a user
                  required: false
            project_reference:
              schema: &ref_14
                type: object
                description: The reference to a project
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties:
                  name:
                    schema: &ref_88
                      type: string
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .project_reference.name
                          description: ''
                    description: ''
                    serializedName: name
                    extensions: {}
                    details:
                      default:
                        name: name
                        description: ''
                        required: false
                  kind:
                    schema: &ref_87
                      type: string
                      description: The kind name
                      allOf: []
                      anyOf: []
                      default: project
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions:
                        x-ntnx-enum:
                          - project
                      details:
                        default:
                          name: .project_reference.kind
                          description: ''
                    description: The kind name
                    serializedName: kind
                    extensions: {}
                    details:
                      default:
                        name: kind
                        description: The kind name
                        required: true
                  uuid:
                    schema: &ref_89
                      type: string
                      format: UUID
                      allOf: []
                      anyOf: []
                      deprecated: false
                      enum: []
                      nullable: false
                      oneOf: []
                      pattern: >-
                        ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                      properties: {}
                      readOnly: false
                      required: []
                      writeOnly: false
                      extensions: {}
                      details:
                        default:
                          name: .project_reference.uuid
                          description: ''
                    description: ''
                    serializedName: uuid
                    extensions: {}
                    details:
                      default:
                        name: uuid
                        description: ''
                        required: true
                readOnly: false
                required:
                  - kind
                  - uuid
                title: Reference to a project
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: project_reference
                    description: The reference to a project
              description: The project the network_security_rule is in.
              serializedName: project_reference
              extensions: {}
              details:
                default:
                  name: project_reference
                  description: The project the network_security_rule is in.
                  required: false
            spec_hash:
              schema: &ref_67
                type: string
                description: |
                  Hash of the spec. This will be returned from server.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.spec_hash
                    description: ''
              description: |
                Hash of the spec. This will be returned from server.
              serializedName: spec_hash
              extensions: {}
              details:
                default:
                  name: spec_hash
                  description: |
                    Hash of the spec. This will be returned from server.
                  required: false
            spec_version:
              schema: &ref_68
                type: integer
                description: Version number of the latest spec.
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.spec_version
                    description: ''
              description: Version number of the latest spec.
              serializedName: spec_version
              extensions: {}
              details:
                default:
                  name: spec_version
                  description: Version number of the latest spec.
                  required: false
            uuid:
              schema: &ref_69
                type: string
                format: UUID
                description: network_security_rule uuid
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                pattern: >-
                  ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_metadata.uuid
                    description: ''
              description: network_security_rule uuid
              serializedName: uuid
              extensions: {}
              details:
                default:
                  name: uuid
                  description: network_security_rule uuid
                  required: false
          readOnly: false
          required:
            - kind
          title: network_security_rule metadata
          writeOnly: false
          extensions: {}
          details:
            default:
              name: network_security_rule_metadata
              description: The network_security_rule kind metadata
        description: The network_security_rule kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The network_security_rule kind metadata
            required: true
      spec:
        schema: *ref_8
        description: Network security rule
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: Network security rule
            required: true
    readOnly: false
    required:
      - metadata
      - spec
    title: network_security_rule Intent Entity
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_intent_input
        description: An intentful representation of a network_security_rule
  network_security_rule_intent_resource: &ref_11
    type: object
    description: Response object for intentful operations on a network_security_rule
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_46
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_intent_resource.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      metadata:
        schema: *ref_9
        description: The network_security_rule kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The network_security_rule kind metadata
            required: true
      spec:
        schema: *ref_8
        description: Network security rule
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: Network security rule
            required: false
      status:
        schema: *ref_10
        description: Network security rule status
        serializedName: status
        extensions: {}
        details:
          default:
            name: status
            description: Network security rule status
            required: false
    readOnly: false
    required:
      - metadata
    title: network_security_rule Intent Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_intent_resource
        description: Response object for intentful operations on a network_security_rule
  network_security_rule_intent_response: &ref_98
    type: object
    description: Response object for intentful operations on a network_security_rule
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_47
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: true
      metadata:
        schema: *ref_9
        description: The network_security_rule kind metadata
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: The network_security_rule kind metadata
            required: true
      spec:
        schema: *ref_8
        description: Network security rule
        serializedName: spec
        extensions: {}
        details:
          default:
            name: spec
            description: Network security rule
            required: false
      status:
        schema: *ref_10
        description: Network security rule status
        serializedName: status
        extensions: {}
        details:
          default:
            name: status
            description: Network security rule status
            required: false
    readOnly: false
    required:
      - api_version
      - metadata
    title: network_security_rule Intent Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_intent_response
        description: Response object for intentful operations on a network_security_rule
  network_security_rule_list_intent_response:
    type: object
    description: Response object for intentful operation of network_security_rules
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_48
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_intent_response.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: true
      entities:
        schema: &ref_49
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_11
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_intent_response.entities
              description: ''
        description: ''
        serializedName: entities
        extensions: {}
        details:
          default:
            name: entities
            description: ''
            required: false
      metadata:
        schema: &ref_13
          type: object
          description: |
            All api calls that return a list will have this metadata block
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties:
            filter:
              schema: &ref_55
                type: string
                description: The filter used for the results
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.filter
                    description: ''
              description: The filter used for the results
              serializedName: filter
              extensions: {}
              details:
                default:
                  name: filter
                  description: The filter used for the results
                  required: false
            kind:
              schema: &ref_56
                type: string
                description: The kind name
                allOf: []
                anyOf: []
                default: network_security_rule
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - network_security_rule
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.kind
                    description: ''
              description: The kind name
              serializedName: kind
              extensions: {}
              details:
                default:
                  name: kind
                  description: The kind name
                  required: false
            length:
              schema: &ref_57
                type: integer
                description: The number of records retrieved relative to the offset
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.length
                    description: ''
              description: The number of records retrieved relative to the offset
              serializedName: length
              extensions: {}
              details:
                default:
                  name: length
                  description: The number of records retrieved relative to the offset
                  required: false
            offset:
              schema: &ref_58
                type: integer
                description: Offset from the start of the entity list
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.offset
                    description: ''
              description: Offset from the start of the entity list
              serializedName: offset
              extensions: {}
              details:
                default:
                  name: offset
                  description: Offset from the start of the entity list
                  required: false
            sort_attribute:
              schema: &ref_59
                type: string
                description: The attribute to perform sort on
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.sort_attribute
                    description: ''
              description: The attribute to perform sort on
              serializedName: sort_attribute
              extensions: {}
              details:
                default:
                  name: sort_attribute
                  description: The attribute to perform sort on
                  required: false
            sort_order:
              schema: &ref_12
                type: string
                description: The sort order in which results are returned
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                title: Sort order
                writeOnly: false
                extensions:
                  x-ntnx-enum:
                    - ASCENDING
                    - DESCENDING
                details:
                  default:
                    name: sort_order
                    description: ''
              description: The sort order in which results are returned
              serializedName: sort_order
              extensions: {}
              details:
                default:
                  name: sort_order
                  description: The sort order in which results are returned
                  required: false
            total_matches:
              schema: &ref_60
                type: integer
                description: Total matches found
                allOf: []
                anyOf: []
                deprecated: false
                enum: []
                nullable: false
                oneOf: []
                properties: {}
                readOnly: false
                required: []
                writeOnly: false
                extensions: {}
                details:
                  default:
                    name: .network_security_rule_list_metadata_output.total_matches
                    description: ''
              description: Total matches found
              serializedName: total_matches
              extensions: {}
              details:
                default:
                  name: total_matches
                  description: Total matches found
                  required: false
          readOnly: false
          required: []
          title: Metadata for network_security_rule list output
          writeOnly: false
          extensions: {}
          details:
            default:
              name: network_security_rule_list_metadata_output
              description: |
                All api calls that return a list will have this metadata block
        description: |
          All api calls that return a list will have this metadata block
        serializedName: metadata
        extensions: {}
        details:
          default:
            name: metadata
            description: |
              All api calls that return a list will have this metadata block
            required: true
    readOnly: false
    required:
      - api_version
      - metadata
    title: Entity Intent List Response
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_list_intent_response
        description: Response object for intentful operation of network_security_rules
  network_security_rule_list_metadata:
    type: object
    description: |
      All api calls that return a list will have this metadata block as input
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      filter:
        schema: &ref_50
          type: string
          description: The filter in FIQL syntax used for the results.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_metadata.filter
              description: ''
        description: The filter in FIQL syntax used for the results.
        serializedName: filter
        extensions: {}
        details:
          default:
            name: filter
            description: The filter in FIQL syntax used for the results.
            required: false
      kind:
        schema: &ref_51
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: network_security_rule
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - network_security_rule
          details:
            default:
              name: .network_security_rule_list_metadata.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: false
      length:
        schema: &ref_52
          type: integer
          format: int32
          description: The number of records to retrieve relative to the offset
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 1
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_metadata.length
              description: ''
        description: The number of records to retrieve relative to the offset
        serializedName: length
        extensions: {}
        details:
          default:
            name: length
            description: The number of records to retrieve relative to the offset
            required: false
      offset:
        schema: &ref_53
          type: integer
          format: int32
          description: Offset from the start of the entity list
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          minimum: 0
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_metadata.offset
              description: ''
        description: Offset from the start of the entity list
        serializedName: offset
        extensions: {}
        details:
          default:
            name: offset
            description: Offset from the start of the entity list
            required: false
      sort_attribute:
        schema: &ref_54
          type: string
          description: The attribute to perform sort on
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_list_metadata.sort_attribute
              description: ''
        description: The attribute to perform sort on
        serializedName: sort_attribute
        extensions: {}
        details:
          default:
            name: sort_attribute
            description: The attribute to perform sort on
            required: false
      sort_order:
        schema: *ref_12
        description: The sort order in which results are returned
        serializedName: sort_order
        extensions: {}
        details:
          default:
            name: sort_order
            description: The sort order in which results are returned
            required: false
    readOnly: false
    required: []
    title: Metadata for network_security_rule list
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_list_metadata
        description: >
          All api calls that return a list will have this metadata block as
          input
  network_security_rule_list_metadata_output: *ref_13
  network_security_rule_metadata: *ref_9
  network_security_rule_resources: *ref_7
  network_security_rule_status: &ref_99
    type: object
    description: |
      The status of a REST API call. Only used when there is a failure to
      report.
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    properties:
      api_version:
        schema: &ref_80
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_status.api_version
              description: ''
        description: ''
        serializedName: api_version
        extensions: {}
        details:
          default:
            name: api_version
            description: ''
            required: false
      code:
        schema: &ref_81
          type: integer
          description: The HTTP error code.
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_status.code
              description: ''
        description: The HTTP error code.
        serializedName: code
        extensions: {}
        details:
          default:
            name: code
            description: The HTTP error code.
            required: false
      kind:
        schema: &ref_82
          type: string
          description: The kind name
          allOf: []
          anyOf: []
          default: network_security_rule
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions:
            x-ntnx-enum:
              - network_security_rule
          details:
            default:
              name: .network_security_rule_status.kind
              description: ''
        description: The kind name
        serializedName: kind
        extensions: {}
        details:
          default:
            name: kind
            description: The kind name
            required: false
      message_list:
        schema: &ref_83
          type: array
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          items: *ref_6
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_status.message_list
              description: ''
        description: ''
        serializedName: message_list
        extensions: {}
        details:
          default:
            name: message_list
            description: ''
            required: false
      state:
        schema: &ref_84
          type: string
          allOf: []
          anyOf: []
          deprecated: false
          enum: []
          nullable: false
          oneOf: []
          properties: {}
          readOnly: false
          required: []
          writeOnly: false
          extensions: {}
          details:
            default:
              name: .network_security_rule_status.state
              description: ''
        description: ''
        serializedName: state
        extensions: {}
        details:
          default:
            name: state
            description: ''
            required: false
    readOnly: false
    required: []
    title: Response Kind
    writeOnly: false
    extensions: {}
    details:
      default:
        name: network_security_rule_status
        description: |
          The status of a REST API call. Only used when there is a failure to
          report.
  port_range: *ref_3
  project_reference: *ref_14
  sort_order: *ref_12
  target_group: *ref_5
  user_reference: *ref_15
  .Parameter.uuid: &ref_95
    type: string
    format: UUID
    allOf: []
    anyOf: []
    deprecated: false
    enum: []
    nullable: false
    oneOf: []
    pattern: >-
      ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    properties: {}
    readOnly: false
    required: []
    writeOnly: false
    extensions: {}
    details:
      default:
        name: .Parameter.uuid
        description: ''
  .category_filter.kind_list: *ref_16
  .category_filter.kind_list.itemType: *ref_17
  .category_filter.params: *ref_18
  .category_filter.params.additionalItemType: *ref_19
  .category_filter.type: *ref_20
  .ip_subnet.ip: *ref_21
  .ip_subnet.prefix_length: *ref_22
  .message_resource.details: *ref_23
  .message_resource.details.additionalItemType: *ref_24
  .message_resource.message: *ref_25
  .message_resource.reason: *ref_26
  .network_function_chain_reference.kind: *ref_27
  .network_function_chain_reference.name: *ref_28
  .network_function_chain_reference.uuid: *ref_29
  .network_rule.expiration_time: *ref_30
  .network_rule.icmp_type_code_list: *ref_31
  .network_rule.icmp_type_code_list.itemType: *ref_32
  .network_rule.icmp_type_code_list.itemType.code: *ref_33
  .network_rule.icmp_type_code_list.itemType.type: *ref_34
  .network_rule.peer_specification_type: *ref_35
  .network_rule.protocol: *ref_36
  .network_rule.tcp_port_range_list: *ref_37
  .network_rule.udp_port_range_list: *ref_38
  .network_security_rule.description: *ref_39
  .network_security_rule.name: *ref_40
  .network_security_rule_def_status.description: *ref_41
  .network_security_rule_def_status.message_list: *ref_42
  .network_security_rule_def_status.name: *ref_43
  .network_security_rule_def_status.state: *ref_44
  .network_security_rule_intent_input.api_version: *ref_45
  .network_security_rule_intent_resource.api_version: *ref_46
  .network_security_rule_intent_response.api_version: *ref_47
  .network_security_rule_list_intent_response.api_version: *ref_48
  .network_security_rule_list_intent_response.entities: *ref_49
  .network_security_rule_list_metadata.filter: *ref_50
  .network_security_rule_list_metadata.kind: *ref_51
  .network_security_rule_list_metadata.length: *ref_52
  .network_security_rule_list_metadata.offset: *ref_53
  .network_security_rule_list_metadata.sort_attribute: *ref_54
  .network_security_rule_list_metadata_output.filter: *ref_55
  .network_security_rule_list_metadata_output.kind: *ref_56
  .network_security_rule_list_metadata_output.length: *ref_57
  .network_security_rule_list_metadata_output.offset: *ref_58
  .network_security_rule_list_metadata_output.sort_attribute: *ref_59
  .network_security_rule_list_metadata_output.total_matches: *ref_60
  .network_security_rule_metadata.categories: *ref_61
  .network_security_rule_metadata.categories.additionalItemType: *ref_62
  .network_security_rule_metadata.creation_time: *ref_63
  .network_security_rule_metadata.kind: *ref_64
  .network_security_rule_metadata.last_update_time: *ref_65
  .network_security_rule_metadata.name: *ref_66
  .network_security_rule_metadata.spec_hash: *ref_67
  .network_security_rule_metadata.spec_version: *ref_68
  .network_security_rule_metadata.uuid: *ref_69
  .network_security_rule_resources.app_rule: *ref_70
  .network_security_rule_resources.app_rule.action: *ref_71
  .network_security_rule_resources.app_rule.inbound_allow_list: *ref_72
  .network_security_rule_resources.app_rule.outbound_allow_list: *ref_73
  .network_security_rule_resources.isolation_rule: *ref_74
  .network_security_rule_resources.isolation_rule.action: *ref_75
  .network_security_rule_resources.quarantine_rule: *ref_76
  .network_security_rule_resources.quarantine_rule.action: *ref_77
  .network_security_rule_resources.quarantine_rule.inbound_allow_list: *ref_78
  .network_security_rule_resources.quarantine_rule.outbound_allow_list: *ref_79
  .network_security_rule_status.api_version: *ref_80
  .network_security_rule_status.code: *ref_81
  .network_security_rule_status.kind: *ref_82
  .network_security_rule_status.message_list: *ref_83
  .network_security_rule_status.state: *ref_84
  .port_range.end_port: *ref_85
  .port_range.start_port: *ref_86
  .project_reference.kind: *ref_87
  .project_reference.name: *ref_88
  .project_reference.uuid: *ref_89
  .target_group.default_internal_policy: *ref_90
  .target_group.peer_specification_type: *ref_91
  .user_reference.kind: *ref_92
  .user_reference.name: *ref_93
  .user_reference.uuid: *ref_94
info:
  title: Nutanix Intentful API
  version: 3.1.0
  extensions: {}
security:
  - basicAuth: []
servers:
  - url: 'http://35.196.200.179:9440/api/nutanix/v3'
    extensions: {}
tags: []
http:
  examples: {}
  headers: {}
  links: {}
  parameters:
    uuid:
      name: uuid
      schema: *ref_95
      description: The UUID of the entity.
      allowEmptyValue: false
      allowReserved: false
      deprecated: false
      explode: false
      in: path
      required: true
      style: simple
      extensions: {}
      details:
        default:
          name: uuid
          description: The UUID of the entity.
          location: Client
  requestBodies:
    network_security_rule_intent_input: &ref_97
      schema: *ref_96
      description: ''
      contentType: application/json
      required: true
      extensions:
        x-ms-requestBody-name: body
  responses: {}
  securitySchemes: {}
  callbacks: {}
  operations:
    network_security_rules:
      operationId: network_security_rules
      path: /network_security_rules
      method: post
      description: >
        This operation submits a request to create a Network security rule based
        on the input parameters.
      deprecated: false
      parameters: []
      pathExtensions: {}
      requestBody: *ref_97
      responses_new:
        '202':
          - schema: *ref_98
            description: Request Accepted
            headers: {}
            mimeTypes:
              - application/json
            responseCode: '202'
            extensions: {}
            details:
              default:
                name: 202 application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: false
        default:
          - schema: *ref_99
            description: Internal Error
            headers: {}
            mimeTypes:
              - application/json
            responseCode: default
            extensions: {}
            details:
              default:
                name: default application/json
                description: MISSING DESCRIPTION 09
                isErrorResponse: true
      servers:
        - url: 'http://35.196.200.179:9440/api/nutanix/v3'
          extensions: {}
      summary: Create a Network security rule
      tags:
        - network_security_rules
      extensions:
        x-ms-requestBody-index: 0
        x-ntnx-kind: network_security_rule
      details:
        default:
          name: network_security_rules
          description: >
            This operation submits a request to create a Network security rule
            based on the input parameters.
          headerparameters: []
  extensions: {}
commands:
  parameters: {}
  operations: {}
  extensions: {}
extensions: {}
details:
  default:
    name: Nutanix Intentful API
    description: ''
